/*
 * vedbm
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vedbm.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vedbm.model.NodeForDescribeDBInstanceDetailOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * InstanceStructureForDescribeDBInstanceDetailOutput
 */



public class InstanceStructureForDescribeDBInstanceDetailOutput {
  @SerializedName("Nodes")
  private List<NodeForDescribeDBInstanceDetailOutput> nodes = null;

  @SerializedName("SubInstanceType")
  private String subInstanceType = null;

  @SerializedName("ZoneIds")
  private String zoneIds = null;

  public InstanceStructureForDescribeDBInstanceDetailOutput nodes(List<NodeForDescribeDBInstanceDetailOutput> nodes) {
    this.nodes = nodes;
    return this;
  }

  public InstanceStructureForDescribeDBInstanceDetailOutput addNodesItem(NodeForDescribeDBInstanceDetailOutput nodesItem) {
    if (this.nodes == null) {
      this.nodes = new ArrayList<NodeForDescribeDBInstanceDetailOutput>();
    }
    this.nodes.add(nodesItem);
    return this;
  }

   /**
   * Get nodes
   * @return nodes
  **/
  @Valid
  @Schema(description = "")
  public List<NodeForDescribeDBInstanceDetailOutput> getNodes() {
    return nodes;
  }

  public void setNodes(List<NodeForDescribeDBInstanceDetailOutput> nodes) {
    this.nodes = nodes;
  }

  public InstanceStructureForDescribeDBInstanceDetailOutput subInstanceType(String subInstanceType) {
    this.subInstanceType = subInstanceType;
    return this;
  }

   /**
   * Get subInstanceType
   * @return subInstanceType
  **/
  @Schema(description = "")
  public String getSubInstanceType() {
    return subInstanceType;
  }

  public void setSubInstanceType(String subInstanceType) {
    this.subInstanceType = subInstanceType;
  }

  public InstanceStructureForDescribeDBInstanceDetailOutput zoneIds(String zoneIds) {
    this.zoneIds = zoneIds;
    return this;
  }

   /**
   * Get zoneIds
   * @return zoneIds
  **/
  @Schema(description = "")
  public String getZoneIds() {
    return zoneIds;
  }

  public void setZoneIds(String zoneIds) {
    this.zoneIds = zoneIds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstanceStructureForDescribeDBInstanceDetailOutput instanceStructureForDescribeDBInstanceDetailOutput = (InstanceStructureForDescribeDBInstanceDetailOutput) o;
    return Objects.equals(this.nodes, instanceStructureForDescribeDBInstanceDetailOutput.nodes) &&
        Objects.equals(this.subInstanceType, instanceStructureForDescribeDBInstanceDetailOutput.subInstanceType) &&
        Objects.equals(this.zoneIds, instanceStructureForDescribeDBInstanceDetailOutput.zoneIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nodes, subInstanceType, zoneIds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstanceStructureForDescribeDBInstanceDetailOutput {\n");
    
    sb.append("    nodes: ").append(toIndentedString(nodes)).append("\n");
    sb.append("    subInstanceType: ").append(toIndentedString(subInstanceType)).append("\n");
    sb.append("    zoneIds: ").append(toIndentedString(zoneIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
