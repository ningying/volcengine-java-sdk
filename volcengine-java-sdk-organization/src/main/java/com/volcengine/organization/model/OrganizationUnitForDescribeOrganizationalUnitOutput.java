/*
 * organization
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.organization.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * OrganizationUnitForDescribeOrganizationalUnitOutput
 */


public class OrganizationUnitForDescribeOrganizationalUnitOutput {
  @SerializedName("CreatedTime")
  private String createdTime = null;

  @SerializedName("DeleteUk")
  private String deleteUk = null;

  @SerializedName("DeletedTime")
  private String deletedTime = null;

  @SerializedName("Depth")
  private Integer depth = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("OrgID")
  private String orgID = null;

  @SerializedName("OrgType")
  private Integer orgType = null;

  @SerializedName("Owner")
  private String owner = null;

  @SerializedName("ParentID")
  private String parentID = null;

  @SerializedName("UpdatedTime")
  private String updatedTime = null;

  public OrganizationUnitForDescribeOrganizationalUnitOutput createdTime(String createdTime) {
    this.createdTime = createdTime;
    return this;
  }

   /**
   * Get createdTime
   * @return createdTime
  **/
  @Schema(description = "")
  public String getCreatedTime() {
    return createdTime;
  }

  public void setCreatedTime(String createdTime) {
    this.createdTime = createdTime;
  }

  public OrganizationUnitForDescribeOrganizationalUnitOutput deleteUk(String deleteUk) {
    this.deleteUk = deleteUk;
    return this;
  }

   /**
   * Get deleteUk
   * @return deleteUk
  **/
  @Schema(description = "")
  public String getDeleteUk() {
    return deleteUk;
  }

  public void setDeleteUk(String deleteUk) {
    this.deleteUk = deleteUk;
  }

  public OrganizationUnitForDescribeOrganizationalUnitOutput deletedTime(String deletedTime) {
    this.deletedTime = deletedTime;
    return this;
  }

   /**
   * Get deletedTime
   * @return deletedTime
  **/
  @Schema(description = "")
  public String getDeletedTime() {
    return deletedTime;
  }

  public void setDeletedTime(String deletedTime) {
    this.deletedTime = deletedTime;
  }

  public OrganizationUnitForDescribeOrganizationalUnitOutput depth(Integer depth) {
    this.depth = depth;
    return this;
  }

   /**
   * Get depth
   * @return depth
  **/
  @Schema(description = "")
  public Integer getDepth() {
    return depth;
  }

  public void setDepth(Integer depth) {
    this.depth = depth;
  }

  public OrganizationUnitForDescribeOrganizationalUnitOutput description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public OrganizationUnitForDescribeOrganizationalUnitOutput ID(String ID) {
    this.ID = ID;
    return this;
  }

   /**
   * Get ID
   * @return ID
  **/
  @Schema(description = "")
  public String getID() {
    return ID;
  }

  public void setID(String ID) {
    this.ID = ID;
  }

  public OrganizationUnitForDescribeOrganizationalUnitOutput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public OrganizationUnitForDescribeOrganizationalUnitOutput orgID(String orgID) {
    this.orgID = orgID;
    return this;
  }

   /**
   * Get orgID
   * @return orgID
  **/
  @Schema(description = "")
  public String getOrgID() {
    return orgID;
  }

  public void setOrgID(String orgID) {
    this.orgID = orgID;
  }

  public OrganizationUnitForDescribeOrganizationalUnitOutput orgType(Integer orgType) {
    this.orgType = orgType;
    return this;
  }

   /**
   * Get orgType
   * @return orgType
  **/
  @Schema(description = "")
  public Integer getOrgType() {
    return orgType;
  }

  public void setOrgType(Integer orgType) {
    this.orgType = orgType;
  }

  public OrganizationUnitForDescribeOrganizationalUnitOutput owner(String owner) {
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @Schema(description = "")
  public String getOwner() {
    return owner;
  }

  public void setOwner(String owner) {
    this.owner = owner;
  }

  public OrganizationUnitForDescribeOrganizationalUnitOutput parentID(String parentID) {
    this.parentID = parentID;
    return this;
  }

   /**
   * Get parentID
   * @return parentID
  **/
  @Schema(description = "")
  public String getParentID() {
    return parentID;
  }

  public void setParentID(String parentID) {
    this.parentID = parentID;
  }

  public OrganizationUnitForDescribeOrganizationalUnitOutput updatedTime(String updatedTime) {
    this.updatedTime = updatedTime;
    return this;
  }

   /**
   * Get updatedTime
   * @return updatedTime
  **/
  @Schema(description = "")
  public String getUpdatedTime() {
    return updatedTime;
  }

  public void setUpdatedTime(String updatedTime) {
    this.updatedTime = updatedTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrganizationUnitForDescribeOrganizationalUnitOutput organizationUnitForDescribeOrganizationalUnitOutput = (OrganizationUnitForDescribeOrganizationalUnitOutput) o;
    return Objects.equals(this.createdTime, organizationUnitForDescribeOrganizationalUnitOutput.createdTime) &&
        Objects.equals(this.deleteUk, organizationUnitForDescribeOrganizationalUnitOutput.deleteUk) &&
        Objects.equals(this.deletedTime, organizationUnitForDescribeOrganizationalUnitOutput.deletedTime) &&
        Objects.equals(this.depth, organizationUnitForDescribeOrganizationalUnitOutput.depth) &&
        Objects.equals(this.description, organizationUnitForDescribeOrganizationalUnitOutput.description) &&
        Objects.equals(this.ID, organizationUnitForDescribeOrganizationalUnitOutput.ID) &&
        Objects.equals(this.name, organizationUnitForDescribeOrganizationalUnitOutput.name) &&
        Objects.equals(this.orgID, organizationUnitForDescribeOrganizationalUnitOutput.orgID) &&
        Objects.equals(this.orgType, organizationUnitForDescribeOrganizationalUnitOutput.orgType) &&
        Objects.equals(this.owner, organizationUnitForDescribeOrganizationalUnitOutput.owner) &&
        Objects.equals(this.parentID, organizationUnitForDescribeOrganizationalUnitOutput.parentID) &&
        Objects.equals(this.updatedTime, organizationUnitForDescribeOrganizationalUnitOutput.updatedTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdTime, deleteUk, deletedTime, depth, description, ID, name, orgID, orgType, owner, parentID, updatedTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrganizationUnitForDescribeOrganizationalUnitOutput {\n");
    
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    deleteUk: ").append(toIndentedString(deleteUk)).append("\n");
    sb.append("    deletedTime: ").append(toIndentedString(deletedTime)).append("\n");
    sb.append("    depth: ").append(toIndentedString(depth)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    orgID: ").append(toIndentedString(orgID)).append("\n");
    sb.append("    orgType: ").append(toIndentedString(orgType)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    parentID: ").append(toIndentedString(parentID)).append("\n");
    sb.append("    updatedTime: ").append(toIndentedString(updatedTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
