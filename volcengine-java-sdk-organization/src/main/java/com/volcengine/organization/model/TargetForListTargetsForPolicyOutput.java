/*
 * organization
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.organization.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * TargetForListTargetsForPolicyOutput
 */



public class TargetForListTargetsForPolicyOutput {
  @SerializedName("AttachedTime")
  private String attachedTime = null;

  @SerializedName("TargetID")
  private String targetID = null;

  @SerializedName("TargetName")
  private String targetName = null;

  /**
   * Gets or Sets targetType
   */
  @JsonAdapter(TargetTypeEnum.Adapter.class)
  public enum TargetTypeEnum {
    @SerializedName("OU")
    OU("OU"),
    @SerializedName("Account")
    ACCOUNT("Account");

    private String value;

    TargetTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TargetTypeEnum fromValue(String input) {
      for (TargetTypeEnum b : TargetTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TargetTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TargetTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public TargetTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return TargetTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("TargetType")
  private TargetTypeEnum targetType = null;

  public TargetForListTargetsForPolicyOutput attachedTime(String attachedTime) {
    this.attachedTime = attachedTime;
    return this;
  }

   /**
   * Get attachedTime
   * @return attachedTime
  **/
  @Schema(description = "")
  public String getAttachedTime() {
    return attachedTime;
  }

  public void setAttachedTime(String attachedTime) {
    this.attachedTime = attachedTime;
  }

  public TargetForListTargetsForPolicyOutput targetID(String targetID) {
    this.targetID = targetID;
    return this;
  }

   /**
   * Get targetID
   * @return targetID
  **/
  @Schema(description = "")
  public String getTargetID() {
    return targetID;
  }

  public void setTargetID(String targetID) {
    this.targetID = targetID;
  }

  public TargetForListTargetsForPolicyOutput targetName(String targetName) {
    this.targetName = targetName;
    return this;
  }

   /**
   * Get targetName
   * @return targetName
  **/
  @Schema(description = "")
  public String getTargetName() {
    return targetName;
  }

  public void setTargetName(String targetName) {
    this.targetName = targetName;
  }

  public TargetForListTargetsForPolicyOutput targetType(TargetTypeEnum targetType) {
    this.targetType = targetType;
    return this;
  }

   /**
   * Get targetType
   * @return targetType
  **/
  @Schema(description = "")
  public TargetTypeEnum getTargetType() {
    return targetType;
  }

  public void setTargetType(TargetTypeEnum targetType) {
    this.targetType = targetType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TargetForListTargetsForPolicyOutput targetForListTargetsForPolicyOutput = (TargetForListTargetsForPolicyOutput) o;
    return Objects.equals(this.attachedTime, targetForListTargetsForPolicyOutput.attachedTime) &&
        Objects.equals(this.targetID, targetForListTargetsForPolicyOutput.targetID) &&
        Objects.equals(this.targetName, targetForListTargetsForPolicyOutput.targetName) &&
        Objects.equals(this.targetType, targetForListTargetsForPolicyOutput.targetType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attachedTime, targetID, targetName, targetType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TargetForListTargetsForPolicyOutput {\n");
    
    sb.append("    attachedTime: ").append(toIndentedString(attachedTime)).append("\n");
    sb.append("    targetID: ").append(toIndentedString(targetID)).append("\n");
    sb.append("    targetName: ").append(toIndentedString(targetName)).append("\n");
    sb.append("    targetType: ").append(toIndentedString(targetType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
