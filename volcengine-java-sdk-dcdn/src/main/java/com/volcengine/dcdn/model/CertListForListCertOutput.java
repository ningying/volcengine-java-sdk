/*
 * dcdn
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.dcdn.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CertListForListCertOutput
 */



public class CertListForListCertOutput {
  @SerializedName("CertId")
  private String certId = null;

  @SerializedName("CertName")
  private String certName = null;

  @SerializedName("CertSource")
  private String certSource = null;

  @SerializedName("CertStatus")
  private String certStatus = null;

  @SerializedName("Domain")
  private List<String> domain = null;

  @SerializedName("Expire")
  private String expire = null;

  @SerializedName("KeyType")
  private String keyType = null;

  @SerializedName("MatchDomain")
  private List<String> matchDomain = null;

  public CertListForListCertOutput certId(String certId) {
    this.certId = certId;
    return this;
  }

   /**
   * Get certId
   * @return certId
  **/
  @Schema(description = "")
  public String getCertId() {
    return certId;
  }

  public void setCertId(String certId) {
    this.certId = certId;
  }

  public CertListForListCertOutput certName(String certName) {
    this.certName = certName;
    return this;
  }

   /**
   * Get certName
   * @return certName
  **/
  @Schema(description = "")
  public String getCertName() {
    return certName;
  }

  public void setCertName(String certName) {
    this.certName = certName;
  }

  public CertListForListCertOutput certSource(String certSource) {
    this.certSource = certSource;
    return this;
  }

   /**
   * Get certSource
   * @return certSource
  **/
  @Schema(description = "")
  public String getCertSource() {
    return certSource;
  }

  public void setCertSource(String certSource) {
    this.certSource = certSource;
  }

  public CertListForListCertOutput certStatus(String certStatus) {
    this.certStatus = certStatus;
    return this;
  }

   /**
   * Get certStatus
   * @return certStatus
  **/
  @Schema(description = "")
  public String getCertStatus() {
    return certStatus;
  }

  public void setCertStatus(String certStatus) {
    this.certStatus = certStatus;
  }

  public CertListForListCertOutput domain(List<String> domain) {
    this.domain = domain;
    return this;
  }

  public CertListForListCertOutput addDomainItem(String domainItem) {
    if (this.domain == null) {
      this.domain = new ArrayList<String>();
    }
    this.domain.add(domainItem);
    return this;
  }

   /**
   * Get domain
   * @return domain
  **/
  @Schema(description = "")
  public List<String> getDomain() {
    return domain;
  }

  public void setDomain(List<String> domain) {
    this.domain = domain;
  }

  public CertListForListCertOutput expire(String expire) {
    this.expire = expire;
    return this;
  }

   /**
   * Get expire
   * @return expire
  **/
  @Schema(description = "")
  public String getExpire() {
    return expire;
  }

  public void setExpire(String expire) {
    this.expire = expire;
  }

  public CertListForListCertOutput keyType(String keyType) {
    this.keyType = keyType;
    return this;
  }

   /**
   * Get keyType
   * @return keyType
  **/
  @Schema(description = "")
  public String getKeyType() {
    return keyType;
  }

  public void setKeyType(String keyType) {
    this.keyType = keyType;
  }

  public CertListForListCertOutput matchDomain(List<String> matchDomain) {
    this.matchDomain = matchDomain;
    return this;
  }

  public CertListForListCertOutput addMatchDomainItem(String matchDomainItem) {
    if (this.matchDomain == null) {
      this.matchDomain = new ArrayList<String>();
    }
    this.matchDomain.add(matchDomainItem);
    return this;
  }

   /**
   * Get matchDomain
   * @return matchDomain
  **/
  @Schema(description = "")
  public List<String> getMatchDomain() {
    return matchDomain;
  }

  public void setMatchDomain(List<String> matchDomain) {
    this.matchDomain = matchDomain;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CertListForListCertOutput certListForListCertOutput = (CertListForListCertOutput) o;
    return Objects.equals(this.certId, certListForListCertOutput.certId) &&
        Objects.equals(this.certName, certListForListCertOutput.certName) &&
        Objects.equals(this.certSource, certListForListCertOutput.certSource) &&
        Objects.equals(this.certStatus, certListForListCertOutput.certStatus) &&
        Objects.equals(this.domain, certListForListCertOutput.domain) &&
        Objects.equals(this.expire, certListForListCertOutput.expire) &&
        Objects.equals(this.keyType, certListForListCertOutput.keyType) &&
        Objects.equals(this.matchDomain, certListForListCertOutput.matchDomain);
  }

  @Override
  public int hashCode() {
    return Objects.hash(certId, certName, certSource, certStatus, domain, expire, keyType, matchDomain);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CertListForListCertOutput {\n");
    
    sb.append("    certId: ").append(toIndentedString(certId)).append("\n");
    sb.append("    certName: ").append(toIndentedString(certName)).append("\n");
    sb.append("    certSource: ").append(toIndentedString(certSource)).append("\n");
    sb.append("    certStatus: ").append(toIndentedString(certStatus)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    expire: ").append(toIndentedString(expire)).append("\n");
    sb.append("    keyType: ").append(toIndentedString(keyType)).append("\n");
    sb.append("    matchDomain: ").append(toIndentedString(matchDomain)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
