/*
 * dcdn
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.dcdn.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.dcdn.model.BrCompressForDescribeDomainDetailOutput;
import com.volcengine.dcdn.model.CacheForDescribeDomainDetailOutput;
import com.volcengine.dcdn.model.ConvertConvertOriginForDescribeDomainDetailOutput;
import com.volcengine.dcdn.model.GzipCompressForDescribeDomainDetailOutput;
import com.volcengine.dcdn.model.HttpsForDescribeDomainDetailOutput;
import com.volcengine.dcdn.model.IpAccessForDescribeDomainDetailOutput;
import com.volcengine.dcdn.model.PreConnectForDescribeDomainDetailOutput;
import com.volcengine.dcdn.model.RTTOptimizeForDescribeDomainDetailOutput;
import com.volcengine.dcdn.model.RefererAccessForDescribeDomainDetailOutput;
import com.volcengine.dcdn.model.StaticOptimizationForDescribeDomainDetailOutput;
import com.volcengine.dcdn.model.UrlAccessForDescribeDomainDetailOutput;
import com.volcengine.dcdn.model.UrlRedirectForDescribeDomainDetailOutput;
import com.volcengine.dcdn.model.UserAgentAccessForDescribeDomainDetailOutput;
import com.volcengine.dcdn.model.WebSocketForDescribeDomainDetailOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeDomainDetailResponse
 */



public class DescribeDomainDetailResponse extends com.volcengine.model.AbstractResponse {
  @SerializedName("BrCompress")
  private BrCompressForDescribeDomainDetailOutput brCompress = null;

  @SerializedName("Cache")
  private CacheForDescribeDomainDetailOutput cache = null;

  @SerializedName("Cname")
  private String cname = null;

  @SerializedName("CreateTime")
  private String createTime = null;

  @SerializedName("Domain")
  private String domain = null;

  @SerializedName("EnableFailOver")
  private Boolean enableFailOver = null;

  @SerializedName("GzipCompress")
  private GzipCompressForDescribeDomainDetailOutput gzipCompress = null;

  @SerializedName("Https")
  private HttpsForDescribeDomainDetailOutput https = null;

  @SerializedName("IPv6Switch")
  private Boolean ipv6Switch = null;

  @SerializedName("IpAccess")
  private IpAccessForDescribeDomainDetailOutput ipAccess = null;

  @SerializedName("IsCNAMEResolved")
  private Boolean isCNAMEResolved = null;

  @SerializedName("Origin")
  private ConvertConvertOriginForDescribeDomainDetailOutput origin = null;

  @SerializedName("PreConnect")
  private PreConnectForDescribeDomainDetailOutput preConnect = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("RTTOptimize")
  private RTTOptimizeForDescribeDomainDetailOutput rtTOptimize = null;

  @SerializedName("RecordFiling")
  private String recordFiling = null;

  @SerializedName("RefererAccess")
  private RefererAccessForDescribeDomainDetailOutput refererAccess = null;

  @SerializedName("Scope")
  private String scope = null;

  @SerializedName("ServiceType")
  private String serviceType = null;

  @SerializedName("StaticOptimization")
  private StaticOptimizationForDescribeDomainDetailOutput staticOptimization = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("StrategyType")
  private String strategyType = null;

  @SerializedName("UpdateTime")
  private String updateTime = null;

  @SerializedName("UrlAccess")
  private UrlAccessForDescribeDomainDetailOutput urlAccess = null;

  @SerializedName("UrlRedirect")
  private UrlRedirectForDescribeDomainDetailOutput urlRedirect = null;

  @SerializedName("UserAgentAccess")
  private UserAgentAccessForDescribeDomainDetailOutput userAgentAccess = null;

  @SerializedName("UserName")
  private String userName = null;

  @SerializedName("WebSocket")
  private WebSocketForDescribeDomainDetailOutput webSocket = null;

  public DescribeDomainDetailResponse brCompress(BrCompressForDescribeDomainDetailOutput brCompress) {
    this.brCompress = brCompress;
    return this;
  }

   /**
   * Get brCompress
   * @return brCompress
  **/
  @Valid
  @Schema(description = "")
  public BrCompressForDescribeDomainDetailOutput getBrCompress() {
    return brCompress;
  }

  public void setBrCompress(BrCompressForDescribeDomainDetailOutput brCompress) {
    this.brCompress = brCompress;
  }

  public DescribeDomainDetailResponse cache(CacheForDescribeDomainDetailOutput cache) {
    this.cache = cache;
    return this;
  }

   /**
   * Get cache
   * @return cache
  **/
  @Valid
  @Schema(description = "")
  public CacheForDescribeDomainDetailOutput getCache() {
    return cache;
  }

  public void setCache(CacheForDescribeDomainDetailOutput cache) {
    this.cache = cache;
  }

  public DescribeDomainDetailResponse cname(String cname) {
    this.cname = cname;
    return this;
  }

   /**
   * Get cname
   * @return cname
  **/
  @Schema(description = "")
  public String getCname() {
    return cname;
  }

  public void setCname(String cname) {
    this.cname = cname;
  }

  public DescribeDomainDetailResponse createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @Schema(description = "")
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }

  public DescribeDomainDetailResponse domain(String domain) {
    this.domain = domain;
    return this;
  }

   /**
   * Get domain
   * @return domain
  **/
  @Schema(description = "")
  public String getDomain() {
    return domain;
  }

  public void setDomain(String domain) {
    this.domain = domain;
  }

  public DescribeDomainDetailResponse enableFailOver(Boolean enableFailOver) {
    this.enableFailOver = enableFailOver;
    return this;
  }

   /**
   * Get enableFailOver
   * @return enableFailOver
  **/
  @Schema(description = "")
  public Boolean isEnableFailOver() {
    return enableFailOver;
  }

  public void setEnableFailOver(Boolean enableFailOver) {
    this.enableFailOver = enableFailOver;
  }

  public DescribeDomainDetailResponse gzipCompress(GzipCompressForDescribeDomainDetailOutput gzipCompress) {
    this.gzipCompress = gzipCompress;
    return this;
  }

   /**
   * Get gzipCompress
   * @return gzipCompress
  **/
  @Valid
  @Schema(description = "")
  public GzipCompressForDescribeDomainDetailOutput getGzipCompress() {
    return gzipCompress;
  }

  public void setGzipCompress(GzipCompressForDescribeDomainDetailOutput gzipCompress) {
    this.gzipCompress = gzipCompress;
  }

  public DescribeDomainDetailResponse https(HttpsForDescribeDomainDetailOutput https) {
    this.https = https;
    return this;
  }

   /**
   * Get https
   * @return https
  **/
  @Valid
  @Schema(description = "")
  public HttpsForDescribeDomainDetailOutput getHttps() {
    return https;
  }

  public void setHttps(HttpsForDescribeDomainDetailOutput https) {
    this.https = https;
  }

  public DescribeDomainDetailResponse ipv6Switch(Boolean ipv6Switch) {
    this.ipv6Switch = ipv6Switch;
    return this;
  }

   /**
   * Get ipv6Switch
   * @return ipv6Switch
  **/
  @Schema(description = "")
  public Boolean isIpv6Switch() {
    return ipv6Switch;
  }

  public void setIpv6Switch(Boolean ipv6Switch) {
    this.ipv6Switch = ipv6Switch;
  }

  public DescribeDomainDetailResponse ipAccess(IpAccessForDescribeDomainDetailOutput ipAccess) {
    this.ipAccess = ipAccess;
    return this;
  }

   /**
   * Get ipAccess
   * @return ipAccess
  **/
  @Valid
  @Schema(description = "")
  public IpAccessForDescribeDomainDetailOutput getIpAccess() {
    return ipAccess;
  }

  public void setIpAccess(IpAccessForDescribeDomainDetailOutput ipAccess) {
    this.ipAccess = ipAccess;
  }

  public DescribeDomainDetailResponse isCNAMEResolved(Boolean isCNAMEResolved) {
    this.isCNAMEResolved = isCNAMEResolved;
    return this;
  }

   /**
   * Get isCNAMEResolved
   * @return isCNAMEResolved
  **/
  @Schema(description = "")
  public Boolean isIsCNAMEResolved() {
    return isCNAMEResolved;
  }

  public void setIsCNAMEResolved(Boolean isCNAMEResolved) {
    this.isCNAMEResolved = isCNAMEResolved;
  }

  public DescribeDomainDetailResponse origin(ConvertConvertOriginForDescribeDomainDetailOutput origin) {
    this.origin = origin;
    return this;
  }

   /**
   * Get origin
   * @return origin
  **/
  @Valid
  @Schema(description = "")
  public ConvertConvertOriginForDescribeDomainDetailOutput getOrigin() {
    return origin;
  }

  public void setOrigin(ConvertConvertOriginForDescribeDomainDetailOutput origin) {
    this.origin = origin;
  }

  public DescribeDomainDetailResponse preConnect(PreConnectForDescribeDomainDetailOutput preConnect) {
    this.preConnect = preConnect;
    return this;
  }

   /**
   * Get preConnect
   * @return preConnect
  **/
  @Valid
  @Schema(description = "")
  public PreConnectForDescribeDomainDetailOutput getPreConnect() {
    return preConnect;
  }

  public void setPreConnect(PreConnectForDescribeDomainDetailOutput preConnect) {
    this.preConnect = preConnect;
  }

  public DescribeDomainDetailResponse projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public DescribeDomainDetailResponse rtTOptimize(RTTOptimizeForDescribeDomainDetailOutput rtTOptimize) {
    this.rtTOptimize = rtTOptimize;
    return this;
  }

   /**
   * Get rtTOptimize
   * @return rtTOptimize
  **/
  @Valid
  @Schema(description = "")
  public RTTOptimizeForDescribeDomainDetailOutput getRtTOptimize() {
    return rtTOptimize;
  }

  public void setRtTOptimize(RTTOptimizeForDescribeDomainDetailOutput rtTOptimize) {
    this.rtTOptimize = rtTOptimize;
  }

  public DescribeDomainDetailResponse recordFiling(String recordFiling) {
    this.recordFiling = recordFiling;
    return this;
  }

   /**
   * Get recordFiling
   * @return recordFiling
  **/
  @Schema(description = "")
  public String getRecordFiling() {
    return recordFiling;
  }

  public void setRecordFiling(String recordFiling) {
    this.recordFiling = recordFiling;
  }

  public DescribeDomainDetailResponse refererAccess(RefererAccessForDescribeDomainDetailOutput refererAccess) {
    this.refererAccess = refererAccess;
    return this;
  }

   /**
   * Get refererAccess
   * @return refererAccess
  **/
  @Valid
  @Schema(description = "")
  public RefererAccessForDescribeDomainDetailOutput getRefererAccess() {
    return refererAccess;
  }

  public void setRefererAccess(RefererAccessForDescribeDomainDetailOutput refererAccess) {
    this.refererAccess = refererAccess;
  }

  public DescribeDomainDetailResponse scope(String scope) {
    this.scope = scope;
    return this;
  }

   /**
   * Get scope
   * @return scope
  **/
  @Schema(description = "")
  public String getScope() {
    return scope;
  }

  public void setScope(String scope) {
    this.scope = scope;
  }

  public DescribeDomainDetailResponse serviceType(String serviceType) {
    this.serviceType = serviceType;
    return this;
  }

   /**
   * Get serviceType
   * @return serviceType
  **/
  @Schema(description = "")
  public String getServiceType() {
    return serviceType;
  }

  public void setServiceType(String serviceType) {
    this.serviceType = serviceType;
  }

  public DescribeDomainDetailResponse staticOptimization(StaticOptimizationForDescribeDomainDetailOutput staticOptimization) {
    this.staticOptimization = staticOptimization;
    return this;
  }

   /**
   * Get staticOptimization
   * @return staticOptimization
  **/
  @Valid
  @Schema(description = "")
  public StaticOptimizationForDescribeDomainDetailOutput getStaticOptimization() {
    return staticOptimization;
  }

  public void setStaticOptimization(StaticOptimizationForDescribeDomainDetailOutput staticOptimization) {
    this.staticOptimization = staticOptimization;
  }

  public DescribeDomainDetailResponse status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public DescribeDomainDetailResponse strategyType(String strategyType) {
    this.strategyType = strategyType;
    return this;
  }

   /**
   * Get strategyType
   * @return strategyType
  **/
  @Schema(description = "")
  public String getStrategyType() {
    return strategyType;
  }

  public void setStrategyType(String strategyType) {
    this.strategyType = strategyType;
  }

  public DescribeDomainDetailResponse updateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @Schema(description = "")
  public String getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }

  public DescribeDomainDetailResponse urlAccess(UrlAccessForDescribeDomainDetailOutput urlAccess) {
    this.urlAccess = urlAccess;
    return this;
  }

   /**
   * Get urlAccess
   * @return urlAccess
  **/
  @Valid
  @Schema(description = "")
  public UrlAccessForDescribeDomainDetailOutput getUrlAccess() {
    return urlAccess;
  }

  public void setUrlAccess(UrlAccessForDescribeDomainDetailOutput urlAccess) {
    this.urlAccess = urlAccess;
  }

  public DescribeDomainDetailResponse urlRedirect(UrlRedirectForDescribeDomainDetailOutput urlRedirect) {
    this.urlRedirect = urlRedirect;
    return this;
  }

   /**
   * Get urlRedirect
   * @return urlRedirect
  **/
  @Valid
  @Schema(description = "")
  public UrlRedirectForDescribeDomainDetailOutput getUrlRedirect() {
    return urlRedirect;
  }

  public void setUrlRedirect(UrlRedirectForDescribeDomainDetailOutput urlRedirect) {
    this.urlRedirect = urlRedirect;
  }

  public DescribeDomainDetailResponse userAgentAccess(UserAgentAccessForDescribeDomainDetailOutput userAgentAccess) {
    this.userAgentAccess = userAgentAccess;
    return this;
  }

   /**
   * Get userAgentAccess
   * @return userAgentAccess
  **/
  @Valid
  @Schema(description = "")
  public UserAgentAccessForDescribeDomainDetailOutput getUserAgentAccess() {
    return userAgentAccess;
  }

  public void setUserAgentAccess(UserAgentAccessForDescribeDomainDetailOutput userAgentAccess) {
    this.userAgentAccess = userAgentAccess;
  }

  public DescribeDomainDetailResponse userName(String userName) {
    this.userName = userName;
    return this;
  }

   /**
   * Get userName
   * @return userName
  **/
  @Schema(description = "")
  public String getUserName() {
    return userName;
  }

  public void setUserName(String userName) {
    this.userName = userName;
  }

  public DescribeDomainDetailResponse webSocket(WebSocketForDescribeDomainDetailOutput webSocket) {
    this.webSocket = webSocket;
    return this;
  }

   /**
   * Get webSocket
   * @return webSocket
  **/
  @Valid
  @Schema(description = "")
  public WebSocketForDescribeDomainDetailOutput getWebSocket() {
    return webSocket;
  }

  public void setWebSocket(WebSocketForDescribeDomainDetailOutput webSocket) {
    this.webSocket = webSocket;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeDomainDetailResponse describeDomainDetailResponse = (DescribeDomainDetailResponse) o;
    return Objects.equals(this.brCompress, describeDomainDetailResponse.brCompress) &&
        Objects.equals(this.cache, describeDomainDetailResponse.cache) &&
        Objects.equals(this.cname, describeDomainDetailResponse.cname) &&
        Objects.equals(this.createTime, describeDomainDetailResponse.createTime) &&
        Objects.equals(this.domain, describeDomainDetailResponse.domain) &&
        Objects.equals(this.enableFailOver, describeDomainDetailResponse.enableFailOver) &&
        Objects.equals(this.gzipCompress, describeDomainDetailResponse.gzipCompress) &&
        Objects.equals(this.https, describeDomainDetailResponse.https) &&
        Objects.equals(this.ipv6Switch, describeDomainDetailResponse.ipv6Switch) &&
        Objects.equals(this.ipAccess, describeDomainDetailResponse.ipAccess) &&
        Objects.equals(this.isCNAMEResolved, describeDomainDetailResponse.isCNAMEResolved) &&
        Objects.equals(this.origin, describeDomainDetailResponse.origin) &&
        Objects.equals(this.preConnect, describeDomainDetailResponse.preConnect) &&
        Objects.equals(this.projectName, describeDomainDetailResponse.projectName) &&
        Objects.equals(this.rtTOptimize, describeDomainDetailResponse.rtTOptimize) &&
        Objects.equals(this.recordFiling, describeDomainDetailResponse.recordFiling) &&
        Objects.equals(this.refererAccess, describeDomainDetailResponse.refererAccess) &&
        Objects.equals(this.scope, describeDomainDetailResponse.scope) &&
        Objects.equals(this.serviceType, describeDomainDetailResponse.serviceType) &&
        Objects.equals(this.staticOptimization, describeDomainDetailResponse.staticOptimization) &&
        Objects.equals(this.status, describeDomainDetailResponse.status) &&
        Objects.equals(this.strategyType, describeDomainDetailResponse.strategyType) &&
        Objects.equals(this.updateTime, describeDomainDetailResponse.updateTime) &&
        Objects.equals(this.urlAccess, describeDomainDetailResponse.urlAccess) &&
        Objects.equals(this.urlRedirect, describeDomainDetailResponse.urlRedirect) &&
        Objects.equals(this.userAgentAccess, describeDomainDetailResponse.userAgentAccess) &&
        Objects.equals(this.userName, describeDomainDetailResponse.userName) &&
        Objects.equals(this.webSocket, describeDomainDetailResponse.webSocket);
  }

  @Override
  public int hashCode() {
    return Objects.hash(brCompress, cache, cname, createTime, domain, enableFailOver, gzipCompress, https, ipv6Switch, ipAccess, isCNAMEResolved, origin, preConnect, projectName, rtTOptimize, recordFiling, refererAccess, scope, serviceType, staticOptimization, status, strategyType, updateTime, urlAccess, urlRedirect, userAgentAccess, userName, webSocket);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeDomainDetailResponse {\n");
    
    sb.append("    brCompress: ").append(toIndentedString(brCompress)).append("\n");
    sb.append("    cache: ").append(toIndentedString(cache)).append("\n");
    sb.append("    cname: ").append(toIndentedString(cname)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    enableFailOver: ").append(toIndentedString(enableFailOver)).append("\n");
    sb.append("    gzipCompress: ").append(toIndentedString(gzipCompress)).append("\n");
    sb.append("    https: ").append(toIndentedString(https)).append("\n");
    sb.append("    ipv6Switch: ").append(toIndentedString(ipv6Switch)).append("\n");
    sb.append("    ipAccess: ").append(toIndentedString(ipAccess)).append("\n");
    sb.append("    isCNAMEResolved: ").append(toIndentedString(isCNAMEResolved)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    preConnect: ").append(toIndentedString(preConnect)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    rtTOptimize: ").append(toIndentedString(rtTOptimize)).append("\n");
    sb.append("    recordFiling: ").append(toIndentedString(recordFiling)).append("\n");
    sb.append("    refererAccess: ").append(toIndentedString(refererAccess)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    serviceType: ").append(toIndentedString(serviceType)).append("\n");
    sb.append("    staticOptimization: ").append(toIndentedString(staticOptimization)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    strategyType: ").append(toIndentedString(strategyType)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    urlAccess: ").append(toIndentedString(urlAccess)).append("\n");
    sb.append("    urlRedirect: ").append(toIndentedString(urlRedirect)).append("\n");
    sb.append("    userAgentAccess: ").append(toIndentedString(userAgentAccess)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    webSocket: ").append(toIndentedString(webSocket)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
