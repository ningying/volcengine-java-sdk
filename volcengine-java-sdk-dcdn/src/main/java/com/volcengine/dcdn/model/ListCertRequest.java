/*
 * dcdn
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.dcdn.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ListCertRequest
 */



public class ListCertRequest {
  @SerializedName("BindDomain")
  private String bindDomain = null;

  @SerializedName("BoundStatus")
  private String boundStatus = null;

  @SerializedName("CertId")
  private String certId = null;

  @SerializedName("CertName")
  private String certName = null;

  @SerializedName("CertSource")
  private String certSource = null;

  @SerializedName("CertStatus")
  private String certStatus = null;

  @SerializedName("ContainDomain")
  private Boolean containDomain = null;

  @SerializedName("ExpireSortOrder")
  private String expireSortOrder = null;

  @SerializedName("MatchDomain")
  private String matchDomain = null;

  @SerializedName("PageNumber")
  private Integer pageNumber = null;

  @SerializedName("PageSize")
  private Integer pageSize = null;

  @SerializedName("ProjectName")
  private List<String> projectName = null;

  public ListCertRequest bindDomain(String bindDomain) {
    this.bindDomain = bindDomain;
    return this;
  }

   /**
   * Get bindDomain
   * @return bindDomain
  **/
  @Schema(description = "")
  public String getBindDomain() {
    return bindDomain;
  }

  public void setBindDomain(String bindDomain) {
    this.bindDomain = bindDomain;
  }

  public ListCertRequest boundStatus(String boundStatus) {
    this.boundStatus = boundStatus;
    return this;
  }

   /**
   * Get boundStatus
   * @return boundStatus
  **/
  @Schema(description = "")
  public String getBoundStatus() {
    return boundStatus;
  }

  public void setBoundStatus(String boundStatus) {
    this.boundStatus = boundStatus;
  }

  public ListCertRequest certId(String certId) {
    this.certId = certId;
    return this;
  }

   /**
   * Get certId
   * @return certId
  **/
  @Schema(description = "")
  public String getCertId() {
    return certId;
  }

  public void setCertId(String certId) {
    this.certId = certId;
  }

  public ListCertRequest certName(String certName) {
    this.certName = certName;
    return this;
  }

   /**
   * Get certName
   * @return certName
  **/
  @Schema(description = "")
  public String getCertName() {
    return certName;
  }

  public void setCertName(String certName) {
    this.certName = certName;
  }

  public ListCertRequest certSource(String certSource) {
    this.certSource = certSource;
    return this;
  }

   /**
   * Get certSource
   * @return certSource
  **/
  @Schema(description = "")
  public String getCertSource() {
    return certSource;
  }

  public void setCertSource(String certSource) {
    this.certSource = certSource;
  }

  public ListCertRequest certStatus(String certStatus) {
    this.certStatus = certStatus;
    return this;
  }

   /**
   * Get certStatus
   * @return certStatus
  **/
  @Schema(description = "")
  public String getCertStatus() {
    return certStatus;
  }

  public void setCertStatus(String certStatus) {
    this.certStatus = certStatus;
  }

  public ListCertRequest containDomain(Boolean containDomain) {
    this.containDomain = containDomain;
    return this;
  }

   /**
   * Get containDomain
   * @return containDomain
  **/
  @Schema(description = "")
  public Boolean isContainDomain() {
    return containDomain;
  }

  public void setContainDomain(Boolean containDomain) {
    this.containDomain = containDomain;
  }

  public ListCertRequest expireSortOrder(String expireSortOrder) {
    this.expireSortOrder = expireSortOrder;
    return this;
  }

   /**
   * Get expireSortOrder
   * @return expireSortOrder
  **/
  @Schema(description = "")
  public String getExpireSortOrder() {
    return expireSortOrder;
  }

  public void setExpireSortOrder(String expireSortOrder) {
    this.expireSortOrder = expireSortOrder;
  }

  public ListCertRequest matchDomain(String matchDomain) {
    this.matchDomain = matchDomain;
    return this;
  }

   /**
   * Get matchDomain
   * @return matchDomain
  **/
  @Schema(description = "")
  public String getMatchDomain() {
    return matchDomain;
  }

  public void setMatchDomain(String matchDomain) {
    this.matchDomain = matchDomain;
  }

  public ListCertRequest pageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

   /**
   * Get pageNumber
   * @return pageNumber
  **/
  @Schema(description = "")
  public Integer getPageNumber() {
    return pageNumber;
  }

  public void setPageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
  }

  public ListCertRequest pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @Schema(description = "")
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  public ListCertRequest projectName(List<String> projectName) {
    this.projectName = projectName;
    return this;
  }

  public ListCertRequest addProjectNameItem(String projectNameItem) {
    if (this.projectName == null) {
      this.projectName = new ArrayList<String>();
    }
    this.projectName.add(projectNameItem);
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public List<String> getProjectName() {
    return projectName;
  }

  public void setProjectName(List<String> projectName) {
    this.projectName = projectName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListCertRequest listCertRequest = (ListCertRequest) o;
    return Objects.equals(this.bindDomain, listCertRequest.bindDomain) &&
        Objects.equals(this.boundStatus, listCertRequest.boundStatus) &&
        Objects.equals(this.certId, listCertRequest.certId) &&
        Objects.equals(this.certName, listCertRequest.certName) &&
        Objects.equals(this.certSource, listCertRequest.certSource) &&
        Objects.equals(this.certStatus, listCertRequest.certStatus) &&
        Objects.equals(this.containDomain, listCertRequest.containDomain) &&
        Objects.equals(this.expireSortOrder, listCertRequest.expireSortOrder) &&
        Objects.equals(this.matchDomain, listCertRequest.matchDomain) &&
        Objects.equals(this.pageNumber, listCertRequest.pageNumber) &&
        Objects.equals(this.pageSize, listCertRequest.pageSize) &&
        Objects.equals(this.projectName, listCertRequest.projectName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bindDomain, boundStatus, certId, certName, certSource, certStatus, containDomain, expireSortOrder, matchDomain, pageNumber, pageSize, projectName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListCertRequest {\n");
    
    sb.append("    bindDomain: ").append(toIndentedString(bindDomain)).append("\n");
    sb.append("    boundStatus: ").append(toIndentedString(boundStatus)).append("\n");
    sb.append("    certId: ").append(toIndentedString(certId)).append("\n");
    sb.append("    certName: ").append(toIndentedString(certName)).append("\n");
    sb.append("    certSource: ").append(toIndentedString(certSource)).append("\n");
    sb.append("    certStatus: ").append(toIndentedString(certStatus)).append("\n");
    sb.append("    containDomain: ").append(toIndentedString(containDomain)).append("\n");
    sb.append("    expireSortOrder: ").append(toIndentedString(expireSortOrder)).append("\n");
    sb.append("    matchDomain: ").append(toIndentedString(matchDomain)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
