/*
 * dcdn
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.dcdn.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.dcdn.model.BackupOriginForUpdateSingleDomainConfigInput;
import com.volcengine.dcdn.model.ConditionalOriginForUpdateSingleDomainConfigInput;
import com.volcengine.dcdn.model.ConvertOriginForUpdateSingleDomainConfigInput;
import com.volcengine.dcdn.model.FollowRedirectForUpdateSingleDomainConfigInput;
import com.volcengine.dcdn.model.OriginHostForUpdateSingleDomainConfigInput;
import com.volcengine.dcdn.model.OriginRangeForUpdateSingleDomainConfigInput;
import com.volcengine.dcdn.model.OriginSniForUpdateSingleDomainConfigInput;
import com.volcengine.dcdn.model.RequestHeaderForUpdateSingleDomainConfigInput;
import com.volcengine.dcdn.model.ResponseHeaderForUpdateSingleDomainConfigInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ConvertConvertOriginForUpdateSingleDomainConfigInput
 */



public class ConvertConvertOriginForUpdateSingleDomainConfigInput {
  @SerializedName("BackupOriginType")
  private String backupOriginType = null;

  @SerializedName("BackupOrigins")
  private List<BackupOriginForUpdateSingleDomainConfigInput> backupOrigins = null;

  @SerializedName("ConditionalOrigins")
  private List<ConditionalOriginForUpdateSingleDomainConfigInput> conditionalOrigins = null;

  @SerializedName("FollowRedirect")
  private FollowRedirectForUpdateSingleDomainConfigInput followRedirect = null;

  @SerializedName("OriginHost")
  private OriginHostForUpdateSingleDomainConfigInput originHost = null;

  @SerializedName("OriginProtocolType")
  private String originProtocolType = null;

  @SerializedName("OriginRange")
  private OriginRangeForUpdateSingleDomainConfigInput originRange = null;

  @SerializedName("OriginSni")
  private OriginSniForUpdateSingleDomainConfigInput originSni = null;

  @SerializedName("OriginType")
  private String originType = null;

  @SerializedName("Origins")
  private List<ConvertOriginForUpdateSingleDomainConfigInput> origins = null;

  @SerializedName("RequestHeader")
  private RequestHeaderForUpdateSingleDomainConfigInput requestHeader = null;

  @SerializedName("ResponseHeader")
  private ResponseHeaderForUpdateSingleDomainConfigInput responseHeader = null;

  @SerializedName("ResponseTimeout")
  private Integer responseTimeout = null;

  @SerializedName("TosPrivateAccess")
  private Boolean tosPrivateAccess = null;

  public ConvertConvertOriginForUpdateSingleDomainConfigInput backupOriginType(String backupOriginType) {
    this.backupOriginType = backupOriginType;
    return this;
  }

   /**
   * Get backupOriginType
   * @return backupOriginType
  **/
  @Schema(description = "")
  public String getBackupOriginType() {
    return backupOriginType;
  }

  public void setBackupOriginType(String backupOriginType) {
    this.backupOriginType = backupOriginType;
  }

  public ConvertConvertOriginForUpdateSingleDomainConfigInput backupOrigins(List<BackupOriginForUpdateSingleDomainConfigInput> backupOrigins) {
    this.backupOrigins = backupOrigins;
    return this;
  }

  public ConvertConvertOriginForUpdateSingleDomainConfigInput addBackupOriginsItem(BackupOriginForUpdateSingleDomainConfigInput backupOriginsItem) {
    if (this.backupOrigins == null) {
      this.backupOrigins = new ArrayList<BackupOriginForUpdateSingleDomainConfigInput>();
    }
    this.backupOrigins.add(backupOriginsItem);
    return this;
  }

   /**
   * Get backupOrigins
   * @return backupOrigins
  **/
  @Valid
  @Schema(description = "")
  public List<BackupOriginForUpdateSingleDomainConfigInput> getBackupOrigins() {
    return backupOrigins;
  }

  public void setBackupOrigins(List<BackupOriginForUpdateSingleDomainConfigInput> backupOrigins) {
    this.backupOrigins = backupOrigins;
  }

  public ConvertConvertOriginForUpdateSingleDomainConfigInput conditionalOrigins(List<ConditionalOriginForUpdateSingleDomainConfigInput> conditionalOrigins) {
    this.conditionalOrigins = conditionalOrigins;
    return this;
  }

  public ConvertConvertOriginForUpdateSingleDomainConfigInput addConditionalOriginsItem(ConditionalOriginForUpdateSingleDomainConfigInput conditionalOriginsItem) {
    if (this.conditionalOrigins == null) {
      this.conditionalOrigins = new ArrayList<ConditionalOriginForUpdateSingleDomainConfigInput>();
    }
    this.conditionalOrigins.add(conditionalOriginsItem);
    return this;
  }

   /**
   * Get conditionalOrigins
   * @return conditionalOrigins
  **/
  @Valid
  @Schema(description = "")
  public List<ConditionalOriginForUpdateSingleDomainConfigInput> getConditionalOrigins() {
    return conditionalOrigins;
  }

  public void setConditionalOrigins(List<ConditionalOriginForUpdateSingleDomainConfigInput> conditionalOrigins) {
    this.conditionalOrigins = conditionalOrigins;
  }

  public ConvertConvertOriginForUpdateSingleDomainConfigInput followRedirect(FollowRedirectForUpdateSingleDomainConfigInput followRedirect) {
    this.followRedirect = followRedirect;
    return this;
  }

   /**
   * Get followRedirect
   * @return followRedirect
  **/
  @Valid
  @Schema(description = "")
  public FollowRedirectForUpdateSingleDomainConfigInput getFollowRedirect() {
    return followRedirect;
  }

  public void setFollowRedirect(FollowRedirectForUpdateSingleDomainConfigInput followRedirect) {
    this.followRedirect = followRedirect;
  }

  public ConvertConvertOriginForUpdateSingleDomainConfigInput originHost(OriginHostForUpdateSingleDomainConfigInput originHost) {
    this.originHost = originHost;
    return this;
  }

   /**
   * Get originHost
   * @return originHost
  **/
  @Valid
  @Schema(description = "")
  public OriginHostForUpdateSingleDomainConfigInput getOriginHost() {
    return originHost;
  }

  public void setOriginHost(OriginHostForUpdateSingleDomainConfigInput originHost) {
    this.originHost = originHost;
  }

  public ConvertConvertOriginForUpdateSingleDomainConfigInput originProtocolType(String originProtocolType) {
    this.originProtocolType = originProtocolType;
    return this;
  }

   /**
   * Get originProtocolType
   * @return originProtocolType
  **/
  @Schema(description = "")
  public String getOriginProtocolType() {
    return originProtocolType;
  }

  public void setOriginProtocolType(String originProtocolType) {
    this.originProtocolType = originProtocolType;
  }

  public ConvertConvertOriginForUpdateSingleDomainConfigInput originRange(OriginRangeForUpdateSingleDomainConfigInput originRange) {
    this.originRange = originRange;
    return this;
  }

   /**
   * Get originRange
   * @return originRange
  **/
  @Valid
  @Schema(description = "")
  public OriginRangeForUpdateSingleDomainConfigInput getOriginRange() {
    return originRange;
  }

  public void setOriginRange(OriginRangeForUpdateSingleDomainConfigInput originRange) {
    this.originRange = originRange;
  }

  public ConvertConvertOriginForUpdateSingleDomainConfigInput originSni(OriginSniForUpdateSingleDomainConfigInput originSni) {
    this.originSni = originSni;
    return this;
  }

   /**
   * Get originSni
   * @return originSni
  **/
  @Valid
  @Schema(description = "")
  public OriginSniForUpdateSingleDomainConfigInput getOriginSni() {
    return originSni;
  }

  public void setOriginSni(OriginSniForUpdateSingleDomainConfigInput originSni) {
    this.originSni = originSni;
  }

  public ConvertConvertOriginForUpdateSingleDomainConfigInput originType(String originType) {
    this.originType = originType;
    return this;
  }

   /**
   * Get originType
   * @return originType
  **/
  @Schema(description = "")
  public String getOriginType() {
    return originType;
  }

  public void setOriginType(String originType) {
    this.originType = originType;
  }

  public ConvertConvertOriginForUpdateSingleDomainConfigInput origins(List<ConvertOriginForUpdateSingleDomainConfigInput> origins) {
    this.origins = origins;
    return this;
  }

  public ConvertConvertOriginForUpdateSingleDomainConfigInput addOriginsItem(ConvertOriginForUpdateSingleDomainConfigInput originsItem) {
    if (this.origins == null) {
      this.origins = new ArrayList<ConvertOriginForUpdateSingleDomainConfigInput>();
    }
    this.origins.add(originsItem);
    return this;
  }

   /**
   * Get origins
   * @return origins
  **/
  @Valid
  @Schema(description = "")
  public List<ConvertOriginForUpdateSingleDomainConfigInput> getOrigins() {
    return origins;
  }

  public void setOrigins(List<ConvertOriginForUpdateSingleDomainConfigInput> origins) {
    this.origins = origins;
  }

  public ConvertConvertOriginForUpdateSingleDomainConfigInput requestHeader(RequestHeaderForUpdateSingleDomainConfigInput requestHeader) {
    this.requestHeader = requestHeader;
    return this;
  }

   /**
   * Get requestHeader
   * @return requestHeader
  **/
  @Valid
  @Schema(description = "")
  public RequestHeaderForUpdateSingleDomainConfigInput getRequestHeader() {
    return requestHeader;
  }

  public void setRequestHeader(RequestHeaderForUpdateSingleDomainConfigInput requestHeader) {
    this.requestHeader = requestHeader;
  }

  public ConvertConvertOriginForUpdateSingleDomainConfigInput responseHeader(ResponseHeaderForUpdateSingleDomainConfigInput responseHeader) {
    this.responseHeader = responseHeader;
    return this;
  }

   /**
   * Get responseHeader
   * @return responseHeader
  **/
  @Valid
  @Schema(description = "")
  public ResponseHeaderForUpdateSingleDomainConfigInput getResponseHeader() {
    return responseHeader;
  }

  public void setResponseHeader(ResponseHeaderForUpdateSingleDomainConfigInput responseHeader) {
    this.responseHeader = responseHeader;
  }

  public ConvertConvertOriginForUpdateSingleDomainConfigInput responseTimeout(Integer responseTimeout) {
    this.responseTimeout = responseTimeout;
    return this;
  }

   /**
   * Get responseTimeout
   * @return responseTimeout
  **/
  @Schema(description = "")
  public Integer getResponseTimeout() {
    return responseTimeout;
  }

  public void setResponseTimeout(Integer responseTimeout) {
    this.responseTimeout = responseTimeout;
  }

  public ConvertConvertOriginForUpdateSingleDomainConfigInput tosPrivateAccess(Boolean tosPrivateAccess) {
    this.tosPrivateAccess = tosPrivateAccess;
    return this;
  }

   /**
   * Get tosPrivateAccess
   * @return tosPrivateAccess
  **/
  @Schema(description = "")
  public Boolean isTosPrivateAccess() {
    return tosPrivateAccess;
  }

  public void setTosPrivateAccess(Boolean tosPrivateAccess) {
    this.tosPrivateAccess = tosPrivateAccess;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConvertConvertOriginForUpdateSingleDomainConfigInput convertConvertOriginForUpdateSingleDomainConfigInput = (ConvertConvertOriginForUpdateSingleDomainConfigInput) o;
    return Objects.equals(this.backupOriginType, convertConvertOriginForUpdateSingleDomainConfigInput.backupOriginType) &&
        Objects.equals(this.backupOrigins, convertConvertOriginForUpdateSingleDomainConfigInput.backupOrigins) &&
        Objects.equals(this.conditionalOrigins, convertConvertOriginForUpdateSingleDomainConfigInput.conditionalOrigins) &&
        Objects.equals(this.followRedirect, convertConvertOriginForUpdateSingleDomainConfigInput.followRedirect) &&
        Objects.equals(this.originHost, convertConvertOriginForUpdateSingleDomainConfigInput.originHost) &&
        Objects.equals(this.originProtocolType, convertConvertOriginForUpdateSingleDomainConfigInput.originProtocolType) &&
        Objects.equals(this.originRange, convertConvertOriginForUpdateSingleDomainConfigInput.originRange) &&
        Objects.equals(this.originSni, convertConvertOriginForUpdateSingleDomainConfigInput.originSni) &&
        Objects.equals(this.originType, convertConvertOriginForUpdateSingleDomainConfigInput.originType) &&
        Objects.equals(this.origins, convertConvertOriginForUpdateSingleDomainConfigInput.origins) &&
        Objects.equals(this.requestHeader, convertConvertOriginForUpdateSingleDomainConfigInput.requestHeader) &&
        Objects.equals(this.responseHeader, convertConvertOriginForUpdateSingleDomainConfigInput.responseHeader) &&
        Objects.equals(this.responseTimeout, convertConvertOriginForUpdateSingleDomainConfigInput.responseTimeout) &&
        Objects.equals(this.tosPrivateAccess, convertConvertOriginForUpdateSingleDomainConfigInput.tosPrivateAccess);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backupOriginType, backupOrigins, conditionalOrigins, followRedirect, originHost, originProtocolType, originRange, originSni, originType, origins, requestHeader, responseHeader, responseTimeout, tosPrivateAccess);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConvertConvertOriginForUpdateSingleDomainConfigInput {\n");
    
    sb.append("    backupOriginType: ").append(toIndentedString(backupOriginType)).append("\n");
    sb.append("    backupOrigins: ").append(toIndentedString(backupOrigins)).append("\n");
    sb.append("    conditionalOrigins: ").append(toIndentedString(conditionalOrigins)).append("\n");
    sb.append("    followRedirect: ").append(toIndentedString(followRedirect)).append("\n");
    sb.append("    originHost: ").append(toIndentedString(originHost)).append("\n");
    sb.append("    originProtocolType: ").append(toIndentedString(originProtocolType)).append("\n");
    sb.append("    originRange: ").append(toIndentedString(originRange)).append("\n");
    sb.append("    originSni: ").append(toIndentedString(originSni)).append("\n");
    sb.append("    originType: ").append(toIndentedString(originType)).append("\n");
    sb.append("    origins: ").append(toIndentedString(origins)).append("\n");
    sb.append("    requestHeader: ").append(toIndentedString(requestHeader)).append("\n");
    sb.append("    responseHeader: ").append(toIndentedString(responseHeader)).append("\n");
    sb.append("    responseTimeout: ").append(toIndentedString(responseTimeout)).append("\n");
    sb.append("    tosPrivateAccess: ").append(toIndentedString(tosPrivateAccess)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
