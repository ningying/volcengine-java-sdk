/*
 * vke
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vke.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vke.model.AuthConfigForExecContainerImageCommitmentInput;
import com.volcengine.vke.model.ImageSpecForExecContainerImageCommitmentInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ExecContainerImageCommitmentRequest
 */



public class ExecContainerImageCommitmentRequest {
  @SerializedName("AuthConfig")
  private AuthConfigForExecContainerImageCommitmentInput authConfig = null;

  @SerializedName("ContainerName")
  private String containerName = null;

  @SerializedName("ImageSpec")
  private ImageSpecForExecContainerImageCommitmentInput imageSpec = null;

  @SerializedName("InstanceId")
  private String instanceId = null;

  @SerializedName("Pause")
  private Boolean pause = null;

  public ExecContainerImageCommitmentRequest authConfig(AuthConfigForExecContainerImageCommitmentInput authConfig) {
    this.authConfig = authConfig;
    return this;
  }

   /**
   * Get authConfig
   * @return authConfig
  **/
  @Valid
  @Schema(description = "")
  public AuthConfigForExecContainerImageCommitmentInput getAuthConfig() {
    return authConfig;
  }

  public void setAuthConfig(AuthConfigForExecContainerImageCommitmentInput authConfig) {
    this.authConfig = authConfig;
  }

  public ExecContainerImageCommitmentRequest containerName(String containerName) {
    this.containerName = containerName;
    return this;
  }

   /**
   * Get containerName
   * @return containerName
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getContainerName() {
    return containerName;
  }

  public void setContainerName(String containerName) {
    this.containerName = containerName;
  }

  public ExecContainerImageCommitmentRequest imageSpec(ImageSpecForExecContainerImageCommitmentInput imageSpec) {
    this.imageSpec = imageSpec;
    return this;
  }

   /**
   * Get imageSpec
   * @return imageSpec
  **/
  @Valid
  @Schema(description = "")
  public ImageSpecForExecContainerImageCommitmentInput getImageSpec() {
    return imageSpec;
  }

  public void setImageSpec(ImageSpecForExecContainerImageCommitmentInput imageSpec) {
    this.imageSpec = imageSpec;
  }

  public ExecContainerImageCommitmentRequest instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * Get instanceId
   * @return instanceId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }

  public ExecContainerImageCommitmentRequest pause(Boolean pause) {
    this.pause = pause;
    return this;
  }

   /**
   * Get pause
   * @return pause
  **/
  @Schema(description = "")
  public Boolean isPause() {
    return pause;
  }

  public void setPause(Boolean pause) {
    this.pause = pause;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExecContainerImageCommitmentRequest execContainerImageCommitmentRequest = (ExecContainerImageCommitmentRequest) o;
    return Objects.equals(this.authConfig, execContainerImageCommitmentRequest.authConfig) &&
        Objects.equals(this.containerName, execContainerImageCommitmentRequest.containerName) &&
        Objects.equals(this.imageSpec, execContainerImageCommitmentRequest.imageSpec) &&
        Objects.equals(this.instanceId, execContainerImageCommitmentRequest.instanceId) &&
        Objects.equals(this.pause, execContainerImageCommitmentRequest.pause);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authConfig, containerName, imageSpec, instanceId, pause);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExecContainerImageCommitmentRequest {\n");
    
    sb.append("    authConfig: ").append(toIndentedString(authConfig)).append("\n");
    sb.append("    containerName: ").append(toIndentedString(containerName)).append("\n");
    sb.append("    imageSpec: ").append(toIndentedString(imageSpec)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    pause: ").append(toIndentedString(pause)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
