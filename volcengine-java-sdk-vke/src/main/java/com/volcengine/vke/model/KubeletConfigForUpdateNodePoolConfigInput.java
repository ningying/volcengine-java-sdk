/*
 * vke
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vke.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vke.model.EvictionHardForUpdateNodePoolConfigInput;
import com.volcengine.vke.model.FeatureGatesForUpdateNodePoolConfigInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * KubeletConfigForUpdateNodePoolConfigInput
 */



public class KubeletConfigForUpdateNodePoolConfigInput {
  @SerializedName("EvictionHard")
  private List<EvictionHardForUpdateNodePoolConfigInput> evictionHard = null;

  @SerializedName("FeatureGates")
  private FeatureGatesForUpdateNodePoolConfigInput featureGates = null;

  @SerializedName("KubeApiBurst")
  private Integer kubeApiBurst = null;

  @SerializedName("KubeApiQps")
  private Integer kubeApiQps = null;

  @SerializedName("RegistryBurst")
  private Integer registryBurst = null;

  @SerializedName("RegistryPullQps")
  private Integer registryPullQps = null;

  @SerializedName("SerializeImagePulls")
  private Boolean serializeImagePulls = null;

  /**
   * Gets or Sets topologyManagerPolicy
   */
  @JsonAdapter(TopologyManagerPolicyEnum.Adapter.class)
  public enum TopologyManagerPolicyEnum {
    @SerializedName("restricted")
    RESTRICTED("restricted"),
    @SerializedName("best-effort")
    BEST_EFFORT("best-effort"),
    @SerializedName("none")
    NONE("none"),
    @SerializedName("single-numa-node")
    SINGLE_NUMA_NODE("single-numa-node");

    private String value;

    TopologyManagerPolicyEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TopologyManagerPolicyEnum fromValue(String input) {
      for (TopologyManagerPolicyEnum b : TopologyManagerPolicyEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TopologyManagerPolicyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TopologyManagerPolicyEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public TopologyManagerPolicyEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return TopologyManagerPolicyEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("TopologyManagerPolicy")
  private TopologyManagerPolicyEnum topologyManagerPolicy = null;

  /**
   * Gets or Sets topologyManagerScope
   */
  @JsonAdapter(TopologyManagerScopeEnum.Adapter.class)
  public enum TopologyManagerScopeEnum {
    @SerializedName("pod")
    POD("pod"),
    @SerializedName("container")
    CONTAINER("container");

    private String value;

    TopologyManagerScopeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TopologyManagerScopeEnum fromValue(String input) {
      for (TopologyManagerScopeEnum b : TopologyManagerScopeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TopologyManagerScopeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TopologyManagerScopeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public TopologyManagerScopeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return TopologyManagerScopeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("TopologyManagerScope")
  private TopologyManagerScopeEnum topologyManagerScope = null;

  public KubeletConfigForUpdateNodePoolConfigInput evictionHard(List<EvictionHardForUpdateNodePoolConfigInput> evictionHard) {
    this.evictionHard = evictionHard;
    return this;
  }

  public KubeletConfigForUpdateNodePoolConfigInput addEvictionHardItem(EvictionHardForUpdateNodePoolConfigInput evictionHardItem) {
    if (this.evictionHard == null) {
      this.evictionHard = new ArrayList<EvictionHardForUpdateNodePoolConfigInput>();
    }
    this.evictionHard.add(evictionHardItem);
    return this;
  }

   /**
   * Get evictionHard
   * @return evictionHard
  **/
  @Valid
  @Schema(description = "")
  public List<EvictionHardForUpdateNodePoolConfigInput> getEvictionHard() {
    return evictionHard;
  }

  public void setEvictionHard(List<EvictionHardForUpdateNodePoolConfigInput> evictionHard) {
    this.evictionHard = evictionHard;
  }

  public KubeletConfigForUpdateNodePoolConfigInput featureGates(FeatureGatesForUpdateNodePoolConfigInput featureGates) {
    this.featureGates = featureGates;
    return this;
  }

   /**
   * Get featureGates
   * @return featureGates
  **/
  @Valid
  @Schema(description = "")
  public FeatureGatesForUpdateNodePoolConfigInput getFeatureGates() {
    return featureGates;
  }

  public void setFeatureGates(FeatureGatesForUpdateNodePoolConfigInput featureGates) {
    this.featureGates = featureGates;
  }

  public KubeletConfigForUpdateNodePoolConfigInput kubeApiBurst(Integer kubeApiBurst) {
    this.kubeApiBurst = kubeApiBurst;
    return this;
  }

   /**
   * Get kubeApiBurst
   * minimum: 1
   * maximum: 100
   * @return kubeApiBurst
  **/
 @Min(1) @Max(100)  @Schema(description = "")
  public Integer getKubeApiBurst() {
    return kubeApiBurst;
  }

  public void setKubeApiBurst(Integer kubeApiBurst) {
    this.kubeApiBurst = kubeApiBurst;
  }

  public KubeletConfigForUpdateNodePoolConfigInput kubeApiQps(Integer kubeApiQps) {
    this.kubeApiQps = kubeApiQps;
    return this;
  }

   /**
   * Get kubeApiQps
   * minimum: 1
   * maximum: 50
   * @return kubeApiQps
  **/
 @Min(1) @Max(50)  @Schema(description = "")
  public Integer getKubeApiQps() {
    return kubeApiQps;
  }

  public void setKubeApiQps(Integer kubeApiQps) {
    this.kubeApiQps = kubeApiQps;
  }

  public KubeletConfigForUpdateNodePoolConfigInput registryBurst(Integer registryBurst) {
    this.registryBurst = registryBurst;
    return this;
  }

   /**
   * Get registryBurst
   * minimum: 1
   * maximum: 100
   * @return registryBurst
  **/
 @Min(1) @Max(100)  @Schema(description = "")
  public Integer getRegistryBurst() {
    return registryBurst;
  }

  public void setRegistryBurst(Integer registryBurst) {
    this.registryBurst = registryBurst;
  }

  public KubeletConfigForUpdateNodePoolConfigInput registryPullQps(Integer registryPullQps) {
    this.registryPullQps = registryPullQps;
    return this;
  }

   /**
   * Get registryPullQps
   * minimum: 1
   * maximum: 50
   * @return registryPullQps
  **/
 @Min(1) @Max(50)  @Schema(description = "")
  public Integer getRegistryPullQps() {
    return registryPullQps;
  }

  public void setRegistryPullQps(Integer registryPullQps) {
    this.registryPullQps = registryPullQps;
  }

  public KubeletConfigForUpdateNodePoolConfigInput serializeImagePulls(Boolean serializeImagePulls) {
    this.serializeImagePulls = serializeImagePulls;
    return this;
  }

   /**
   * Get serializeImagePulls
   * @return serializeImagePulls
  **/
  @Schema(description = "")
  public Boolean isSerializeImagePulls() {
    return serializeImagePulls;
  }

  public void setSerializeImagePulls(Boolean serializeImagePulls) {
    this.serializeImagePulls = serializeImagePulls;
  }

  public KubeletConfigForUpdateNodePoolConfigInput topologyManagerPolicy(TopologyManagerPolicyEnum topologyManagerPolicy) {
    this.topologyManagerPolicy = topologyManagerPolicy;
    return this;
  }

   /**
   * Get topologyManagerPolicy
   * @return topologyManagerPolicy
  **/
  @Schema(description = "")
  public TopologyManagerPolicyEnum getTopologyManagerPolicy() {
    return topologyManagerPolicy;
  }

  public void setTopologyManagerPolicy(TopologyManagerPolicyEnum topologyManagerPolicy) {
    this.topologyManagerPolicy = topologyManagerPolicy;
  }

  public KubeletConfigForUpdateNodePoolConfigInput topologyManagerScope(TopologyManagerScopeEnum topologyManagerScope) {
    this.topologyManagerScope = topologyManagerScope;
    return this;
  }

   /**
   * Get topologyManagerScope
   * @return topologyManagerScope
  **/
  @Schema(description = "")
  public TopologyManagerScopeEnum getTopologyManagerScope() {
    return topologyManagerScope;
  }

  public void setTopologyManagerScope(TopologyManagerScopeEnum topologyManagerScope) {
    this.topologyManagerScope = topologyManagerScope;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KubeletConfigForUpdateNodePoolConfigInput kubeletConfigForUpdateNodePoolConfigInput = (KubeletConfigForUpdateNodePoolConfigInput) o;
    return Objects.equals(this.evictionHard, kubeletConfigForUpdateNodePoolConfigInput.evictionHard) &&
        Objects.equals(this.featureGates, kubeletConfigForUpdateNodePoolConfigInput.featureGates) &&
        Objects.equals(this.kubeApiBurst, kubeletConfigForUpdateNodePoolConfigInput.kubeApiBurst) &&
        Objects.equals(this.kubeApiQps, kubeletConfigForUpdateNodePoolConfigInput.kubeApiQps) &&
        Objects.equals(this.registryBurst, kubeletConfigForUpdateNodePoolConfigInput.registryBurst) &&
        Objects.equals(this.registryPullQps, kubeletConfigForUpdateNodePoolConfigInput.registryPullQps) &&
        Objects.equals(this.serializeImagePulls, kubeletConfigForUpdateNodePoolConfigInput.serializeImagePulls) &&
        Objects.equals(this.topologyManagerPolicy, kubeletConfigForUpdateNodePoolConfigInput.topologyManagerPolicy) &&
        Objects.equals(this.topologyManagerScope, kubeletConfigForUpdateNodePoolConfigInput.topologyManagerScope);
  }

  @Override
  public int hashCode() {
    return Objects.hash(evictionHard, featureGates, kubeApiBurst, kubeApiQps, registryBurst, registryPullQps, serializeImagePulls, topologyManagerPolicy, topologyManagerScope);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KubeletConfigForUpdateNodePoolConfigInput {\n");
    
    sb.append("    evictionHard: ").append(toIndentedString(evictionHard)).append("\n");
    sb.append("    featureGates: ").append(toIndentedString(featureGates)).append("\n");
    sb.append("    kubeApiBurst: ").append(toIndentedString(kubeApiBurst)).append("\n");
    sb.append("    kubeApiQps: ").append(toIndentedString(kubeApiQps)).append("\n");
    sb.append("    registryBurst: ").append(toIndentedString(registryBurst)).append("\n");
    sb.append("    registryPullQps: ").append(toIndentedString(registryPullQps)).append("\n");
    sb.append("    serializeImagePulls: ").append(toIndentedString(serializeImagePulls)).append("\n");
    sb.append("    topologyManagerPolicy: ").append(toIndentedString(topologyManagerPolicy)).append("\n");
    sb.append("    topologyManagerScope: ").append(toIndentedString(topologyManagerScope)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
