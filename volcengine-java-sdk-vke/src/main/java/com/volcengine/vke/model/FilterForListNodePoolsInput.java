/*
 * vke
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vke.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vke.model.StatusForListNodePoolsInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * FilterForListNodePoolsInput
 */



public class FilterForListNodePoolsInput {
  @SerializedName("AutoScaling.Enabled")
  private Boolean autoScalingEnabled = null;

  @SerializedName("ClusterIds")
  private List<String> clusterIds = null;

  @SerializedName("CreateClientToken")
  private String createClientToken = null;

  @SerializedName("Ids")
  private List<String> ids = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Statuses")
  private List<StatusForListNodePoolsInput> statuses = null;

  @SerializedName("UpdateClientToken")
  private String updateClientToken = null;

  public FilterForListNodePoolsInput autoScalingEnabled(Boolean autoScalingEnabled) {
    this.autoScalingEnabled = autoScalingEnabled;
    return this;
  }

   /**
   * Get autoScalingEnabled
   * @return autoScalingEnabled
  **/
  @Schema(description = "")
  public Boolean isAutoScalingEnabled() {
    return autoScalingEnabled;
  }

  public void setAutoScalingEnabled(Boolean autoScalingEnabled) {
    this.autoScalingEnabled = autoScalingEnabled;
  }

  public FilterForListNodePoolsInput clusterIds(List<String> clusterIds) {
    this.clusterIds = clusterIds;
    return this;
  }

  public FilterForListNodePoolsInput addClusterIdsItem(String clusterIdsItem) {
    if (this.clusterIds == null) {
      this.clusterIds = new ArrayList<String>();
    }
    this.clusterIds.add(clusterIdsItem);
    return this;
  }

   /**
   * Get clusterIds
   * @return clusterIds
  **/
  @Schema(description = "")
  public List<String> getClusterIds() {
    return clusterIds;
  }

  public void setClusterIds(List<String> clusterIds) {
    this.clusterIds = clusterIds;
  }

  public FilterForListNodePoolsInput createClientToken(String createClientToken) {
    this.createClientToken = createClientToken;
    return this;
  }

   /**
   * Get createClientToken
   * @return createClientToken
  **/
  @Schema(description = "")
  public String getCreateClientToken() {
    return createClientToken;
  }

  public void setCreateClientToken(String createClientToken) {
    this.createClientToken = createClientToken;
  }

  public FilterForListNodePoolsInput ids(List<String> ids) {
    this.ids = ids;
    return this;
  }

  public FilterForListNodePoolsInput addIdsItem(String idsItem) {
    if (this.ids == null) {
      this.ids = new ArrayList<String>();
    }
    this.ids.add(idsItem);
    return this;
  }

   /**
   * Get ids
   * @return ids
  **/
  @Schema(description = "")
  public List<String> getIds() {
    return ids;
  }

  public void setIds(List<String> ids) {
    this.ids = ids;
  }

  public FilterForListNodePoolsInput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public FilterForListNodePoolsInput statuses(List<StatusForListNodePoolsInput> statuses) {
    this.statuses = statuses;
    return this;
  }

  public FilterForListNodePoolsInput addStatusesItem(StatusForListNodePoolsInput statusesItem) {
    if (this.statuses == null) {
      this.statuses = new ArrayList<StatusForListNodePoolsInput>();
    }
    this.statuses.add(statusesItem);
    return this;
  }

   /**
   * Get statuses
   * @return statuses
  **/
  @Valid
  @Schema(description = "")
  public List<StatusForListNodePoolsInput> getStatuses() {
    return statuses;
  }

  public void setStatuses(List<StatusForListNodePoolsInput> statuses) {
    this.statuses = statuses;
  }

  public FilterForListNodePoolsInput updateClientToken(String updateClientToken) {
    this.updateClientToken = updateClientToken;
    return this;
  }

   /**
   * Get updateClientToken
   * @return updateClientToken
  **/
  @Schema(description = "")
  public String getUpdateClientToken() {
    return updateClientToken;
  }

  public void setUpdateClientToken(String updateClientToken) {
    this.updateClientToken = updateClientToken;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FilterForListNodePoolsInput filterForListNodePoolsInput = (FilterForListNodePoolsInput) o;
    return Objects.equals(this.autoScalingEnabled, filterForListNodePoolsInput.autoScalingEnabled) &&
        Objects.equals(this.clusterIds, filterForListNodePoolsInput.clusterIds) &&
        Objects.equals(this.createClientToken, filterForListNodePoolsInput.createClientToken) &&
        Objects.equals(this.ids, filterForListNodePoolsInput.ids) &&
        Objects.equals(this.name, filterForListNodePoolsInput.name) &&
        Objects.equals(this.statuses, filterForListNodePoolsInput.statuses) &&
        Objects.equals(this.updateClientToken, filterForListNodePoolsInput.updateClientToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autoScalingEnabled, clusterIds, createClientToken, ids, name, statuses, updateClientToken);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FilterForListNodePoolsInput {\n");
    
    sb.append("    autoScalingEnabled: ").append(toIndentedString(autoScalingEnabled)).append("\n");
    sb.append("    clusterIds: ").append(toIndentedString(clusterIds)).append("\n");
    sb.append("    createClientToken: ").append(toIndentedString(createClientToken)).append("\n");
    sb.append("    ids: ").append(toIndentedString(ids)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    statuses: ").append(toIndentedString(statuses)).append("\n");
    sb.append("    updateClientToken: ").append(toIndentedString(updateClientToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
