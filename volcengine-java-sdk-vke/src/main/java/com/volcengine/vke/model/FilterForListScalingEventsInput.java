/*
 * vke
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vke.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * FilterForListScalingEventsInput
 */



public class FilterForListScalingEventsInput {
  @SerializedName("EndTime")
  private String endTime = null;

  @SerializedName("Ids")
  private List<String> ids = null;

  @SerializedName("NodeIds")
  private List<String> nodeIds = null;

  @SerializedName("NodePoolIds")
  private List<String> nodePoolIds = null;

  @SerializedName("StartTime")
  private String startTime = null;

  @SerializedName("Statuses")
  private List<String> statuses = null;

  @SerializedName("Type")
  private String type = null;

  public FilterForListScalingEventsInput endTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

   /**
   * Get endTime
   * @return endTime
  **/
  @Schema(description = "")
  public String getEndTime() {
    return endTime;
  }

  public void setEndTime(String endTime) {
    this.endTime = endTime;
  }

  public FilterForListScalingEventsInput ids(List<String> ids) {
    this.ids = ids;
    return this;
  }

  public FilterForListScalingEventsInput addIdsItem(String idsItem) {
    if (this.ids == null) {
      this.ids = new ArrayList<String>();
    }
    this.ids.add(idsItem);
    return this;
  }

   /**
   * Get ids
   * @return ids
  **/
  @Schema(description = "")
  public List<String> getIds() {
    return ids;
  }

  public void setIds(List<String> ids) {
    this.ids = ids;
  }

  public FilterForListScalingEventsInput nodeIds(List<String> nodeIds) {
    this.nodeIds = nodeIds;
    return this;
  }

  public FilterForListScalingEventsInput addNodeIdsItem(String nodeIdsItem) {
    if (this.nodeIds == null) {
      this.nodeIds = new ArrayList<String>();
    }
    this.nodeIds.add(nodeIdsItem);
    return this;
  }

   /**
   * Get nodeIds
   * @return nodeIds
  **/
  @Schema(description = "")
  public List<String> getNodeIds() {
    return nodeIds;
  }

  public void setNodeIds(List<String> nodeIds) {
    this.nodeIds = nodeIds;
  }

  public FilterForListScalingEventsInput nodePoolIds(List<String> nodePoolIds) {
    this.nodePoolIds = nodePoolIds;
    return this;
  }

  public FilterForListScalingEventsInput addNodePoolIdsItem(String nodePoolIdsItem) {
    if (this.nodePoolIds == null) {
      this.nodePoolIds = new ArrayList<String>();
    }
    this.nodePoolIds.add(nodePoolIdsItem);
    return this;
  }

   /**
   * Get nodePoolIds
   * @return nodePoolIds
  **/
  @Schema(description = "")
  public List<String> getNodePoolIds() {
    return nodePoolIds;
  }

  public void setNodePoolIds(List<String> nodePoolIds) {
    this.nodePoolIds = nodePoolIds;
  }

  public FilterForListScalingEventsInput startTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @Schema(description = "")
  public String getStartTime() {
    return startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }

  public FilterForListScalingEventsInput statuses(List<String> statuses) {
    this.statuses = statuses;
    return this;
  }

  public FilterForListScalingEventsInput addStatusesItem(String statusesItem) {
    if (this.statuses == null) {
      this.statuses = new ArrayList<String>();
    }
    this.statuses.add(statusesItem);
    return this;
  }

   /**
   * Get statuses
   * @return statuses
  **/
  @Schema(description = "")
  public List<String> getStatuses() {
    return statuses;
  }

  public void setStatuses(List<String> statuses) {
    this.statuses = statuses;
  }

  public FilterForListScalingEventsInput type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FilterForListScalingEventsInput filterForListScalingEventsInput = (FilterForListScalingEventsInput) o;
    return Objects.equals(this.endTime, filterForListScalingEventsInput.endTime) &&
        Objects.equals(this.ids, filterForListScalingEventsInput.ids) &&
        Objects.equals(this.nodeIds, filterForListScalingEventsInput.nodeIds) &&
        Objects.equals(this.nodePoolIds, filterForListScalingEventsInput.nodePoolIds) &&
        Objects.equals(this.startTime, filterForListScalingEventsInput.startTime) &&
        Objects.equals(this.statuses, filterForListScalingEventsInput.statuses) &&
        Objects.equals(this.type, filterForListScalingEventsInput.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endTime, ids, nodeIds, nodePoolIds, startTime, statuses, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FilterForListScalingEventsInput {\n");
    
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    ids: ").append(toIndentedString(ids)).append("\n");
    sb.append("    nodeIds: ").append(toIndentedString(nodeIds)).append("\n");
    sb.append("    nodePoolIds: ").append(toIndentedString(nodePoolIds)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    statuses: ").append(toIndentedString(statuses)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
