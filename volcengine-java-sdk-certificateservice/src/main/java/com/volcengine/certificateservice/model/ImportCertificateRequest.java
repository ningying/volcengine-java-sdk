/*
 * certificate_service
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.certificateservice.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.certificateservice.model.CertificateInfoForImportCertificateInput;
import com.volcengine.certificateservice.model.GmCertificateInfoForImportCertificateInput;
import com.volcengine.certificateservice.model.TagForImportCertificateInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ImportCertificateRequest
 */



public class ImportCertificateRequest {
  @SerializedName("CertificateInfo")
  private CertificateInfoForImportCertificateInput certificateInfo = null;

  @SerializedName("GmCertificateInfo")
  private GmCertificateInfoForImportCertificateInput gmCertificateInfo = null;

  @SerializedName("NoVerifyAndFixChain")
  private Boolean noVerifyAndFixChain = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("Repeatable")
  private Boolean repeatable = null;

  @SerializedName("Tag")
  private String tag = null;

  @SerializedName("Tags")
  private List<TagForImportCertificateInput> tags = null;

  public ImportCertificateRequest certificateInfo(CertificateInfoForImportCertificateInput certificateInfo) {
    this.certificateInfo = certificateInfo;
    return this;
  }

   /**
   * Get certificateInfo
   * @return certificateInfo
  **/
  @Valid
  @Schema(description = "")
  public CertificateInfoForImportCertificateInput getCertificateInfo() {
    return certificateInfo;
  }

  public void setCertificateInfo(CertificateInfoForImportCertificateInput certificateInfo) {
    this.certificateInfo = certificateInfo;
  }

  public ImportCertificateRequest gmCertificateInfo(GmCertificateInfoForImportCertificateInput gmCertificateInfo) {
    this.gmCertificateInfo = gmCertificateInfo;
    return this;
  }

   /**
   * Get gmCertificateInfo
   * @return gmCertificateInfo
  **/
  @Valid
  @Schema(description = "")
  public GmCertificateInfoForImportCertificateInput getGmCertificateInfo() {
    return gmCertificateInfo;
  }

  public void setGmCertificateInfo(GmCertificateInfoForImportCertificateInput gmCertificateInfo) {
    this.gmCertificateInfo = gmCertificateInfo;
  }

  public ImportCertificateRequest noVerifyAndFixChain(Boolean noVerifyAndFixChain) {
    this.noVerifyAndFixChain = noVerifyAndFixChain;
    return this;
  }

   /**
   * Get noVerifyAndFixChain
   * @return noVerifyAndFixChain
  **/
  @Schema(description = "")
  public Boolean isNoVerifyAndFixChain() {
    return noVerifyAndFixChain;
  }

  public void setNoVerifyAndFixChain(Boolean noVerifyAndFixChain) {
    this.noVerifyAndFixChain = noVerifyAndFixChain;
  }

  public ImportCertificateRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public ImportCertificateRequest repeatable(Boolean repeatable) {
    this.repeatable = repeatable;
    return this;
  }

   /**
   * Get repeatable
   * @return repeatable
  **/
  @Schema(description = "")
  public Boolean isRepeatable() {
    return repeatable;
  }

  public void setRepeatable(Boolean repeatable) {
    this.repeatable = repeatable;
  }

  public ImportCertificateRequest tag(String tag) {
    this.tag = tag;
    return this;
  }

   /**
   * Get tag
   * @return tag
  **/
  @Schema(description = "")
  public String getTag() {
    return tag;
  }

  public void setTag(String tag) {
    this.tag = tag;
  }

  public ImportCertificateRequest tags(List<TagForImportCertificateInput> tags) {
    this.tags = tags;
    return this;
  }

  public ImportCertificateRequest addTagsItem(TagForImportCertificateInput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForImportCertificateInput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForImportCertificateInput> getTags() {
    return tags;
  }

  public void setTags(List<TagForImportCertificateInput> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ImportCertificateRequest importCertificateRequest = (ImportCertificateRequest) o;
    return Objects.equals(this.certificateInfo, importCertificateRequest.certificateInfo) &&
        Objects.equals(this.gmCertificateInfo, importCertificateRequest.gmCertificateInfo) &&
        Objects.equals(this.noVerifyAndFixChain, importCertificateRequest.noVerifyAndFixChain) &&
        Objects.equals(this.projectName, importCertificateRequest.projectName) &&
        Objects.equals(this.repeatable, importCertificateRequest.repeatable) &&
        Objects.equals(this.tag, importCertificateRequest.tag) &&
        Objects.equals(this.tags, importCertificateRequest.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(certificateInfo, gmCertificateInfo, noVerifyAndFixChain, projectName, repeatable, tag, tags);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ImportCertificateRequest {\n");
    
    sb.append("    certificateInfo: ").append(toIndentedString(certificateInfo)).append("\n");
    sb.append("    gmCertificateInfo: ").append(toIndentedString(gmCertificateInfo)).append("\n");
    sb.append("    noVerifyAndFixChain: ").append(toIndentedString(noVerifyAndFixChain)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    repeatable: ").append(toIndentedString(repeatable)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
