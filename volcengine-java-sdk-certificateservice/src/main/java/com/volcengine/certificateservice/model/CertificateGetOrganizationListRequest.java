/*
 * certificate_service
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.certificateservice.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.certificateservice.model.TagFilterForCertificateGetOrganizationListInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CertificateGetOrganizationListRequest
 */



public class CertificateGetOrganizationListRequest {
  @SerializedName("OrganizationIds")
  private List<String> organizationIds = null;

  /**
   * Gets or Sets organizationType
   */
  @JsonAdapter(OrganizationTypeEnum.Adapter.class)
  public enum OrganizationTypeEnum {
    @SerializedName("Enterprise")
    ENTERPRISE("Enterprise"),
    @SerializedName("Individual")
    INDIVIDUAL("Individual");

    private String value;

    OrganizationTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static OrganizationTypeEnum fromValue(String input) {
      for (OrganizationTypeEnum b : OrganizationTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<OrganizationTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OrganizationTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public OrganizationTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return OrganizationTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("OrganizationType")
  private OrganizationTypeEnum organizationType = null;

  @SerializedName("PageNumber")
  private Integer pageNumber = null;

  @SerializedName("PageSize")
  private Integer pageSize = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("Tag")
  private String tag = null;

  @SerializedName("TagFilters")
  private List<TagFilterForCertificateGetOrganizationListInput> tagFilters = null;

  public CertificateGetOrganizationListRequest organizationIds(List<String> organizationIds) {
    this.organizationIds = organizationIds;
    return this;
  }

  public CertificateGetOrganizationListRequest addOrganizationIdsItem(String organizationIdsItem) {
    if (this.organizationIds == null) {
      this.organizationIds = new ArrayList<String>();
    }
    this.organizationIds.add(organizationIdsItem);
    return this;
  }

   /**
   * Get organizationIds
   * @return organizationIds
  **/
  @Schema(description = "")
  public List<String> getOrganizationIds() {
    return organizationIds;
  }

  public void setOrganizationIds(List<String> organizationIds) {
    this.organizationIds = organizationIds;
  }

  public CertificateGetOrganizationListRequest organizationType(OrganizationTypeEnum organizationType) {
    this.organizationType = organizationType;
    return this;
  }

   /**
   * Get organizationType
   * @return organizationType
  **/
  @Schema(description = "")
  public OrganizationTypeEnum getOrganizationType() {
    return organizationType;
  }

  public void setOrganizationType(OrganizationTypeEnum organizationType) {
    this.organizationType = organizationType;
  }

  public CertificateGetOrganizationListRequest pageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

   /**
   * Get pageNumber
   * @return pageNumber
  **/
  @Schema(description = "")
  public Integer getPageNumber() {
    return pageNumber;
  }

  public void setPageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
  }

  public CertificateGetOrganizationListRequest pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @Schema(description = "")
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  public CertificateGetOrganizationListRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public CertificateGetOrganizationListRequest tag(String tag) {
    this.tag = tag;
    return this;
  }

   /**
   * Get tag
   * @return tag
  **/
  @Schema(description = "")
  public String getTag() {
    return tag;
  }

  public void setTag(String tag) {
    this.tag = tag;
  }

  public CertificateGetOrganizationListRequest tagFilters(List<TagFilterForCertificateGetOrganizationListInput> tagFilters) {
    this.tagFilters = tagFilters;
    return this;
  }

  public CertificateGetOrganizationListRequest addTagFiltersItem(TagFilterForCertificateGetOrganizationListInput tagFiltersItem) {
    if (this.tagFilters == null) {
      this.tagFilters = new ArrayList<TagFilterForCertificateGetOrganizationListInput>();
    }
    this.tagFilters.add(tagFiltersItem);
    return this;
  }

   /**
   * Get tagFilters
   * @return tagFilters
  **/
  @Valid
  @Schema(description = "")
  public List<TagFilterForCertificateGetOrganizationListInput> getTagFilters() {
    return tagFilters;
  }

  public void setTagFilters(List<TagFilterForCertificateGetOrganizationListInput> tagFilters) {
    this.tagFilters = tagFilters;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CertificateGetOrganizationListRequest certificateGetOrganizationListRequest = (CertificateGetOrganizationListRequest) o;
    return Objects.equals(this.organizationIds, certificateGetOrganizationListRequest.organizationIds) &&
        Objects.equals(this.organizationType, certificateGetOrganizationListRequest.organizationType) &&
        Objects.equals(this.pageNumber, certificateGetOrganizationListRequest.pageNumber) &&
        Objects.equals(this.pageSize, certificateGetOrganizationListRequest.pageSize) &&
        Objects.equals(this.projectName, certificateGetOrganizationListRequest.projectName) &&
        Objects.equals(this.tag, certificateGetOrganizationListRequest.tag) &&
        Objects.equals(this.tagFilters, certificateGetOrganizationListRequest.tagFilters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(organizationIds, organizationType, pageNumber, pageSize, projectName, tag, tagFilters);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CertificateGetOrganizationListRequest {\n");
    
    sb.append("    organizationIds: ").append(toIndentedString(organizationIds)).append("\n");
    sb.append("    organizationType: ").append(toIndentedString(organizationType)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("    tagFilters: ").append(toIndentedString(tagFilters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
