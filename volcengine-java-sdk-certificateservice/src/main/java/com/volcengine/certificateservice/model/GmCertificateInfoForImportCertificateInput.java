/*
 * certificate_service
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.certificateservice.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * GmCertificateInfoForImportCertificateInput
 */



public class GmCertificateInfoForImportCertificateInput {
  @SerializedName("EncryptCertificateChain")
  private String encryptCertificateChain = null;

  @SerializedName("EncryptPrivateKey")
  private String encryptPrivateKey = null;

  @SerializedName("SignCertificateChain")
  private String signCertificateChain = null;

  @SerializedName("SignPrivateKey")
  private String signPrivateKey = null;

  public GmCertificateInfoForImportCertificateInput encryptCertificateChain(String encryptCertificateChain) {
    this.encryptCertificateChain = encryptCertificateChain;
    return this;
  }

   /**
   * Get encryptCertificateChain
   * @return encryptCertificateChain
  **/
  @Schema(description = "")
  public String getEncryptCertificateChain() {
    return encryptCertificateChain;
  }

  public void setEncryptCertificateChain(String encryptCertificateChain) {
    this.encryptCertificateChain = encryptCertificateChain;
  }

  public GmCertificateInfoForImportCertificateInput encryptPrivateKey(String encryptPrivateKey) {
    this.encryptPrivateKey = encryptPrivateKey;
    return this;
  }

   /**
   * Get encryptPrivateKey
   * @return encryptPrivateKey
  **/
  @Schema(description = "")
  public String getEncryptPrivateKey() {
    return encryptPrivateKey;
  }

  public void setEncryptPrivateKey(String encryptPrivateKey) {
    this.encryptPrivateKey = encryptPrivateKey;
  }

  public GmCertificateInfoForImportCertificateInput signCertificateChain(String signCertificateChain) {
    this.signCertificateChain = signCertificateChain;
    return this;
  }

   /**
   * Get signCertificateChain
   * @return signCertificateChain
  **/
  @Schema(description = "")
  public String getSignCertificateChain() {
    return signCertificateChain;
  }

  public void setSignCertificateChain(String signCertificateChain) {
    this.signCertificateChain = signCertificateChain;
  }

  public GmCertificateInfoForImportCertificateInput signPrivateKey(String signPrivateKey) {
    this.signPrivateKey = signPrivateKey;
    return this;
  }

   /**
   * Get signPrivateKey
   * @return signPrivateKey
  **/
  @Schema(description = "")
  public String getSignPrivateKey() {
    return signPrivateKey;
  }

  public void setSignPrivateKey(String signPrivateKey) {
    this.signPrivateKey = signPrivateKey;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GmCertificateInfoForImportCertificateInput gmCertificateInfoForImportCertificateInput = (GmCertificateInfoForImportCertificateInput) o;
    return Objects.equals(this.encryptCertificateChain, gmCertificateInfoForImportCertificateInput.encryptCertificateChain) &&
        Objects.equals(this.encryptPrivateKey, gmCertificateInfoForImportCertificateInput.encryptPrivateKey) &&
        Objects.equals(this.signCertificateChain, gmCertificateInfoForImportCertificateInput.signCertificateChain) &&
        Objects.equals(this.signPrivateKey, gmCertificateInfoForImportCertificateInput.signPrivateKey);
  }

  @Override
  public int hashCode() {
    return Objects.hash(encryptCertificateChain, encryptPrivateKey, signCertificateChain, signPrivateKey);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GmCertificateInfoForImportCertificateInput {\n");
    
    sb.append("    encryptCertificateChain: ").append(toIndentedString(encryptCertificateChain)).append("\n");
    sb.append("    encryptPrivateKey: ").append(toIndentedString(encryptPrivateKey)).append("\n");
    sb.append("    signCertificateChain: ").append(toIndentedString(signCertificateChain)).append("\n");
    sb.append("    signPrivateKey: ").append(toIndentedString(signPrivateKey)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
