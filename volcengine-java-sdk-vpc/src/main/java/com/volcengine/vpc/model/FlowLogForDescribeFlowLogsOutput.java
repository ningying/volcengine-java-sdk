/*
 * vpc
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vpc.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vpc.model.TagForDescribeFlowLogsOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * FlowLogForDescribeFlowLogsOutput
 */



public class FlowLogForDescribeFlowLogsOutput {
  @SerializedName("AccountId")
  private String accountId = null;

  @SerializedName("AggregationInterval")
  private Integer aggregationInterval = null;

  @SerializedName("BusinessStatus")
  private String businessStatus = null;

  @SerializedName("CreatedAt")
  private String createdAt = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("FlowLogId")
  private String flowLogId = null;

  @SerializedName("FlowLogName")
  private String flowLogName = null;

  @SerializedName("LockReason")
  private String lockReason = null;

  @SerializedName("LogProjectId")
  private String logProjectId = null;

  @SerializedName("LogTopicId")
  private String logTopicId = null;

  @SerializedName("OpenAnalyzeProductLog")
  private Boolean openAnalyzeProductLog = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("ResourceId")
  private String resourceId = null;

  @SerializedName("ResourceType")
  private String resourceType = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("Tags")
  private List<TagForDescribeFlowLogsOutput> tags = null;

  /**
   * Gets or Sets trafficType
   */
  @JsonAdapter(TrafficTypeEnum.Adapter.class)
  public enum TrafficTypeEnum {
    @SerializedName("All")
    ALL("All"),
    @SerializedName("Allow")
    ALLOW("Allow"),
    @SerializedName("Drop")
    DROP("Drop");

    private String value;

    TrafficTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TrafficTypeEnum fromValue(String input) {
      for (TrafficTypeEnum b : TrafficTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TrafficTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TrafficTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public TrafficTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return TrafficTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("TrafficType")
  private TrafficTypeEnum trafficType = null;

  @SerializedName("UpdatedAt")
  private String updatedAt = null;

  @SerializedName("VpcId")
  private String vpcId = null;

  public FlowLogForDescribeFlowLogsOutput accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @Schema(description = "")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public FlowLogForDescribeFlowLogsOutput aggregationInterval(Integer aggregationInterval) {
    this.aggregationInterval = aggregationInterval;
    return this;
  }

   /**
   * Get aggregationInterval
   * @return aggregationInterval
  **/
  @Schema(description = "")
  public Integer getAggregationInterval() {
    return aggregationInterval;
  }

  public void setAggregationInterval(Integer aggregationInterval) {
    this.aggregationInterval = aggregationInterval;
  }

  public FlowLogForDescribeFlowLogsOutput businessStatus(String businessStatus) {
    this.businessStatus = businessStatus;
    return this;
  }

   /**
   * Get businessStatus
   * @return businessStatus
  **/
  @Schema(description = "")
  public String getBusinessStatus() {
    return businessStatus;
  }

  public void setBusinessStatus(String businessStatus) {
    this.businessStatus = businessStatus;
  }

  public FlowLogForDescribeFlowLogsOutput createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(description = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public FlowLogForDescribeFlowLogsOutput description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public FlowLogForDescribeFlowLogsOutput flowLogId(String flowLogId) {
    this.flowLogId = flowLogId;
    return this;
  }

   /**
   * Get flowLogId
   * @return flowLogId
  **/
  @Schema(description = "")
  public String getFlowLogId() {
    return flowLogId;
  }

  public void setFlowLogId(String flowLogId) {
    this.flowLogId = flowLogId;
  }

  public FlowLogForDescribeFlowLogsOutput flowLogName(String flowLogName) {
    this.flowLogName = flowLogName;
    return this;
  }

   /**
   * Get flowLogName
   * @return flowLogName
  **/
  @Schema(description = "")
  public String getFlowLogName() {
    return flowLogName;
  }

  public void setFlowLogName(String flowLogName) {
    this.flowLogName = flowLogName;
  }

  public FlowLogForDescribeFlowLogsOutput lockReason(String lockReason) {
    this.lockReason = lockReason;
    return this;
  }

   /**
   * Get lockReason
   * @return lockReason
  **/
  @Schema(description = "")
  public String getLockReason() {
    return lockReason;
  }

  public void setLockReason(String lockReason) {
    this.lockReason = lockReason;
  }

  public FlowLogForDescribeFlowLogsOutput logProjectId(String logProjectId) {
    this.logProjectId = logProjectId;
    return this;
  }

   /**
   * Get logProjectId
   * @return logProjectId
  **/
  @Schema(description = "")
  public String getLogProjectId() {
    return logProjectId;
  }

  public void setLogProjectId(String logProjectId) {
    this.logProjectId = logProjectId;
  }

  public FlowLogForDescribeFlowLogsOutput logTopicId(String logTopicId) {
    this.logTopicId = logTopicId;
    return this;
  }

   /**
   * Get logTopicId
   * @return logTopicId
  **/
  @Schema(description = "")
  public String getLogTopicId() {
    return logTopicId;
  }

  public void setLogTopicId(String logTopicId) {
    this.logTopicId = logTopicId;
  }

  public FlowLogForDescribeFlowLogsOutput openAnalyzeProductLog(Boolean openAnalyzeProductLog) {
    this.openAnalyzeProductLog = openAnalyzeProductLog;
    return this;
  }

   /**
   * Get openAnalyzeProductLog
   * @return openAnalyzeProductLog
  **/
  @Schema(description = "")
  public Boolean isOpenAnalyzeProductLog() {
    return openAnalyzeProductLog;
  }

  public void setOpenAnalyzeProductLog(Boolean openAnalyzeProductLog) {
    this.openAnalyzeProductLog = openAnalyzeProductLog;
  }

  public FlowLogForDescribeFlowLogsOutput projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public FlowLogForDescribeFlowLogsOutput resourceId(String resourceId) {
    this.resourceId = resourceId;
    return this;
  }

   /**
   * Get resourceId
   * @return resourceId
  **/
  @Schema(description = "")
  public String getResourceId() {
    return resourceId;
  }

  public void setResourceId(String resourceId) {
    this.resourceId = resourceId;
  }

  public FlowLogForDescribeFlowLogsOutput resourceType(String resourceType) {
    this.resourceType = resourceType;
    return this;
  }

   /**
   * Get resourceType
   * @return resourceType
  **/
  @Schema(description = "")
  public String getResourceType() {
    return resourceType;
  }

  public void setResourceType(String resourceType) {
    this.resourceType = resourceType;
  }

  public FlowLogForDescribeFlowLogsOutput status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public FlowLogForDescribeFlowLogsOutput tags(List<TagForDescribeFlowLogsOutput> tags) {
    this.tags = tags;
    return this;
  }

  public FlowLogForDescribeFlowLogsOutput addTagsItem(TagForDescribeFlowLogsOutput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForDescribeFlowLogsOutput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForDescribeFlowLogsOutput> getTags() {
    return tags;
  }

  public void setTags(List<TagForDescribeFlowLogsOutput> tags) {
    this.tags = tags;
  }

  public FlowLogForDescribeFlowLogsOutput trafficType(TrafficTypeEnum trafficType) {
    this.trafficType = trafficType;
    return this;
  }

   /**
   * Get trafficType
   * @return trafficType
  **/
  @Schema(description = "")
  public TrafficTypeEnum getTrafficType() {
    return trafficType;
  }

  public void setTrafficType(TrafficTypeEnum trafficType) {
    this.trafficType = trafficType;
  }

  public FlowLogForDescribeFlowLogsOutput updatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @Schema(description = "")
  public String getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }

  public FlowLogForDescribeFlowLogsOutput vpcId(String vpcId) {
    this.vpcId = vpcId;
    return this;
  }

   /**
   * Get vpcId
   * @return vpcId
  **/
  @Schema(description = "")
  public String getVpcId() {
    return vpcId;
  }

  public void setVpcId(String vpcId) {
    this.vpcId = vpcId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FlowLogForDescribeFlowLogsOutput flowLogForDescribeFlowLogsOutput = (FlowLogForDescribeFlowLogsOutput) o;
    return Objects.equals(this.accountId, flowLogForDescribeFlowLogsOutput.accountId) &&
        Objects.equals(this.aggregationInterval, flowLogForDescribeFlowLogsOutput.aggregationInterval) &&
        Objects.equals(this.businessStatus, flowLogForDescribeFlowLogsOutput.businessStatus) &&
        Objects.equals(this.createdAt, flowLogForDescribeFlowLogsOutput.createdAt) &&
        Objects.equals(this.description, flowLogForDescribeFlowLogsOutput.description) &&
        Objects.equals(this.flowLogId, flowLogForDescribeFlowLogsOutput.flowLogId) &&
        Objects.equals(this.flowLogName, flowLogForDescribeFlowLogsOutput.flowLogName) &&
        Objects.equals(this.lockReason, flowLogForDescribeFlowLogsOutput.lockReason) &&
        Objects.equals(this.logProjectId, flowLogForDescribeFlowLogsOutput.logProjectId) &&
        Objects.equals(this.logTopicId, flowLogForDescribeFlowLogsOutput.logTopicId) &&
        Objects.equals(this.openAnalyzeProductLog, flowLogForDescribeFlowLogsOutput.openAnalyzeProductLog) &&
        Objects.equals(this.projectName, flowLogForDescribeFlowLogsOutput.projectName) &&
        Objects.equals(this.resourceId, flowLogForDescribeFlowLogsOutput.resourceId) &&
        Objects.equals(this.resourceType, flowLogForDescribeFlowLogsOutput.resourceType) &&
        Objects.equals(this.status, flowLogForDescribeFlowLogsOutput.status) &&
        Objects.equals(this.tags, flowLogForDescribeFlowLogsOutput.tags) &&
        Objects.equals(this.trafficType, flowLogForDescribeFlowLogsOutput.trafficType) &&
        Objects.equals(this.updatedAt, flowLogForDescribeFlowLogsOutput.updatedAt) &&
        Objects.equals(this.vpcId, flowLogForDescribeFlowLogsOutput.vpcId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, aggregationInterval, businessStatus, createdAt, description, flowLogId, flowLogName, lockReason, logProjectId, logTopicId, openAnalyzeProductLog, projectName, resourceId, resourceType, status, tags, trafficType, updatedAt, vpcId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FlowLogForDescribeFlowLogsOutput {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    aggregationInterval: ").append(toIndentedString(aggregationInterval)).append("\n");
    sb.append("    businessStatus: ").append(toIndentedString(businessStatus)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    flowLogId: ").append(toIndentedString(flowLogId)).append("\n");
    sb.append("    flowLogName: ").append(toIndentedString(flowLogName)).append("\n");
    sb.append("    lockReason: ").append(toIndentedString(lockReason)).append("\n");
    sb.append("    logProjectId: ").append(toIndentedString(logProjectId)).append("\n");
    sb.append("    logTopicId: ").append(toIndentedString(logTopicId)).append("\n");
    sb.append("    openAnalyzeProductLog: ").append(toIndentedString(openAnalyzeProductLog)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
    sb.append("    resourceType: ").append(toIndentedString(resourceType)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    trafficType: ").append(toIndentedString(trafficType)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    vpcId: ").append(toIndentedString(vpcId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
