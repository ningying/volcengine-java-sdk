/*
 * vpc
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vpc.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vpc.model.TagForCreateIpAddressPoolInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CreateIpAddressPoolRequest
 */



public class CreateIpAddressPoolRequest {
  @SerializedName("CidrBlock")
  private String cidrBlock = null;

  @SerializedName("CidrMask")
  private Integer cidrMask = null;

  @SerializedName("ClientToken")
  private String clientToken = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("ISP")
  private String ISP = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("Tags")
  private List<TagForCreateIpAddressPoolInput> tags = null;

  public CreateIpAddressPoolRequest cidrBlock(String cidrBlock) {
    this.cidrBlock = cidrBlock;
    return this;
  }

   /**
   * Get cidrBlock
   * @return cidrBlock
  **/
  @Schema(description = "")
  public String getCidrBlock() {
    return cidrBlock;
  }

  public void setCidrBlock(String cidrBlock) {
    this.cidrBlock = cidrBlock;
  }

  public CreateIpAddressPoolRequest cidrMask(Integer cidrMask) {
    this.cidrMask = cidrMask;
    return this;
  }

   /**
   * Get cidrMask
   * @return cidrMask
  **/
  @Schema(description = "")
  public Integer getCidrMask() {
    return cidrMask;
  }

  public void setCidrMask(Integer cidrMask) {
    this.cidrMask = cidrMask;
  }

  public CreateIpAddressPoolRequest clientToken(String clientToken) {
    this.clientToken = clientToken;
    return this;
  }

   /**
   * Get clientToken
   * @return clientToken
  **/
  @Schema(description = "")
  public String getClientToken() {
    return clientToken;
  }

  public void setClientToken(String clientToken) {
    this.clientToken = clientToken;
  }

  public CreateIpAddressPoolRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CreateIpAddressPoolRequest ISP(String ISP) {
    this.ISP = ISP;
    return this;
  }

   /**
   * Get ISP
   * @return ISP
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getISP() {
    return ISP;
  }

  public void setISP(String ISP) {
    this.ISP = ISP;
  }

  public CreateIpAddressPoolRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CreateIpAddressPoolRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public CreateIpAddressPoolRequest tags(List<TagForCreateIpAddressPoolInput> tags) {
    this.tags = tags;
    return this;
  }

  public CreateIpAddressPoolRequest addTagsItem(TagForCreateIpAddressPoolInput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForCreateIpAddressPoolInput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForCreateIpAddressPoolInput> getTags() {
    return tags;
  }

  public void setTags(List<TagForCreateIpAddressPoolInput> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateIpAddressPoolRequest createIpAddressPoolRequest = (CreateIpAddressPoolRequest) o;
    return Objects.equals(this.cidrBlock, createIpAddressPoolRequest.cidrBlock) &&
        Objects.equals(this.cidrMask, createIpAddressPoolRequest.cidrMask) &&
        Objects.equals(this.clientToken, createIpAddressPoolRequest.clientToken) &&
        Objects.equals(this.description, createIpAddressPoolRequest.description) &&
        Objects.equals(this.ISP, createIpAddressPoolRequest.ISP) &&
        Objects.equals(this.name, createIpAddressPoolRequest.name) &&
        Objects.equals(this.projectName, createIpAddressPoolRequest.projectName) &&
        Objects.equals(this.tags, createIpAddressPoolRequest.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cidrBlock, cidrMask, clientToken, description, ISP, name, projectName, tags);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateIpAddressPoolRequest {\n");
    
    sb.append("    cidrBlock: ").append(toIndentedString(cidrBlock)).append("\n");
    sb.append("    cidrMask: ").append(toIndentedString(cidrMask)).append("\n");
    sb.append("    clientToken: ").append(toIndentedString(clientToken)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    ISP: ").append(toIndentedString(ISP)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
