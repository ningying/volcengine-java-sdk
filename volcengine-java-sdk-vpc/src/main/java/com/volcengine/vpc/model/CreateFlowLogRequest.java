/*
 * vpc
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vpc.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vpc.model.TagForCreateFlowLogInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CreateFlowLogRequest
 */



public class CreateFlowLogRequest {
  @SerializedName("AggregationInterval")
  private Integer aggregationInterval = null;

  @SerializedName("ClientToken")
  private String clientToken = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("FlowLogName")
  private String flowLogName = null;

  @SerializedName("LogProjectName")
  private String logProjectName = null;

  @SerializedName("LogTopicName")
  private String logTopicName = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("ResourceId")
  private String resourceId = null;

  @SerializedName("ResourceType")
  private String resourceType = null;

  @SerializedName("Tags")
  private List<TagForCreateFlowLogInput> tags = null;

  @SerializedName("TrafficType")
  private String trafficType = null;

  public CreateFlowLogRequest aggregationInterval(Integer aggregationInterval) {
    this.aggregationInterval = aggregationInterval;
    return this;
  }

   /**
   * Get aggregationInterval
   * @return aggregationInterval
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Integer getAggregationInterval() {
    return aggregationInterval;
  }

  public void setAggregationInterval(Integer aggregationInterval) {
    this.aggregationInterval = aggregationInterval;
  }

  public CreateFlowLogRequest clientToken(String clientToken) {
    this.clientToken = clientToken;
    return this;
  }

   /**
   * Get clientToken
   * @return clientToken
  **/
  @Schema(description = "")
  public String getClientToken() {
    return clientToken;
  }

  public void setClientToken(String clientToken) {
    this.clientToken = clientToken;
  }

  public CreateFlowLogRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
 @Size(max=255)  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CreateFlowLogRequest flowLogName(String flowLogName) {
    this.flowLogName = flowLogName;
    return this;
  }

   /**
   * Get flowLogName
   * @return flowLogName
  **/
  @NotNull
 @Size(min=1,max=128)  @Schema(required = true, description = "")
  public String getFlowLogName() {
    return flowLogName;
  }

  public void setFlowLogName(String flowLogName) {
    this.flowLogName = flowLogName;
  }

  public CreateFlowLogRequest logProjectName(String logProjectName) {
    this.logProjectName = logProjectName;
    return this;
  }

   /**
   * Get logProjectName
   * @return logProjectName
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getLogProjectName() {
    return logProjectName;
  }

  public void setLogProjectName(String logProjectName) {
    this.logProjectName = logProjectName;
  }

  public CreateFlowLogRequest logTopicName(String logTopicName) {
    this.logTopicName = logTopicName;
    return this;
  }

   /**
   * Get logTopicName
   * @return logTopicName
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getLogTopicName() {
    return logTopicName;
  }

  public void setLogTopicName(String logTopicName) {
    this.logTopicName = logTopicName;
  }

  public CreateFlowLogRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public CreateFlowLogRequest resourceId(String resourceId) {
    this.resourceId = resourceId;
    return this;
  }

   /**
   * Get resourceId
   * @return resourceId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getResourceId() {
    return resourceId;
  }

  public void setResourceId(String resourceId) {
    this.resourceId = resourceId;
  }

  public CreateFlowLogRequest resourceType(String resourceType) {
    this.resourceType = resourceType;
    return this;
  }

   /**
   * Get resourceType
   * @return resourceType
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getResourceType() {
    return resourceType;
  }

  public void setResourceType(String resourceType) {
    this.resourceType = resourceType;
  }

  public CreateFlowLogRequest tags(List<TagForCreateFlowLogInput> tags) {
    this.tags = tags;
    return this;
  }

  public CreateFlowLogRequest addTagsItem(TagForCreateFlowLogInput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForCreateFlowLogInput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForCreateFlowLogInput> getTags() {
    return tags;
  }

  public void setTags(List<TagForCreateFlowLogInput> tags) {
    this.tags = tags;
  }

  public CreateFlowLogRequest trafficType(String trafficType) {
    this.trafficType = trafficType;
    return this;
  }

   /**
   * Get trafficType
   * @return trafficType
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getTrafficType() {
    return trafficType;
  }

  public void setTrafficType(String trafficType) {
    this.trafficType = trafficType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateFlowLogRequest createFlowLogRequest = (CreateFlowLogRequest) o;
    return Objects.equals(this.aggregationInterval, createFlowLogRequest.aggregationInterval) &&
        Objects.equals(this.clientToken, createFlowLogRequest.clientToken) &&
        Objects.equals(this.description, createFlowLogRequest.description) &&
        Objects.equals(this.flowLogName, createFlowLogRequest.flowLogName) &&
        Objects.equals(this.logProjectName, createFlowLogRequest.logProjectName) &&
        Objects.equals(this.logTopicName, createFlowLogRequest.logTopicName) &&
        Objects.equals(this.projectName, createFlowLogRequest.projectName) &&
        Objects.equals(this.resourceId, createFlowLogRequest.resourceId) &&
        Objects.equals(this.resourceType, createFlowLogRequest.resourceType) &&
        Objects.equals(this.tags, createFlowLogRequest.tags) &&
        Objects.equals(this.trafficType, createFlowLogRequest.trafficType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aggregationInterval, clientToken, description, flowLogName, logProjectName, logTopicName, projectName, resourceId, resourceType, tags, trafficType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateFlowLogRequest {\n");
    
    sb.append("    aggregationInterval: ").append(toIndentedString(aggregationInterval)).append("\n");
    sb.append("    clientToken: ").append(toIndentedString(clientToken)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    flowLogName: ").append(toIndentedString(flowLogName)).append("\n");
    sb.append("    logProjectName: ").append(toIndentedString(logProjectName)).append("\n");
    sb.append("    logTopicName: ").append(toIndentedString(logTopicName)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
    sb.append("    resourceType: ").append(toIndentedString(resourceType)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    trafficType: ").append(toIndentedString(trafficType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
