/*
 * vpc
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vpc.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vpc.model.TagFilterForDescribeTrafficMirrorFiltersInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeTrafficMirrorFiltersRequest
 */



public class DescribeTrafficMirrorFiltersRequest {
  @SerializedName("MaxResults")
  private Integer maxResults = null;

  @SerializedName("NextToken")
  private String nextToken = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("TagFilters")
  private List<TagFilterForDescribeTrafficMirrorFiltersInput> tagFilters = null;

  @SerializedName("TrafficMirrorFilterIds")
  private String trafficMirrorFilterIds = null;

  @SerializedName("TrafficMirrorFilterNames")
  private String trafficMirrorFilterNames = null;

  public DescribeTrafficMirrorFiltersRequest maxResults(Integer maxResults) {
    this.maxResults = maxResults;
    return this;
  }

   /**
   * Get maxResults
   * @return maxResults
  **/
  @Schema(description = "")
  public Integer getMaxResults() {
    return maxResults;
  }

  public void setMaxResults(Integer maxResults) {
    this.maxResults = maxResults;
  }

  public DescribeTrafficMirrorFiltersRequest nextToken(String nextToken) {
    this.nextToken = nextToken;
    return this;
  }

   /**
   * Get nextToken
   * @return nextToken
  **/
  @Schema(description = "")
  public String getNextToken() {
    return nextToken;
  }

  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }

  public DescribeTrafficMirrorFiltersRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public DescribeTrafficMirrorFiltersRequest tagFilters(List<TagFilterForDescribeTrafficMirrorFiltersInput> tagFilters) {
    this.tagFilters = tagFilters;
    return this;
  }

  public DescribeTrafficMirrorFiltersRequest addTagFiltersItem(TagFilterForDescribeTrafficMirrorFiltersInput tagFiltersItem) {
    if (this.tagFilters == null) {
      this.tagFilters = new ArrayList<TagFilterForDescribeTrafficMirrorFiltersInput>();
    }
    this.tagFilters.add(tagFiltersItem);
    return this;
  }

   /**
   * Get tagFilters
   * @return tagFilters
  **/
  @Valid
  @Schema(description = "")
  public List<TagFilterForDescribeTrafficMirrorFiltersInput> getTagFilters() {
    return tagFilters;
  }

  public void setTagFilters(List<TagFilterForDescribeTrafficMirrorFiltersInput> tagFilters) {
    this.tagFilters = tagFilters;
  }

  public DescribeTrafficMirrorFiltersRequest trafficMirrorFilterIds(String trafficMirrorFilterIds) {
    this.trafficMirrorFilterIds = trafficMirrorFilterIds;
    return this;
  }

   /**
   * Get trafficMirrorFilterIds
   * @return trafficMirrorFilterIds
  **/
  @Schema(description = "")
  public String getTrafficMirrorFilterIds() {
    return trafficMirrorFilterIds;
  }

  public void setTrafficMirrorFilterIds(String trafficMirrorFilterIds) {
    this.trafficMirrorFilterIds = trafficMirrorFilterIds;
  }

  public DescribeTrafficMirrorFiltersRequest trafficMirrorFilterNames(String trafficMirrorFilterNames) {
    this.trafficMirrorFilterNames = trafficMirrorFilterNames;
    return this;
  }

   /**
   * Get trafficMirrorFilterNames
   * @return trafficMirrorFilterNames
  **/
  @Schema(description = "")
  public String getTrafficMirrorFilterNames() {
    return trafficMirrorFilterNames;
  }

  public void setTrafficMirrorFilterNames(String trafficMirrorFilterNames) {
    this.trafficMirrorFilterNames = trafficMirrorFilterNames;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeTrafficMirrorFiltersRequest describeTrafficMirrorFiltersRequest = (DescribeTrafficMirrorFiltersRequest) o;
    return Objects.equals(this.maxResults, describeTrafficMirrorFiltersRequest.maxResults) &&
        Objects.equals(this.nextToken, describeTrafficMirrorFiltersRequest.nextToken) &&
        Objects.equals(this.projectName, describeTrafficMirrorFiltersRequest.projectName) &&
        Objects.equals(this.tagFilters, describeTrafficMirrorFiltersRequest.tagFilters) &&
        Objects.equals(this.trafficMirrorFilterIds, describeTrafficMirrorFiltersRequest.trafficMirrorFilterIds) &&
        Objects.equals(this.trafficMirrorFilterNames, describeTrafficMirrorFiltersRequest.trafficMirrorFilterNames);
  }

  @Override
  public int hashCode() {
    return Objects.hash(maxResults, nextToken, projectName, tagFilters, trafficMirrorFilterIds, trafficMirrorFilterNames);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeTrafficMirrorFiltersRequest {\n");
    
    sb.append("    maxResults: ").append(toIndentedString(maxResults)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    tagFilters: ").append(toIndentedString(tagFilters)).append("\n");
    sb.append("    trafficMirrorFilterIds: ").append(toIndentedString(trafficMirrorFilterIds)).append("\n");
    sb.append("    trafficMirrorFilterNames: ").append(toIndentedString(trafficMirrorFilterNames)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
