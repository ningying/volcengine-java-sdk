/*
 * vpc
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vpc.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vpc.model.TagFilterForDescribeIpAddressPoolsInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeIpAddressPoolsRequest
 */



public class DescribeIpAddressPoolsRequest {
  @SerializedName("ISP")
  private String ISP = null;

  @SerializedName("IpAddressPoolIds")
  private List<String> ipAddressPoolIds = null;

  @SerializedName("MaxResults")
  private Integer maxResults = null;

  @SerializedName("NextToken")
  private String nextToken = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("TagFilters")
  private List<TagFilterForDescribeIpAddressPoolsInput> tagFilters = null;

  public DescribeIpAddressPoolsRequest ISP(String ISP) {
    this.ISP = ISP;
    return this;
  }

   /**
   * Get ISP
   * @return ISP
  **/
  @Schema(description = "")
  public String getISP() {
    return ISP;
  }

  public void setISP(String ISP) {
    this.ISP = ISP;
  }

  public DescribeIpAddressPoolsRequest ipAddressPoolIds(List<String> ipAddressPoolIds) {
    this.ipAddressPoolIds = ipAddressPoolIds;
    return this;
  }

  public DescribeIpAddressPoolsRequest addIpAddressPoolIdsItem(String ipAddressPoolIdsItem) {
    if (this.ipAddressPoolIds == null) {
      this.ipAddressPoolIds = new ArrayList<String>();
    }
    this.ipAddressPoolIds.add(ipAddressPoolIdsItem);
    return this;
  }

   /**
   * Get ipAddressPoolIds
   * @return ipAddressPoolIds
  **/
  @Schema(description = "")
  public List<String> getIpAddressPoolIds() {
    return ipAddressPoolIds;
  }

  public void setIpAddressPoolIds(List<String> ipAddressPoolIds) {
    this.ipAddressPoolIds = ipAddressPoolIds;
  }

  public DescribeIpAddressPoolsRequest maxResults(Integer maxResults) {
    this.maxResults = maxResults;
    return this;
  }

   /**
   * Get maxResults
   * @return maxResults
  **/
  @Schema(description = "")
  public Integer getMaxResults() {
    return maxResults;
  }

  public void setMaxResults(Integer maxResults) {
    this.maxResults = maxResults;
  }

  public DescribeIpAddressPoolsRequest nextToken(String nextToken) {
    this.nextToken = nextToken;
    return this;
  }

   /**
   * Get nextToken
   * @return nextToken
  **/
  @Schema(description = "")
  public String getNextToken() {
    return nextToken;
  }

  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }

  public DescribeIpAddressPoolsRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public DescribeIpAddressPoolsRequest status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public DescribeIpAddressPoolsRequest tagFilters(List<TagFilterForDescribeIpAddressPoolsInput> tagFilters) {
    this.tagFilters = tagFilters;
    return this;
  }

  public DescribeIpAddressPoolsRequest addTagFiltersItem(TagFilterForDescribeIpAddressPoolsInput tagFiltersItem) {
    if (this.tagFilters == null) {
      this.tagFilters = new ArrayList<TagFilterForDescribeIpAddressPoolsInput>();
    }
    this.tagFilters.add(tagFiltersItem);
    return this;
  }

   /**
   * Get tagFilters
   * @return tagFilters
  **/
  @Valid
  @Schema(description = "")
  public List<TagFilterForDescribeIpAddressPoolsInput> getTagFilters() {
    return tagFilters;
  }

  public void setTagFilters(List<TagFilterForDescribeIpAddressPoolsInput> tagFilters) {
    this.tagFilters = tagFilters;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeIpAddressPoolsRequest describeIpAddressPoolsRequest = (DescribeIpAddressPoolsRequest) o;
    return Objects.equals(this.ISP, describeIpAddressPoolsRequest.ISP) &&
        Objects.equals(this.ipAddressPoolIds, describeIpAddressPoolsRequest.ipAddressPoolIds) &&
        Objects.equals(this.maxResults, describeIpAddressPoolsRequest.maxResults) &&
        Objects.equals(this.nextToken, describeIpAddressPoolsRequest.nextToken) &&
        Objects.equals(this.projectName, describeIpAddressPoolsRequest.projectName) &&
        Objects.equals(this.status, describeIpAddressPoolsRequest.status) &&
        Objects.equals(this.tagFilters, describeIpAddressPoolsRequest.tagFilters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ISP, ipAddressPoolIds, maxResults, nextToken, projectName, status, tagFilters);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeIpAddressPoolsRequest {\n");
    
    sb.append("    ISP: ").append(toIndentedString(ISP)).append("\n");
    sb.append("    ipAddressPoolIds: ").append(toIndentedString(ipAddressPoolIds)).append("\n");
    sb.append("    maxResults: ").append(toIndentedString(maxResults)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tagFilters: ").append(toIndentedString(tagFilters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
