/*
 * vpc
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vpc.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vpc.model.PrefixListEntryForCreatePrefixListInput;
import com.volcengine.vpc.model.TagForCreatePrefixListInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CreatePrefixListRequest
 */



public class CreatePrefixListRequest {
  @SerializedName("ClientToken")
  private String clientToken = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("DryRun")
  private Boolean dryRun = null;

  /**
   * Gets or Sets ipVersion
   */
  @JsonAdapter(IpVersionEnum.Adapter.class)
  public enum IpVersionEnum {
    @SerializedName("IPv4")
    IPV4("IPv4"),
    @SerializedName("IPv6")
    IPV6("IPv6");

    private String value;

    IpVersionEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static IpVersionEnum fromValue(String input) {
      for (IpVersionEnum b : IpVersionEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<IpVersionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final IpVersionEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public IpVersionEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return IpVersionEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("IpVersion")
  private IpVersionEnum ipVersion = null;

  @SerializedName("MaxEntries")
  private Integer maxEntries = null;

  @SerializedName("PrefixListEntries")
  private List<PrefixListEntryForCreatePrefixListInput> prefixListEntries = null;

  @SerializedName("PrefixListName")
  private String prefixListName = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("Tags")
  private List<TagForCreatePrefixListInput> tags = null;

  public CreatePrefixListRequest clientToken(String clientToken) {
    this.clientToken = clientToken;
    return this;
  }

   /**
   * Get clientToken
   * @return clientToken
  **/
  @Schema(description = "")
  public String getClientToken() {
    return clientToken;
  }

  public void setClientToken(String clientToken) {
    this.clientToken = clientToken;
  }

  public CreatePrefixListRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
 @Size(min=1,max=255)  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CreatePrefixListRequest dryRun(Boolean dryRun) {
    this.dryRun = dryRun;
    return this;
  }

   /**
   * Get dryRun
   * @return dryRun
  **/
  @Schema(description = "")
  public Boolean isDryRun() {
    return dryRun;
  }

  public void setDryRun(Boolean dryRun) {
    this.dryRun = dryRun;
  }

  public CreatePrefixListRequest ipVersion(IpVersionEnum ipVersion) {
    this.ipVersion = ipVersion;
    return this;
  }

   /**
   * Get ipVersion
   * @return ipVersion
  **/
  @Schema(description = "")
  public IpVersionEnum getIpVersion() {
    return ipVersion;
  }

  public void setIpVersion(IpVersionEnum ipVersion) {
    this.ipVersion = ipVersion;
  }

  public CreatePrefixListRequest maxEntries(Integer maxEntries) {
    this.maxEntries = maxEntries;
    return this;
  }

   /**
   * Get maxEntries
   * @return maxEntries
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Integer getMaxEntries() {
    return maxEntries;
  }

  public void setMaxEntries(Integer maxEntries) {
    this.maxEntries = maxEntries;
  }

  public CreatePrefixListRequest prefixListEntries(List<PrefixListEntryForCreatePrefixListInput> prefixListEntries) {
    this.prefixListEntries = prefixListEntries;
    return this;
  }

  public CreatePrefixListRequest addPrefixListEntriesItem(PrefixListEntryForCreatePrefixListInput prefixListEntriesItem) {
    if (this.prefixListEntries == null) {
      this.prefixListEntries = new ArrayList<PrefixListEntryForCreatePrefixListInput>();
    }
    this.prefixListEntries.add(prefixListEntriesItem);
    return this;
  }

   /**
   * Get prefixListEntries
   * @return prefixListEntries
  **/
  @Valid
  @Schema(description = "")
  public List<PrefixListEntryForCreatePrefixListInput> getPrefixListEntries() {
    return prefixListEntries;
  }

  public void setPrefixListEntries(List<PrefixListEntryForCreatePrefixListInput> prefixListEntries) {
    this.prefixListEntries = prefixListEntries;
  }

  public CreatePrefixListRequest prefixListName(String prefixListName) {
    this.prefixListName = prefixListName;
    return this;
  }

   /**
   * Get prefixListName
   * @return prefixListName
  **/
 @Size(min=1,max=128)  @Schema(description = "")
  public String getPrefixListName() {
    return prefixListName;
  }

  public void setPrefixListName(String prefixListName) {
    this.prefixListName = prefixListName;
  }

  public CreatePrefixListRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public CreatePrefixListRequest tags(List<TagForCreatePrefixListInput> tags) {
    this.tags = tags;
    return this;
  }

  public CreatePrefixListRequest addTagsItem(TagForCreatePrefixListInput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForCreatePrefixListInput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForCreatePrefixListInput> getTags() {
    return tags;
  }

  public void setTags(List<TagForCreatePrefixListInput> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatePrefixListRequest createPrefixListRequest = (CreatePrefixListRequest) o;
    return Objects.equals(this.clientToken, createPrefixListRequest.clientToken) &&
        Objects.equals(this.description, createPrefixListRequest.description) &&
        Objects.equals(this.dryRun, createPrefixListRequest.dryRun) &&
        Objects.equals(this.ipVersion, createPrefixListRequest.ipVersion) &&
        Objects.equals(this.maxEntries, createPrefixListRequest.maxEntries) &&
        Objects.equals(this.prefixListEntries, createPrefixListRequest.prefixListEntries) &&
        Objects.equals(this.prefixListName, createPrefixListRequest.prefixListName) &&
        Objects.equals(this.projectName, createPrefixListRequest.projectName) &&
        Objects.equals(this.tags, createPrefixListRequest.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientToken, description, dryRun, ipVersion, maxEntries, prefixListEntries, prefixListName, projectName, tags);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatePrefixListRequest {\n");
    
    sb.append("    clientToken: ").append(toIndentedString(clientToken)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    dryRun: ").append(toIndentedString(dryRun)).append("\n");
    sb.append("    ipVersion: ").append(toIndentedString(ipVersion)).append("\n");
    sb.append("    maxEntries: ").append(toIndentedString(maxEntries)).append("\n");
    sb.append("    prefixListEntries: ").append(toIndentedString(prefixListEntries)).append("\n");
    sb.append("    prefixListName: ").append(toIndentedString(prefixListName)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
