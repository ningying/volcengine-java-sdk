/*
 * vpc
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vpc.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vpc.model.TagFilterForDescribeTrafficMirrorSessionsInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeTrafficMirrorSessionsRequest
 */



public class DescribeTrafficMirrorSessionsRequest {
  @SerializedName("MaxResults")
  private Integer maxResults = null;

  @SerializedName("NetworkInterfaceId")
  private String networkInterfaceId = null;

  @SerializedName("NextToken")
  private String nextToken = null;

  @SerializedName("PacketLength")
  private Integer packetLength = null;

  @SerializedName("Priority")
  private Integer priority = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("TagFilters")
  private List<TagFilterForDescribeTrafficMirrorSessionsInput> tagFilters = null;

  @SerializedName("TrafficMirrorFilterId")
  private String trafficMirrorFilterId = null;

  @SerializedName("TrafficMirrorSessionIds")
  private String trafficMirrorSessionIds = null;

  @SerializedName("TrafficMirrorSessionNames")
  private String trafficMirrorSessionNames = null;

  @SerializedName("TrafficMirrorTargetId")
  private String trafficMirrorTargetId = null;

  @SerializedName("VirtualNetworkId")
  private Integer virtualNetworkId = null;

  public DescribeTrafficMirrorSessionsRequest maxResults(Integer maxResults) {
    this.maxResults = maxResults;
    return this;
  }

   /**
   * Get maxResults
   * @return maxResults
  **/
  @Schema(description = "")
  public Integer getMaxResults() {
    return maxResults;
  }

  public void setMaxResults(Integer maxResults) {
    this.maxResults = maxResults;
  }

  public DescribeTrafficMirrorSessionsRequest networkInterfaceId(String networkInterfaceId) {
    this.networkInterfaceId = networkInterfaceId;
    return this;
  }

   /**
   * Get networkInterfaceId
   * @return networkInterfaceId
  **/
  @Schema(description = "")
  public String getNetworkInterfaceId() {
    return networkInterfaceId;
  }

  public void setNetworkInterfaceId(String networkInterfaceId) {
    this.networkInterfaceId = networkInterfaceId;
  }

  public DescribeTrafficMirrorSessionsRequest nextToken(String nextToken) {
    this.nextToken = nextToken;
    return this;
  }

   /**
   * Get nextToken
   * @return nextToken
  **/
  @Schema(description = "")
  public String getNextToken() {
    return nextToken;
  }

  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }

  public DescribeTrafficMirrorSessionsRequest packetLength(Integer packetLength) {
    this.packetLength = packetLength;
    return this;
  }

   /**
   * Get packetLength
   * @return packetLength
  **/
  @Schema(description = "")
  public Integer getPacketLength() {
    return packetLength;
  }

  public void setPacketLength(Integer packetLength) {
    this.packetLength = packetLength;
  }

  public DescribeTrafficMirrorSessionsRequest priority(Integer priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Get priority
   * @return priority
  **/
  @Schema(description = "")
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }

  public DescribeTrafficMirrorSessionsRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public DescribeTrafficMirrorSessionsRequest tagFilters(List<TagFilterForDescribeTrafficMirrorSessionsInput> tagFilters) {
    this.tagFilters = tagFilters;
    return this;
  }

  public DescribeTrafficMirrorSessionsRequest addTagFiltersItem(TagFilterForDescribeTrafficMirrorSessionsInput tagFiltersItem) {
    if (this.tagFilters == null) {
      this.tagFilters = new ArrayList<TagFilterForDescribeTrafficMirrorSessionsInput>();
    }
    this.tagFilters.add(tagFiltersItem);
    return this;
  }

   /**
   * Get tagFilters
   * @return tagFilters
  **/
  @Valid
  @Schema(description = "")
  public List<TagFilterForDescribeTrafficMirrorSessionsInput> getTagFilters() {
    return tagFilters;
  }

  public void setTagFilters(List<TagFilterForDescribeTrafficMirrorSessionsInput> tagFilters) {
    this.tagFilters = tagFilters;
  }

  public DescribeTrafficMirrorSessionsRequest trafficMirrorFilterId(String trafficMirrorFilterId) {
    this.trafficMirrorFilterId = trafficMirrorFilterId;
    return this;
  }

   /**
   * Get trafficMirrorFilterId
   * @return trafficMirrorFilterId
  **/
  @Schema(description = "")
  public String getTrafficMirrorFilterId() {
    return trafficMirrorFilterId;
  }

  public void setTrafficMirrorFilterId(String trafficMirrorFilterId) {
    this.trafficMirrorFilterId = trafficMirrorFilterId;
  }

  public DescribeTrafficMirrorSessionsRequest trafficMirrorSessionIds(String trafficMirrorSessionIds) {
    this.trafficMirrorSessionIds = trafficMirrorSessionIds;
    return this;
  }

   /**
   * Get trafficMirrorSessionIds
   * @return trafficMirrorSessionIds
  **/
  @Schema(description = "")
  public String getTrafficMirrorSessionIds() {
    return trafficMirrorSessionIds;
  }

  public void setTrafficMirrorSessionIds(String trafficMirrorSessionIds) {
    this.trafficMirrorSessionIds = trafficMirrorSessionIds;
  }

  public DescribeTrafficMirrorSessionsRequest trafficMirrorSessionNames(String trafficMirrorSessionNames) {
    this.trafficMirrorSessionNames = trafficMirrorSessionNames;
    return this;
  }

   /**
   * Get trafficMirrorSessionNames
   * @return trafficMirrorSessionNames
  **/
  @Schema(description = "")
  public String getTrafficMirrorSessionNames() {
    return trafficMirrorSessionNames;
  }

  public void setTrafficMirrorSessionNames(String trafficMirrorSessionNames) {
    this.trafficMirrorSessionNames = trafficMirrorSessionNames;
  }

  public DescribeTrafficMirrorSessionsRequest trafficMirrorTargetId(String trafficMirrorTargetId) {
    this.trafficMirrorTargetId = trafficMirrorTargetId;
    return this;
  }

   /**
   * Get trafficMirrorTargetId
   * @return trafficMirrorTargetId
  **/
  @Schema(description = "")
  public String getTrafficMirrorTargetId() {
    return trafficMirrorTargetId;
  }

  public void setTrafficMirrorTargetId(String trafficMirrorTargetId) {
    this.trafficMirrorTargetId = trafficMirrorTargetId;
  }

  public DescribeTrafficMirrorSessionsRequest virtualNetworkId(Integer virtualNetworkId) {
    this.virtualNetworkId = virtualNetworkId;
    return this;
  }

   /**
   * Get virtualNetworkId
   * @return virtualNetworkId
  **/
  @Schema(description = "")
  public Integer getVirtualNetworkId() {
    return virtualNetworkId;
  }

  public void setVirtualNetworkId(Integer virtualNetworkId) {
    this.virtualNetworkId = virtualNetworkId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeTrafficMirrorSessionsRequest describeTrafficMirrorSessionsRequest = (DescribeTrafficMirrorSessionsRequest) o;
    return Objects.equals(this.maxResults, describeTrafficMirrorSessionsRequest.maxResults) &&
        Objects.equals(this.networkInterfaceId, describeTrafficMirrorSessionsRequest.networkInterfaceId) &&
        Objects.equals(this.nextToken, describeTrafficMirrorSessionsRequest.nextToken) &&
        Objects.equals(this.packetLength, describeTrafficMirrorSessionsRequest.packetLength) &&
        Objects.equals(this.priority, describeTrafficMirrorSessionsRequest.priority) &&
        Objects.equals(this.projectName, describeTrafficMirrorSessionsRequest.projectName) &&
        Objects.equals(this.tagFilters, describeTrafficMirrorSessionsRequest.tagFilters) &&
        Objects.equals(this.trafficMirrorFilterId, describeTrafficMirrorSessionsRequest.trafficMirrorFilterId) &&
        Objects.equals(this.trafficMirrorSessionIds, describeTrafficMirrorSessionsRequest.trafficMirrorSessionIds) &&
        Objects.equals(this.trafficMirrorSessionNames, describeTrafficMirrorSessionsRequest.trafficMirrorSessionNames) &&
        Objects.equals(this.trafficMirrorTargetId, describeTrafficMirrorSessionsRequest.trafficMirrorTargetId) &&
        Objects.equals(this.virtualNetworkId, describeTrafficMirrorSessionsRequest.virtualNetworkId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(maxResults, networkInterfaceId, nextToken, packetLength, priority, projectName, tagFilters, trafficMirrorFilterId, trafficMirrorSessionIds, trafficMirrorSessionNames, trafficMirrorTargetId, virtualNetworkId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeTrafficMirrorSessionsRequest {\n");
    
    sb.append("    maxResults: ").append(toIndentedString(maxResults)).append("\n");
    sb.append("    networkInterfaceId: ").append(toIndentedString(networkInterfaceId)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("    packetLength: ").append(toIndentedString(packetLength)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    tagFilters: ").append(toIndentedString(tagFilters)).append("\n");
    sb.append("    trafficMirrorFilterId: ").append(toIndentedString(trafficMirrorFilterId)).append("\n");
    sb.append("    trafficMirrorSessionIds: ").append(toIndentedString(trafficMirrorSessionIds)).append("\n");
    sb.append("    trafficMirrorSessionNames: ").append(toIndentedString(trafficMirrorSessionNames)).append("\n");
    sb.append("    trafficMirrorTargetId: ").append(toIndentedString(trafficMirrorTargetId)).append("\n");
    sb.append("    virtualNetworkId: ").append(toIndentedString(virtualNetworkId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
