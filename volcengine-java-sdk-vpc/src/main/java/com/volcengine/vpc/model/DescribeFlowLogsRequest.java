/*
 * vpc
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vpc.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vpc.model.TagFilterForDescribeFlowLogsInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeFlowLogsRequest
 */



public class DescribeFlowLogsRequest {
  @SerializedName("AggregationInterval")
  private Integer aggregationInterval = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("FlowLogIds")
  private List<String> flowLogIds = null;

  @SerializedName("FlowLogName")
  private String flowLogName = null;

  @SerializedName("LogProjectId")
  private String logProjectId = null;

  @SerializedName("LogTopicId")
  private String logTopicId = null;

  @SerializedName("MaxResults")
  private Integer maxResults = null;

  @SerializedName("NextToken")
  private String nextToken = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("ResourceId")
  private String resourceId = null;

  @SerializedName("ResourceType")
  private String resourceType = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("TagFilters")
  private List<TagFilterForDescribeFlowLogsInput> tagFilters = null;

  @SerializedName("TrafficType")
  private String trafficType = null;

  @SerializedName("VpcId")
  private String vpcId = null;

  public DescribeFlowLogsRequest aggregationInterval(Integer aggregationInterval) {
    this.aggregationInterval = aggregationInterval;
    return this;
  }

   /**
   * Get aggregationInterval
   * @return aggregationInterval
  **/
  @Schema(description = "")
  public Integer getAggregationInterval() {
    return aggregationInterval;
  }

  public void setAggregationInterval(Integer aggregationInterval) {
    this.aggregationInterval = aggregationInterval;
  }

  public DescribeFlowLogsRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public DescribeFlowLogsRequest flowLogIds(List<String> flowLogIds) {
    this.flowLogIds = flowLogIds;
    return this;
  }

  public DescribeFlowLogsRequest addFlowLogIdsItem(String flowLogIdsItem) {
    if (this.flowLogIds == null) {
      this.flowLogIds = new ArrayList<String>();
    }
    this.flowLogIds.add(flowLogIdsItem);
    return this;
  }

   /**
   * Get flowLogIds
   * @return flowLogIds
  **/
  @Schema(description = "")
  public List<String> getFlowLogIds() {
    return flowLogIds;
  }

  public void setFlowLogIds(List<String> flowLogIds) {
    this.flowLogIds = flowLogIds;
  }

  public DescribeFlowLogsRequest flowLogName(String flowLogName) {
    this.flowLogName = flowLogName;
    return this;
  }

   /**
   * Get flowLogName
   * @return flowLogName
  **/
  @Schema(description = "")
  public String getFlowLogName() {
    return flowLogName;
  }

  public void setFlowLogName(String flowLogName) {
    this.flowLogName = flowLogName;
  }

  public DescribeFlowLogsRequest logProjectId(String logProjectId) {
    this.logProjectId = logProjectId;
    return this;
  }

   /**
   * Get logProjectId
   * @return logProjectId
  **/
  @Schema(description = "")
  public String getLogProjectId() {
    return logProjectId;
  }

  public void setLogProjectId(String logProjectId) {
    this.logProjectId = logProjectId;
  }

  public DescribeFlowLogsRequest logTopicId(String logTopicId) {
    this.logTopicId = logTopicId;
    return this;
  }

   /**
   * Get logTopicId
   * @return logTopicId
  **/
  @Schema(description = "")
  public String getLogTopicId() {
    return logTopicId;
  }

  public void setLogTopicId(String logTopicId) {
    this.logTopicId = logTopicId;
  }

  public DescribeFlowLogsRequest maxResults(Integer maxResults) {
    this.maxResults = maxResults;
    return this;
  }

   /**
   * Get maxResults
   * @return maxResults
  **/
  @Schema(description = "")
  public Integer getMaxResults() {
    return maxResults;
  }

  public void setMaxResults(Integer maxResults) {
    this.maxResults = maxResults;
  }

  public DescribeFlowLogsRequest nextToken(String nextToken) {
    this.nextToken = nextToken;
    return this;
  }

   /**
   * Get nextToken
   * @return nextToken
  **/
  @Schema(description = "")
  public String getNextToken() {
    return nextToken;
  }

  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }

  public DescribeFlowLogsRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public DescribeFlowLogsRequest resourceId(String resourceId) {
    this.resourceId = resourceId;
    return this;
  }

   /**
   * Get resourceId
   * @return resourceId
  **/
  @Schema(description = "")
  public String getResourceId() {
    return resourceId;
  }

  public void setResourceId(String resourceId) {
    this.resourceId = resourceId;
  }

  public DescribeFlowLogsRequest resourceType(String resourceType) {
    this.resourceType = resourceType;
    return this;
  }

   /**
   * Get resourceType
   * @return resourceType
  **/
  @Schema(description = "")
  public String getResourceType() {
    return resourceType;
  }

  public void setResourceType(String resourceType) {
    this.resourceType = resourceType;
  }

  public DescribeFlowLogsRequest status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public DescribeFlowLogsRequest tagFilters(List<TagFilterForDescribeFlowLogsInput> tagFilters) {
    this.tagFilters = tagFilters;
    return this;
  }

  public DescribeFlowLogsRequest addTagFiltersItem(TagFilterForDescribeFlowLogsInput tagFiltersItem) {
    if (this.tagFilters == null) {
      this.tagFilters = new ArrayList<TagFilterForDescribeFlowLogsInput>();
    }
    this.tagFilters.add(tagFiltersItem);
    return this;
  }

   /**
   * Get tagFilters
   * @return tagFilters
  **/
  @Valid
  @Schema(description = "")
  public List<TagFilterForDescribeFlowLogsInput> getTagFilters() {
    return tagFilters;
  }

  public void setTagFilters(List<TagFilterForDescribeFlowLogsInput> tagFilters) {
    this.tagFilters = tagFilters;
  }

  public DescribeFlowLogsRequest trafficType(String trafficType) {
    this.trafficType = trafficType;
    return this;
  }

   /**
   * Get trafficType
   * @return trafficType
  **/
  @Schema(description = "")
  public String getTrafficType() {
    return trafficType;
  }

  public void setTrafficType(String trafficType) {
    this.trafficType = trafficType;
  }

  public DescribeFlowLogsRequest vpcId(String vpcId) {
    this.vpcId = vpcId;
    return this;
  }

   /**
   * Get vpcId
   * @return vpcId
  **/
  @Schema(description = "")
  public String getVpcId() {
    return vpcId;
  }

  public void setVpcId(String vpcId) {
    this.vpcId = vpcId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeFlowLogsRequest describeFlowLogsRequest = (DescribeFlowLogsRequest) o;
    return Objects.equals(this.aggregationInterval, describeFlowLogsRequest.aggregationInterval) &&
        Objects.equals(this.description, describeFlowLogsRequest.description) &&
        Objects.equals(this.flowLogIds, describeFlowLogsRequest.flowLogIds) &&
        Objects.equals(this.flowLogName, describeFlowLogsRequest.flowLogName) &&
        Objects.equals(this.logProjectId, describeFlowLogsRequest.logProjectId) &&
        Objects.equals(this.logTopicId, describeFlowLogsRequest.logTopicId) &&
        Objects.equals(this.maxResults, describeFlowLogsRequest.maxResults) &&
        Objects.equals(this.nextToken, describeFlowLogsRequest.nextToken) &&
        Objects.equals(this.projectName, describeFlowLogsRequest.projectName) &&
        Objects.equals(this.resourceId, describeFlowLogsRequest.resourceId) &&
        Objects.equals(this.resourceType, describeFlowLogsRequest.resourceType) &&
        Objects.equals(this.status, describeFlowLogsRequest.status) &&
        Objects.equals(this.tagFilters, describeFlowLogsRequest.tagFilters) &&
        Objects.equals(this.trafficType, describeFlowLogsRequest.trafficType) &&
        Objects.equals(this.vpcId, describeFlowLogsRequest.vpcId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aggregationInterval, description, flowLogIds, flowLogName, logProjectId, logTopicId, maxResults, nextToken, projectName, resourceId, resourceType, status, tagFilters, trafficType, vpcId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeFlowLogsRequest {\n");
    
    sb.append("    aggregationInterval: ").append(toIndentedString(aggregationInterval)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    flowLogIds: ").append(toIndentedString(flowLogIds)).append("\n");
    sb.append("    flowLogName: ").append(toIndentedString(flowLogName)).append("\n");
    sb.append("    logProjectId: ").append(toIndentedString(logProjectId)).append("\n");
    sb.append("    logTopicId: ").append(toIndentedString(logTopicId)).append("\n");
    sb.append("    maxResults: ").append(toIndentedString(maxResults)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
    sb.append("    resourceType: ").append(toIndentedString(resourceType)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tagFilters: ").append(toIndentedString(tagFilters)).append("\n");
    sb.append("    trafficType: ").append(toIndentedString(trafficType)).append("\n");
    sb.append("    vpcId: ").append(toIndentedString(vpcId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
