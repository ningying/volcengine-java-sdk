/*
 * vpc
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vpc.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vpc.model.TagFilterForDescribeNetworkInterfacesInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeNetworkInterfacesRequest
 */



public class DescribeNetworkInterfacesRequest {
  @SerializedName("InstanceId")
  private String instanceId = null;

  @SerializedName("Ipv6Addresses")
  private List<String> ipv6Addresses = null;

  @SerializedName("MaxResults")
  private Integer maxResults = null;

  @SerializedName("NetworkInterfaceIds")
  private List<String> networkInterfaceIds = null;

  @SerializedName("NetworkInterfaceName")
  private String networkInterfaceName = null;

  @SerializedName("NextToken")
  private String nextToken = null;

  @SerializedName("PageNumber")
  private Integer pageNumber = null;

  @SerializedName("PageSize")
  private Integer pageSize = null;

  @SerializedName("PrimaryIpAddresses")
  private List<String> primaryIpAddresses = null;

  @SerializedName("PrivateIpAddresses")
  private List<String> privateIpAddresses = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("SecurityGroupId")
  private String securityGroupId = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("SubnetId")
  private String subnetId = null;

  @SerializedName("TagFilters")
  private List<TagFilterForDescribeNetworkInterfacesInput> tagFilters = null;

  @SerializedName("Type")
  private String type = null;

  @SerializedName("VpcId")
  private String vpcId = null;

  @SerializedName("ZoneId")
  private String zoneId = null;

  public DescribeNetworkInterfacesRequest instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * Get instanceId
   * @return instanceId
  **/
  @Schema(description = "")
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }

  public DescribeNetworkInterfacesRequest ipv6Addresses(List<String> ipv6Addresses) {
    this.ipv6Addresses = ipv6Addresses;
    return this;
  }

  public DescribeNetworkInterfacesRequest addIpv6AddressesItem(String ipv6AddressesItem) {
    if (this.ipv6Addresses == null) {
      this.ipv6Addresses = new ArrayList<String>();
    }
    this.ipv6Addresses.add(ipv6AddressesItem);
    return this;
  }

   /**
   * Get ipv6Addresses
   * @return ipv6Addresses
  **/
  @Schema(description = "")
  public List<String> getIpv6Addresses() {
    return ipv6Addresses;
  }

  public void setIpv6Addresses(List<String> ipv6Addresses) {
    this.ipv6Addresses = ipv6Addresses;
  }

  public DescribeNetworkInterfacesRequest maxResults(Integer maxResults) {
    this.maxResults = maxResults;
    return this;
  }

   /**
   * Get maxResults
   * minimum: 1
   * maximum: 100
   * @return maxResults
  **/
 @Min(1) @Max(100)  @Schema(description = "")
  public Integer getMaxResults() {
    return maxResults;
  }

  public void setMaxResults(Integer maxResults) {
    this.maxResults = maxResults;
  }

  public DescribeNetworkInterfacesRequest networkInterfaceIds(List<String> networkInterfaceIds) {
    this.networkInterfaceIds = networkInterfaceIds;
    return this;
  }

  public DescribeNetworkInterfacesRequest addNetworkInterfaceIdsItem(String networkInterfaceIdsItem) {
    if (this.networkInterfaceIds == null) {
      this.networkInterfaceIds = new ArrayList<String>();
    }
    this.networkInterfaceIds.add(networkInterfaceIdsItem);
    return this;
  }

   /**
   * Get networkInterfaceIds
   * @return networkInterfaceIds
  **/
  @Schema(description = "")
  public List<String> getNetworkInterfaceIds() {
    return networkInterfaceIds;
  }

  public void setNetworkInterfaceIds(List<String> networkInterfaceIds) {
    this.networkInterfaceIds = networkInterfaceIds;
  }

  public DescribeNetworkInterfacesRequest networkInterfaceName(String networkInterfaceName) {
    this.networkInterfaceName = networkInterfaceName;
    return this;
  }

   /**
   * Get networkInterfaceName
   * @return networkInterfaceName
  **/
  @Schema(description = "")
  public String getNetworkInterfaceName() {
    return networkInterfaceName;
  }

  public void setNetworkInterfaceName(String networkInterfaceName) {
    this.networkInterfaceName = networkInterfaceName;
  }

  public DescribeNetworkInterfacesRequest nextToken(String nextToken) {
    this.nextToken = nextToken;
    return this;
  }

   /**
   * Get nextToken
   * @return nextToken
  **/
  @Schema(description = "")
  public String getNextToken() {
    return nextToken;
  }

  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }

  public DescribeNetworkInterfacesRequest pageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

   /**
   * Get pageNumber
   * @return pageNumber
  **/
  @Schema(description = "")
  public Integer getPageNumber() {
    return pageNumber;
  }

  public void setPageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
  }

  public DescribeNetworkInterfacesRequest pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * maximum: 100
   * @return pageSize
  **/
 @Max(100)  @Schema(description = "")
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  public DescribeNetworkInterfacesRequest primaryIpAddresses(List<String> primaryIpAddresses) {
    this.primaryIpAddresses = primaryIpAddresses;
    return this;
  }

  public DescribeNetworkInterfacesRequest addPrimaryIpAddressesItem(String primaryIpAddressesItem) {
    if (this.primaryIpAddresses == null) {
      this.primaryIpAddresses = new ArrayList<String>();
    }
    this.primaryIpAddresses.add(primaryIpAddressesItem);
    return this;
  }

   /**
   * Get primaryIpAddresses
   * @return primaryIpAddresses
  **/
  @Schema(description = "")
  public List<String> getPrimaryIpAddresses() {
    return primaryIpAddresses;
  }

  public void setPrimaryIpAddresses(List<String> primaryIpAddresses) {
    this.primaryIpAddresses = primaryIpAddresses;
  }

  public DescribeNetworkInterfacesRequest privateIpAddresses(List<String> privateIpAddresses) {
    this.privateIpAddresses = privateIpAddresses;
    return this;
  }

  public DescribeNetworkInterfacesRequest addPrivateIpAddressesItem(String privateIpAddressesItem) {
    if (this.privateIpAddresses == null) {
      this.privateIpAddresses = new ArrayList<String>();
    }
    this.privateIpAddresses.add(privateIpAddressesItem);
    return this;
  }

   /**
   * Get privateIpAddresses
   * @return privateIpAddresses
  **/
  @Schema(description = "")
  public List<String> getPrivateIpAddresses() {
    return privateIpAddresses;
  }

  public void setPrivateIpAddresses(List<String> privateIpAddresses) {
    this.privateIpAddresses = privateIpAddresses;
  }

  public DescribeNetworkInterfacesRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public DescribeNetworkInterfacesRequest securityGroupId(String securityGroupId) {
    this.securityGroupId = securityGroupId;
    return this;
  }

   /**
   * Get securityGroupId
   * @return securityGroupId
  **/
  @Schema(description = "")
  public String getSecurityGroupId() {
    return securityGroupId;
  }

  public void setSecurityGroupId(String securityGroupId) {
    this.securityGroupId = securityGroupId;
  }

  public DescribeNetworkInterfacesRequest status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public DescribeNetworkInterfacesRequest subnetId(String subnetId) {
    this.subnetId = subnetId;
    return this;
  }

   /**
   * Get subnetId
   * @return subnetId
  **/
  @Schema(description = "")
  public String getSubnetId() {
    return subnetId;
  }

  public void setSubnetId(String subnetId) {
    this.subnetId = subnetId;
  }

  public DescribeNetworkInterfacesRequest tagFilters(List<TagFilterForDescribeNetworkInterfacesInput> tagFilters) {
    this.tagFilters = tagFilters;
    return this;
  }

  public DescribeNetworkInterfacesRequest addTagFiltersItem(TagFilterForDescribeNetworkInterfacesInput tagFiltersItem) {
    if (this.tagFilters == null) {
      this.tagFilters = new ArrayList<TagFilterForDescribeNetworkInterfacesInput>();
    }
    this.tagFilters.add(tagFiltersItem);
    return this;
  }

   /**
   * Get tagFilters
   * @return tagFilters
  **/
  @Valid
  @Schema(description = "")
  public List<TagFilterForDescribeNetworkInterfacesInput> getTagFilters() {
    return tagFilters;
  }

  public void setTagFilters(List<TagFilterForDescribeNetworkInterfacesInput> tagFilters) {
    this.tagFilters = tagFilters;
  }

  public DescribeNetworkInterfacesRequest type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public DescribeNetworkInterfacesRequest vpcId(String vpcId) {
    this.vpcId = vpcId;
    return this;
  }

   /**
   * Get vpcId
   * @return vpcId
  **/
  @Schema(description = "")
  public String getVpcId() {
    return vpcId;
  }

  public void setVpcId(String vpcId) {
    this.vpcId = vpcId;
  }

  public DescribeNetworkInterfacesRequest zoneId(String zoneId) {
    this.zoneId = zoneId;
    return this;
  }

   /**
   * Get zoneId
   * @return zoneId
  **/
  @Schema(description = "")
  public String getZoneId() {
    return zoneId;
  }

  public void setZoneId(String zoneId) {
    this.zoneId = zoneId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeNetworkInterfacesRequest describeNetworkInterfacesRequest = (DescribeNetworkInterfacesRequest) o;
    return Objects.equals(this.instanceId, describeNetworkInterfacesRequest.instanceId) &&
        Objects.equals(this.ipv6Addresses, describeNetworkInterfacesRequest.ipv6Addresses) &&
        Objects.equals(this.maxResults, describeNetworkInterfacesRequest.maxResults) &&
        Objects.equals(this.networkInterfaceIds, describeNetworkInterfacesRequest.networkInterfaceIds) &&
        Objects.equals(this.networkInterfaceName, describeNetworkInterfacesRequest.networkInterfaceName) &&
        Objects.equals(this.nextToken, describeNetworkInterfacesRequest.nextToken) &&
        Objects.equals(this.pageNumber, describeNetworkInterfacesRequest.pageNumber) &&
        Objects.equals(this.pageSize, describeNetworkInterfacesRequest.pageSize) &&
        Objects.equals(this.primaryIpAddresses, describeNetworkInterfacesRequest.primaryIpAddresses) &&
        Objects.equals(this.privateIpAddresses, describeNetworkInterfacesRequest.privateIpAddresses) &&
        Objects.equals(this.projectName, describeNetworkInterfacesRequest.projectName) &&
        Objects.equals(this.securityGroupId, describeNetworkInterfacesRequest.securityGroupId) &&
        Objects.equals(this.status, describeNetworkInterfacesRequest.status) &&
        Objects.equals(this.subnetId, describeNetworkInterfacesRequest.subnetId) &&
        Objects.equals(this.tagFilters, describeNetworkInterfacesRequest.tagFilters) &&
        Objects.equals(this.type, describeNetworkInterfacesRequest.type) &&
        Objects.equals(this.vpcId, describeNetworkInterfacesRequest.vpcId) &&
        Objects.equals(this.zoneId, describeNetworkInterfacesRequest.zoneId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(instanceId, ipv6Addresses, maxResults, networkInterfaceIds, networkInterfaceName, nextToken, pageNumber, pageSize, primaryIpAddresses, privateIpAddresses, projectName, securityGroupId, status, subnetId, tagFilters, type, vpcId, zoneId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeNetworkInterfacesRequest {\n");
    
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    ipv6Addresses: ").append(toIndentedString(ipv6Addresses)).append("\n");
    sb.append("    maxResults: ").append(toIndentedString(maxResults)).append("\n");
    sb.append("    networkInterfaceIds: ").append(toIndentedString(networkInterfaceIds)).append("\n");
    sb.append("    networkInterfaceName: ").append(toIndentedString(networkInterfaceName)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    primaryIpAddresses: ").append(toIndentedString(primaryIpAddresses)).append("\n");
    sb.append("    privateIpAddresses: ").append(toIndentedString(privateIpAddresses)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    securityGroupId: ").append(toIndentedString(securityGroupId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    subnetId: ").append(toIndentedString(subnetId)).append("\n");
    sb.append("    tagFilters: ").append(toIndentedString(tagFilters)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    vpcId: ").append(toIndentedString(vpcId)).append("\n");
    sb.append("    zoneId: ").append(toIndentedString(zoneId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
