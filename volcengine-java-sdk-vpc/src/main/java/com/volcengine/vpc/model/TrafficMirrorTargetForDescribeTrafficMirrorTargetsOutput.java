/*
 * vpc
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vpc.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vpc.model.TagForDescribeTrafficMirrorTargetsOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * TrafficMirrorTargetForDescribeTrafficMirrorTargetsOutput
 */



public class TrafficMirrorTargetForDescribeTrafficMirrorTargetsOutput {
  @SerializedName("CreatedAt")
  private String createdAt = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("InstanceId")
  private String instanceId = null;

  @SerializedName("InstanceType")
  private String instanceType = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("Tags")
  private List<TagForDescribeTrafficMirrorTargetsOutput> tags = null;

  @SerializedName("TrafficMirrorTargetId")
  private String trafficMirrorTargetId = null;

  @SerializedName("TrafficMirrorTargetName")
  private String trafficMirrorTargetName = null;

  public TrafficMirrorTargetForDescribeTrafficMirrorTargetsOutput createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(description = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public TrafficMirrorTargetForDescribeTrafficMirrorTargetsOutput description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public TrafficMirrorTargetForDescribeTrafficMirrorTargetsOutput instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * Get instanceId
   * @return instanceId
  **/
  @Schema(description = "")
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }

  public TrafficMirrorTargetForDescribeTrafficMirrorTargetsOutput instanceType(String instanceType) {
    this.instanceType = instanceType;
    return this;
  }

   /**
   * Get instanceType
   * @return instanceType
  **/
  @Schema(description = "")
  public String getInstanceType() {
    return instanceType;
  }

  public void setInstanceType(String instanceType) {
    this.instanceType = instanceType;
  }

  public TrafficMirrorTargetForDescribeTrafficMirrorTargetsOutput projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public TrafficMirrorTargetForDescribeTrafficMirrorTargetsOutput status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public TrafficMirrorTargetForDescribeTrafficMirrorTargetsOutput tags(List<TagForDescribeTrafficMirrorTargetsOutput> tags) {
    this.tags = tags;
    return this;
  }

  public TrafficMirrorTargetForDescribeTrafficMirrorTargetsOutput addTagsItem(TagForDescribeTrafficMirrorTargetsOutput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForDescribeTrafficMirrorTargetsOutput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForDescribeTrafficMirrorTargetsOutput> getTags() {
    return tags;
  }

  public void setTags(List<TagForDescribeTrafficMirrorTargetsOutput> tags) {
    this.tags = tags;
  }

  public TrafficMirrorTargetForDescribeTrafficMirrorTargetsOutput trafficMirrorTargetId(String trafficMirrorTargetId) {
    this.trafficMirrorTargetId = trafficMirrorTargetId;
    return this;
  }

   /**
   * Get trafficMirrorTargetId
   * @return trafficMirrorTargetId
  **/
  @Schema(description = "")
  public String getTrafficMirrorTargetId() {
    return trafficMirrorTargetId;
  }

  public void setTrafficMirrorTargetId(String trafficMirrorTargetId) {
    this.trafficMirrorTargetId = trafficMirrorTargetId;
  }

  public TrafficMirrorTargetForDescribeTrafficMirrorTargetsOutput trafficMirrorTargetName(String trafficMirrorTargetName) {
    this.trafficMirrorTargetName = trafficMirrorTargetName;
    return this;
  }

   /**
   * Get trafficMirrorTargetName
   * @return trafficMirrorTargetName
  **/
  @Schema(description = "")
  public String getTrafficMirrorTargetName() {
    return trafficMirrorTargetName;
  }

  public void setTrafficMirrorTargetName(String trafficMirrorTargetName) {
    this.trafficMirrorTargetName = trafficMirrorTargetName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TrafficMirrorTargetForDescribeTrafficMirrorTargetsOutput trafficMirrorTargetForDescribeTrafficMirrorTargetsOutput = (TrafficMirrorTargetForDescribeTrafficMirrorTargetsOutput) o;
    return Objects.equals(this.createdAt, trafficMirrorTargetForDescribeTrafficMirrorTargetsOutput.createdAt) &&
        Objects.equals(this.description, trafficMirrorTargetForDescribeTrafficMirrorTargetsOutput.description) &&
        Objects.equals(this.instanceId, trafficMirrorTargetForDescribeTrafficMirrorTargetsOutput.instanceId) &&
        Objects.equals(this.instanceType, trafficMirrorTargetForDescribeTrafficMirrorTargetsOutput.instanceType) &&
        Objects.equals(this.projectName, trafficMirrorTargetForDescribeTrafficMirrorTargetsOutput.projectName) &&
        Objects.equals(this.status, trafficMirrorTargetForDescribeTrafficMirrorTargetsOutput.status) &&
        Objects.equals(this.tags, trafficMirrorTargetForDescribeTrafficMirrorTargetsOutput.tags) &&
        Objects.equals(this.trafficMirrorTargetId, trafficMirrorTargetForDescribeTrafficMirrorTargetsOutput.trafficMirrorTargetId) &&
        Objects.equals(this.trafficMirrorTargetName, trafficMirrorTargetForDescribeTrafficMirrorTargetsOutput.trafficMirrorTargetName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, description, instanceId, instanceType, projectName, status, tags, trafficMirrorTargetId, trafficMirrorTargetName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TrafficMirrorTargetForDescribeTrafficMirrorTargetsOutput {\n");
    
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    instanceType: ").append(toIndentedString(instanceType)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    trafficMirrorTargetId: ").append(toIndentedString(trafficMirrorTargetId)).append("\n");
    sb.append("    trafficMirrorTargetName: ").append(toIndentedString(trafficMirrorTargetName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
