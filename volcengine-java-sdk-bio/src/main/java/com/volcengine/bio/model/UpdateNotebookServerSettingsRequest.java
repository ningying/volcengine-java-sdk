/*
 * bio
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.bio.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * UpdateNotebookServerSettingsRequest
 */



public class UpdateNotebookServerSettingsRequest {
  @SerializedName("ImageID")
  private String imageID = null;

  @SerializedName("MountTOSEnabled")
  private Boolean mountTOSEnabled = null;

  /**
   * Gets or Sets resourceSize
   */
  @JsonAdapter(ResourceSizeEnum.Adapter.class)
  public enum ResourceSizeEnum {
    @SerializedName("small")
    SMALL("small"),
    @SerializedName("middle")
    MIDDLE("middle"),
    @SerializedName("large")
    LARGE("large");

    private String value;

    ResourceSizeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ResourceSizeEnum fromValue(String input) {
      for (ResourceSizeEnum b : ResourceSizeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ResourceSizeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ResourceSizeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public ResourceSizeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return ResourceSizeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("ResourceSize")
  private ResourceSizeEnum resourceSize = null;

  @SerializedName("StorageCapacity")
  private Integer storageCapacity = null;

  @SerializedName("TempImageName")
  private String tempImageName = null;

  @SerializedName("WorkspaceID")
  private String workspaceID = null;

  public UpdateNotebookServerSettingsRequest imageID(String imageID) {
    this.imageID = imageID;
    return this;
  }

   /**
   * Get imageID
   * @return imageID
  **/
  @Schema(description = "")
  public String getImageID() {
    return imageID;
  }

  public void setImageID(String imageID) {
    this.imageID = imageID;
  }

  public UpdateNotebookServerSettingsRequest mountTOSEnabled(Boolean mountTOSEnabled) {
    this.mountTOSEnabled = mountTOSEnabled;
    return this;
  }

   /**
   * Get mountTOSEnabled
   * @return mountTOSEnabled
  **/
  @Schema(description = "")
  public Boolean isMountTOSEnabled() {
    return mountTOSEnabled;
  }

  public void setMountTOSEnabled(Boolean mountTOSEnabled) {
    this.mountTOSEnabled = mountTOSEnabled;
  }

  public UpdateNotebookServerSettingsRequest resourceSize(ResourceSizeEnum resourceSize) {
    this.resourceSize = resourceSize;
    return this;
  }

   /**
   * Get resourceSize
   * @return resourceSize
  **/
  @Schema(description = "")
  public ResourceSizeEnum getResourceSize() {
    return resourceSize;
  }

  public void setResourceSize(ResourceSizeEnum resourceSize) {
    this.resourceSize = resourceSize;
  }

  public UpdateNotebookServerSettingsRequest storageCapacity(Integer storageCapacity) {
    this.storageCapacity = storageCapacity;
    return this;
  }

   /**
   * Get storageCapacity
   * @return storageCapacity
  **/
  @Schema(description = "")
  public Integer getStorageCapacity() {
    return storageCapacity;
  }

  public void setStorageCapacity(Integer storageCapacity) {
    this.storageCapacity = storageCapacity;
  }

  public UpdateNotebookServerSettingsRequest tempImageName(String tempImageName) {
    this.tempImageName = tempImageName;
    return this;
  }

   /**
   * Get tempImageName
   * @return tempImageName
  **/
  @Schema(description = "")
  public String getTempImageName() {
    return tempImageName;
  }

  public void setTempImageName(String tempImageName) {
    this.tempImageName = tempImageName;
  }

  public UpdateNotebookServerSettingsRequest workspaceID(String workspaceID) {
    this.workspaceID = workspaceID;
    return this;
  }

   /**
   * Get workspaceID
   * @return workspaceID
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getWorkspaceID() {
    return workspaceID;
  }

  public void setWorkspaceID(String workspaceID) {
    this.workspaceID = workspaceID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateNotebookServerSettingsRequest updateNotebookServerSettingsRequest = (UpdateNotebookServerSettingsRequest) o;
    return Objects.equals(this.imageID, updateNotebookServerSettingsRequest.imageID) &&
        Objects.equals(this.mountTOSEnabled, updateNotebookServerSettingsRequest.mountTOSEnabled) &&
        Objects.equals(this.resourceSize, updateNotebookServerSettingsRequest.resourceSize) &&
        Objects.equals(this.storageCapacity, updateNotebookServerSettingsRequest.storageCapacity) &&
        Objects.equals(this.tempImageName, updateNotebookServerSettingsRequest.tempImageName) &&
        Objects.equals(this.workspaceID, updateNotebookServerSettingsRequest.workspaceID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(imageID, mountTOSEnabled, resourceSize, storageCapacity, tempImageName, workspaceID);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateNotebookServerSettingsRequest {\n");
    
    sb.append("    imageID: ").append(toIndentedString(imageID)).append("\n");
    sb.append("    mountTOSEnabled: ").append(toIndentedString(mountTOSEnabled)).append("\n");
    sb.append("    resourceSize: ").append(toIndentedString(resourceSize)).append("\n");
    sb.append("    storageCapacity: ").append(toIndentedString(storageCapacity)).append("\n");
    sb.append("    tempImageName: ").append(toIndentedString(tempImageName)).append("\n");
    sb.append("    workspaceID: ").append(toIndentedString(workspaceID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
