/*
 * bio
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.bio.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CommitIESImageRequest
 */



public class CommitIESImageRequest {
  @SerializedName("Description")
  private String description = null;

  @SerializedName("Image")
  private String image = null;

  @SerializedName("ImageReplace")
  private Boolean imageReplace = null;

  @SerializedName("WebappInstanceID")
  private String webappInstanceID = null;

  @SerializedName("WorkspaceID")
  private String workspaceID = null;

  public CommitIESImageRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CommitIESImageRequest image(String image) {
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getImage() {
    return image;
  }

  public void setImage(String image) {
    this.image = image;
  }

  public CommitIESImageRequest imageReplace(Boolean imageReplace) {
    this.imageReplace = imageReplace;
    return this;
  }

   /**
   * Get imageReplace
   * @return imageReplace
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Boolean isImageReplace() {
    return imageReplace;
  }

  public void setImageReplace(Boolean imageReplace) {
    this.imageReplace = imageReplace;
  }

  public CommitIESImageRequest webappInstanceID(String webappInstanceID) {
    this.webappInstanceID = webappInstanceID;
    return this;
  }

   /**
   * Get webappInstanceID
   * @return webappInstanceID
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getWebappInstanceID() {
    return webappInstanceID;
  }

  public void setWebappInstanceID(String webappInstanceID) {
    this.webappInstanceID = webappInstanceID;
  }

  public CommitIESImageRequest workspaceID(String workspaceID) {
    this.workspaceID = workspaceID;
    return this;
  }

   /**
   * Get workspaceID
   * @return workspaceID
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getWorkspaceID() {
    return workspaceID;
  }

  public void setWorkspaceID(String workspaceID) {
    this.workspaceID = workspaceID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommitIESImageRequest commitIESImageRequest = (CommitIESImageRequest) o;
    return Objects.equals(this.description, commitIESImageRequest.description) &&
        Objects.equals(this.image, commitIESImageRequest.image) &&
        Objects.equals(this.imageReplace, commitIESImageRequest.imageReplace) &&
        Objects.equals(this.webappInstanceID, commitIESImageRequest.webappInstanceID) &&
        Objects.equals(this.workspaceID, commitIESImageRequest.workspaceID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, image, imageReplace, webappInstanceID, workspaceID);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommitIESImageRequest {\n");
    
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    imageReplace: ").append(toIndentedString(imageReplace)).append("\n");
    sb.append("    webappInstanceID: ").append(toIndentedString(webappInstanceID)).append("\n");
    sb.append("    workspaceID: ").append(toIndentedString(workspaceID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
