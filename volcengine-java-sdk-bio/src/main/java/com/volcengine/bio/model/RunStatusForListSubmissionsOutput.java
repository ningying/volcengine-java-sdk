/*
 * bio
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.bio.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * RunStatusForListSubmissionsOutput
 */



public class RunStatusForListSubmissionsOutput {
  @SerializedName("Cancelled")
  private Integer cancelled = null;

  @SerializedName("Cancelling")
  private String cancelling = null;

  @SerializedName("Count")
  private Integer count = null;

  @SerializedName("Failed")
  private Integer failed = null;

  @SerializedName("Pending")
  private Integer pending = null;

  @SerializedName("Running")
  private Integer running = null;

  @SerializedName("Succeeded")
  private Integer succeeded = null;

  public RunStatusForListSubmissionsOutput cancelled(Integer cancelled) {
    this.cancelled = cancelled;
    return this;
  }

   /**
   * Get cancelled
   * @return cancelled
  **/
  @Schema(description = "")
  public Integer getCancelled() {
    return cancelled;
  }

  public void setCancelled(Integer cancelled) {
    this.cancelled = cancelled;
  }

  public RunStatusForListSubmissionsOutput cancelling(String cancelling) {
    this.cancelling = cancelling;
    return this;
  }

   /**
   * Get cancelling
   * @return cancelling
  **/
  @Schema(description = "")
  public String getCancelling() {
    return cancelling;
  }

  public void setCancelling(String cancelling) {
    this.cancelling = cancelling;
  }

  public RunStatusForListSubmissionsOutput count(Integer count) {
    this.count = count;
    return this;
  }

   /**
   * Get count
   * @return count
  **/
  @Schema(description = "")
  public Integer getCount() {
    return count;
  }

  public void setCount(Integer count) {
    this.count = count;
  }

  public RunStatusForListSubmissionsOutput failed(Integer failed) {
    this.failed = failed;
    return this;
  }

   /**
   * Get failed
   * @return failed
  **/
  @Schema(description = "")
  public Integer getFailed() {
    return failed;
  }

  public void setFailed(Integer failed) {
    this.failed = failed;
  }

  public RunStatusForListSubmissionsOutput pending(Integer pending) {
    this.pending = pending;
    return this;
  }

   /**
   * Get pending
   * @return pending
  **/
  @Schema(description = "")
  public Integer getPending() {
    return pending;
  }

  public void setPending(Integer pending) {
    this.pending = pending;
  }

  public RunStatusForListSubmissionsOutput running(Integer running) {
    this.running = running;
    return this;
  }

   /**
   * Get running
   * @return running
  **/
  @Schema(description = "")
  public Integer getRunning() {
    return running;
  }

  public void setRunning(Integer running) {
    this.running = running;
  }

  public RunStatusForListSubmissionsOutput succeeded(Integer succeeded) {
    this.succeeded = succeeded;
    return this;
  }

   /**
   * Get succeeded
   * @return succeeded
  **/
  @Schema(description = "")
  public Integer getSucceeded() {
    return succeeded;
  }

  public void setSucceeded(Integer succeeded) {
    this.succeeded = succeeded;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RunStatusForListSubmissionsOutput runStatusForListSubmissionsOutput = (RunStatusForListSubmissionsOutput) o;
    return Objects.equals(this.cancelled, runStatusForListSubmissionsOutput.cancelled) &&
        Objects.equals(this.cancelling, runStatusForListSubmissionsOutput.cancelling) &&
        Objects.equals(this.count, runStatusForListSubmissionsOutput.count) &&
        Objects.equals(this.failed, runStatusForListSubmissionsOutput.failed) &&
        Objects.equals(this.pending, runStatusForListSubmissionsOutput.pending) &&
        Objects.equals(this.running, runStatusForListSubmissionsOutput.running) &&
        Objects.equals(this.succeeded, runStatusForListSubmissionsOutput.succeeded);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cancelled, cancelling, count, failed, pending, running, succeeded);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RunStatusForListSubmissionsOutput {\n");
    
    sb.append("    cancelled: ").append(toIndentedString(cancelled)).append("\n");
    sb.append("    cancelling: ").append(toIndentedString(cancelling)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    failed: ").append(toIndentedString(failed)).append("\n");
    sb.append("    pending: ").append(toIndentedString(pending)).append("\n");
    sb.append("    running: ").append(toIndentedString(running)).append("\n");
    sb.append("    succeeded: ").append(toIndentedString(succeeded)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
