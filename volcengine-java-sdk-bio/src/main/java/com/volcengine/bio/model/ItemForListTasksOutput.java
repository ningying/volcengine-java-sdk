/*
 * bio
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.bio.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.bio.model.ResourceClaimedForListTasksOutput;
import com.volcengine.bio.model.ResourceUsedForListTasksOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ItemForListTasksOutput
 */



public class ItemForListTasksOutput {
  @SerializedName("Duration")
  private Integer duration = null;

  @SerializedName("ExecuteDuration")
  private Integer executeDuration = null;

  @SerializedName("FinishTime")
  private Integer finishTime = null;

  @SerializedName("JobName")
  private String jobName = null;

  @SerializedName("Log")
  private String log = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("RunID")
  private String runID = null;

  @SerializedName("StartTime")
  private Integer startTime = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    @SerializedName("Succeeded")
    SUCCEEDED("Succeeded"),
    @SerializedName("Failed")
    FAILED("Failed"),
    @SerializedName("Running")
    RUNNING("Running"),
    @SerializedName("Queued")
    QUEUED("Queued"),
    @SerializedName("Initializing")
    INITIALIZING("Initializing"),
    @SerializedName("Cancelled")
    CANCELLED("Cancelled");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String input) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return StatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("Status")
  private StatusEnum status = null;

  @SerializedName("Stderr")
  private String stderr = null;

  @SerializedName("Stdout")
  private String stdout = null;

  @SerializedName("resourceClaimed")
  private ResourceClaimedForListTasksOutput resourceClaimed = null;

  @SerializedName("resourceUsed")
  private ResourceUsedForListTasksOutput resourceUsed = null;

  public ItemForListTasksOutput duration(Integer duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Get duration
   * @return duration
  **/
  @Schema(description = "")
  public Integer getDuration() {
    return duration;
  }

  public void setDuration(Integer duration) {
    this.duration = duration;
  }

  public ItemForListTasksOutput executeDuration(Integer executeDuration) {
    this.executeDuration = executeDuration;
    return this;
  }

   /**
   * Get executeDuration
   * @return executeDuration
  **/
  @Schema(description = "")
  public Integer getExecuteDuration() {
    return executeDuration;
  }

  public void setExecuteDuration(Integer executeDuration) {
    this.executeDuration = executeDuration;
  }

  public ItemForListTasksOutput finishTime(Integer finishTime) {
    this.finishTime = finishTime;
    return this;
  }

   /**
   * Get finishTime
   * @return finishTime
  **/
  @Schema(description = "")
  public Integer getFinishTime() {
    return finishTime;
  }

  public void setFinishTime(Integer finishTime) {
    this.finishTime = finishTime;
  }

  public ItemForListTasksOutput jobName(String jobName) {
    this.jobName = jobName;
    return this;
  }

   /**
   * Get jobName
   * @return jobName
  **/
  @Schema(description = "")
  public String getJobName() {
    return jobName;
  }

  public void setJobName(String jobName) {
    this.jobName = jobName;
  }

  public ItemForListTasksOutput log(String log) {
    this.log = log;
    return this;
  }

   /**
   * Get log
   * @return log
  **/
  @Schema(description = "")
  public String getLog() {
    return log;
  }

  public void setLog(String log) {
    this.log = log;
  }

  public ItemForListTasksOutput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ItemForListTasksOutput runID(String runID) {
    this.runID = runID;
    return this;
  }

   /**
   * Get runID
   * @return runID
  **/
  @Schema(description = "")
  public String getRunID() {
    return runID;
  }

  public void setRunID(String runID) {
    this.runID = runID;
  }

  public ItemForListTasksOutput startTime(Integer startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @Schema(description = "")
  public Integer getStartTime() {
    return startTime;
  }

  public void setStartTime(Integer startTime) {
    this.startTime = startTime;
  }

  public ItemForListTasksOutput status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public ItemForListTasksOutput stderr(String stderr) {
    this.stderr = stderr;
    return this;
  }

   /**
   * Get stderr
   * @return stderr
  **/
  @Schema(description = "")
  public String getStderr() {
    return stderr;
  }

  public void setStderr(String stderr) {
    this.stderr = stderr;
  }

  public ItemForListTasksOutput stdout(String stdout) {
    this.stdout = stdout;
    return this;
  }

   /**
   * Get stdout
   * @return stdout
  **/
  @Schema(description = "")
  public String getStdout() {
    return stdout;
  }

  public void setStdout(String stdout) {
    this.stdout = stdout;
  }

  public ItemForListTasksOutput resourceClaimed(ResourceClaimedForListTasksOutput resourceClaimed) {
    this.resourceClaimed = resourceClaimed;
    return this;
  }

   /**
   * Get resourceClaimed
   * @return resourceClaimed
  **/
  @Valid
  @Schema(description = "")
  public ResourceClaimedForListTasksOutput getResourceClaimed() {
    return resourceClaimed;
  }

  public void setResourceClaimed(ResourceClaimedForListTasksOutput resourceClaimed) {
    this.resourceClaimed = resourceClaimed;
  }

  public ItemForListTasksOutput resourceUsed(ResourceUsedForListTasksOutput resourceUsed) {
    this.resourceUsed = resourceUsed;
    return this;
  }

   /**
   * Get resourceUsed
   * @return resourceUsed
  **/
  @Valid
  @Schema(description = "")
  public ResourceUsedForListTasksOutput getResourceUsed() {
    return resourceUsed;
  }

  public void setResourceUsed(ResourceUsedForListTasksOutput resourceUsed) {
    this.resourceUsed = resourceUsed;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemForListTasksOutput itemForListTasksOutput = (ItemForListTasksOutput) o;
    return Objects.equals(this.duration, itemForListTasksOutput.duration) &&
        Objects.equals(this.executeDuration, itemForListTasksOutput.executeDuration) &&
        Objects.equals(this.finishTime, itemForListTasksOutput.finishTime) &&
        Objects.equals(this.jobName, itemForListTasksOutput.jobName) &&
        Objects.equals(this.log, itemForListTasksOutput.log) &&
        Objects.equals(this.name, itemForListTasksOutput.name) &&
        Objects.equals(this.runID, itemForListTasksOutput.runID) &&
        Objects.equals(this.startTime, itemForListTasksOutput.startTime) &&
        Objects.equals(this.status, itemForListTasksOutput.status) &&
        Objects.equals(this.stderr, itemForListTasksOutput.stderr) &&
        Objects.equals(this.stdout, itemForListTasksOutput.stdout) &&
        Objects.equals(this.resourceClaimed, itemForListTasksOutput.resourceClaimed) &&
        Objects.equals(this.resourceUsed, itemForListTasksOutput.resourceUsed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(duration, executeDuration, finishTime, jobName, log, name, runID, startTime, status, stderr, stdout, resourceClaimed, resourceUsed);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemForListTasksOutput {\n");
    
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    executeDuration: ").append(toIndentedString(executeDuration)).append("\n");
    sb.append("    finishTime: ").append(toIndentedString(finishTime)).append("\n");
    sb.append("    jobName: ").append(toIndentedString(jobName)).append("\n");
    sb.append("    log: ").append(toIndentedString(log)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    runID: ").append(toIndentedString(runID)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    stderr: ").append(toIndentedString(stderr)).append("\n");
    sb.append("    stdout: ").append(toIndentedString(stdout)).append("\n");
    sb.append("    resourceClaimed: ").append(toIndentedString(resourceClaimed)).append("\n");
    sb.append("    resourceUsed: ").append(toIndentedString(resourceUsed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
