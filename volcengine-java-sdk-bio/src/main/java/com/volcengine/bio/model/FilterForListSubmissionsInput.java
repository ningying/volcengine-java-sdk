/*
 * bio
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.bio.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * FilterForListSubmissionsInput
 */



public class FilterForListSubmissionsInput {
  @SerializedName("ClusterID")
  private String clusterID = null;

  @SerializedName("DisplayLevel")
  private String displayLevel = null;

  @SerializedName("IDs")
  private List<String> ids = null;

  @SerializedName("Keyword")
  private String keyword = null;

  @SerializedName("Status")
  private List<String> status = null;

  @SerializedName("WorkflowID")
  private String workflowID = null;

  public FilterForListSubmissionsInput clusterID(String clusterID) {
    this.clusterID = clusterID;
    return this;
  }

   /**
   * Get clusterID
   * @return clusterID
  **/
  @Schema(description = "")
  public String getClusterID() {
    return clusterID;
  }

  public void setClusterID(String clusterID) {
    this.clusterID = clusterID;
  }

  public FilterForListSubmissionsInput displayLevel(String displayLevel) {
    this.displayLevel = displayLevel;
    return this;
  }

   /**
   * Get displayLevel
   * @return displayLevel
  **/
  @Schema(description = "")
  public String getDisplayLevel() {
    return displayLevel;
  }

  public void setDisplayLevel(String displayLevel) {
    this.displayLevel = displayLevel;
  }

  public FilterForListSubmissionsInput ids(List<String> ids) {
    this.ids = ids;
    return this;
  }

  public FilterForListSubmissionsInput addIdsItem(String idsItem) {
    if (this.ids == null) {
      this.ids = new ArrayList<String>();
    }
    this.ids.add(idsItem);
    return this;
  }

   /**
   * Get ids
   * @return ids
  **/
  @Schema(description = "")
  public List<String> getIds() {
    return ids;
  }

  public void setIds(List<String> ids) {
    this.ids = ids;
  }

  public FilterForListSubmissionsInput keyword(String keyword) {
    this.keyword = keyword;
    return this;
  }

   /**
   * Get keyword
   * @return keyword
  **/
  @Schema(description = "")
  public String getKeyword() {
    return keyword;
  }

  public void setKeyword(String keyword) {
    this.keyword = keyword;
  }

  public FilterForListSubmissionsInput status(List<String> status) {
    this.status = status;
    return this;
  }

  public FilterForListSubmissionsInput addStatusItem(String statusItem) {
    if (this.status == null) {
      this.status = new ArrayList<String>();
    }
    this.status.add(statusItem);
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public List<String> getStatus() {
    return status;
  }

  public void setStatus(List<String> status) {
    this.status = status;
  }

  public FilterForListSubmissionsInput workflowID(String workflowID) {
    this.workflowID = workflowID;
    return this;
  }

   /**
   * Get workflowID
   * @return workflowID
  **/
  @Schema(description = "")
  public String getWorkflowID() {
    return workflowID;
  }

  public void setWorkflowID(String workflowID) {
    this.workflowID = workflowID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FilterForListSubmissionsInput filterForListSubmissionsInput = (FilterForListSubmissionsInput) o;
    return Objects.equals(this.clusterID, filterForListSubmissionsInput.clusterID) &&
        Objects.equals(this.displayLevel, filterForListSubmissionsInput.displayLevel) &&
        Objects.equals(this.ids, filterForListSubmissionsInput.ids) &&
        Objects.equals(this.keyword, filterForListSubmissionsInput.keyword) &&
        Objects.equals(this.status, filterForListSubmissionsInput.status) &&
        Objects.equals(this.workflowID, filterForListSubmissionsInput.workflowID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clusterID, displayLevel, ids, keyword, status, workflowID);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FilterForListSubmissionsInput {\n");
    
    sb.append("    clusterID: ").append(toIndentedString(clusterID)).append("\n");
    sb.append("    displayLevel: ").append(toIndentedString(displayLevel)).append("\n");
    sb.append("    ids: ").append(toIndentedString(ids)).append("\n");
    sb.append("    keyword: ").append(toIndentedString(keyword)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    workflowID: ").append(toIndentedString(workflowID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
