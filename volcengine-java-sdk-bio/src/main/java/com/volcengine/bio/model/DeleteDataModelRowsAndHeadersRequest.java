/*
 * bio
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.bio.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DeleteDataModelRowsAndHeadersRequest
 */



public class DeleteDataModelRowsAndHeadersRequest {
  @SerializedName("Headers")
  private List<String> headers = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("RowIDs")
  private List<String> rowIDs = null;

  @SerializedName("WorkspaceID")
  private String workspaceID = null;

  public DeleteDataModelRowsAndHeadersRequest headers(List<String> headers) {
    this.headers = headers;
    return this;
  }

  public DeleteDataModelRowsAndHeadersRequest addHeadersItem(String headersItem) {
    if (this.headers == null) {
      this.headers = new ArrayList<String>();
    }
    this.headers.add(headersItem);
    return this;
  }

   /**
   * Get headers
   * @return headers
  **/
  @Schema(description = "")
  public List<String> getHeaders() {
    return headers;
  }

  public void setHeaders(List<String> headers) {
    this.headers = headers;
  }

  public DeleteDataModelRowsAndHeadersRequest ID(String ID) {
    this.ID = ID;
    return this;
  }

   /**
   * Get ID
   * @return ID
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getID() {
    return ID;
  }

  public void setID(String ID) {
    this.ID = ID;
  }

  public DeleteDataModelRowsAndHeadersRequest rowIDs(List<String> rowIDs) {
    this.rowIDs = rowIDs;
    return this;
  }

  public DeleteDataModelRowsAndHeadersRequest addRowIDsItem(String rowIDsItem) {
    if (this.rowIDs == null) {
      this.rowIDs = new ArrayList<String>();
    }
    this.rowIDs.add(rowIDsItem);
    return this;
  }

   /**
   * Get rowIDs
   * @return rowIDs
  **/
  @Schema(description = "")
  public List<String> getRowIDs() {
    return rowIDs;
  }

  public void setRowIDs(List<String> rowIDs) {
    this.rowIDs = rowIDs;
  }

  public DeleteDataModelRowsAndHeadersRequest workspaceID(String workspaceID) {
    this.workspaceID = workspaceID;
    return this;
  }

   /**
   * Get workspaceID
   * @return workspaceID
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getWorkspaceID() {
    return workspaceID;
  }

  public void setWorkspaceID(String workspaceID) {
    this.workspaceID = workspaceID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeleteDataModelRowsAndHeadersRequest deleteDataModelRowsAndHeadersRequest = (DeleteDataModelRowsAndHeadersRequest) o;
    return Objects.equals(this.headers, deleteDataModelRowsAndHeadersRequest.headers) &&
        Objects.equals(this.ID, deleteDataModelRowsAndHeadersRequest.ID) &&
        Objects.equals(this.rowIDs, deleteDataModelRowsAndHeadersRequest.rowIDs) &&
        Objects.equals(this.workspaceID, deleteDataModelRowsAndHeadersRequest.workspaceID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(headers, ID, rowIDs, workspaceID);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeleteDataModelRowsAndHeadersRequest {\n");
    
    sb.append("    headers: ").append(toIndentedString(headers)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    rowIDs: ").append(toIndentedString(rowIDs)).append("\n");
    sb.append("    workspaceID: ").append(toIndentedString(workspaceID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
