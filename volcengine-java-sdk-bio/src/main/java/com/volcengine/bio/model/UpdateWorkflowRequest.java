/*
 * bio
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.bio.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * UpdateWorkflowRequest
 */



public class UpdateWorkflowRequest {
  @SerializedName("Content")
  private String content = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("MainWorkflowPath")
  private String mainWorkflowPath = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Source")
  private String source = null;

  @SerializedName("SourceType")
  private String sourceType = null;

  @SerializedName("Tag")
  private String tag = null;

  @SerializedName("Token")
  private String token = null;

  @SerializedName("WorkspaceID")
  private String workspaceID = null;

  public UpdateWorkflowRequest content(String content) {
    this.content = content;
    return this;
  }

   /**
   * Get content
   * @return content
  **/
  @Schema(description = "")
  public String getContent() {
    return content;
  }

  public void setContent(String content) {
    this.content = content;
  }

  public UpdateWorkflowRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
 @Size(max=1000)  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public UpdateWorkflowRequest ID(String ID) {
    this.ID = ID;
    return this;
  }

   /**
   * Get ID
   * @return ID
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getID() {
    return ID;
  }

  public void setID(String ID) {
    this.ID = ID;
  }

  public UpdateWorkflowRequest mainWorkflowPath(String mainWorkflowPath) {
    this.mainWorkflowPath = mainWorkflowPath;
    return this;
  }

   /**
   * Get mainWorkflowPath
   * @return mainWorkflowPath
  **/
  @Schema(description = "")
  public String getMainWorkflowPath() {
    return mainWorkflowPath;
  }

  public void setMainWorkflowPath(String mainWorkflowPath) {
    this.mainWorkflowPath = mainWorkflowPath;
  }

  public UpdateWorkflowRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @NotNull
 @Size(min=1,max=200)  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public UpdateWorkflowRequest source(String source) {
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @Schema(description = "")
  public String getSource() {
    return source;
  }

  public void setSource(String source) {
    this.source = source;
  }

  public UpdateWorkflowRequest sourceType(String sourceType) {
    this.sourceType = sourceType;
    return this;
  }

   /**
   * Get sourceType
   * @return sourceType
  **/
  @Schema(description = "")
  public String getSourceType() {
    return sourceType;
  }

  public void setSourceType(String sourceType) {
    this.sourceType = sourceType;
  }

  public UpdateWorkflowRequest tag(String tag) {
    this.tag = tag;
    return this;
  }

   /**
   * Get tag
   * @return tag
  **/
  @Schema(description = "")
  public String getTag() {
    return tag;
  }

  public void setTag(String tag) {
    this.tag = tag;
  }

  public UpdateWorkflowRequest token(String token) {
    this.token = token;
    return this;
  }

   /**
   * Get token
   * @return token
  **/
  @Schema(description = "")
  public String getToken() {
    return token;
  }

  public void setToken(String token) {
    this.token = token;
  }

  public UpdateWorkflowRequest workspaceID(String workspaceID) {
    this.workspaceID = workspaceID;
    return this;
  }

   /**
   * Get workspaceID
   * @return workspaceID
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getWorkspaceID() {
    return workspaceID;
  }

  public void setWorkspaceID(String workspaceID) {
    this.workspaceID = workspaceID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateWorkflowRequest updateWorkflowRequest = (UpdateWorkflowRequest) o;
    return Objects.equals(this.content, updateWorkflowRequest.content) &&
        Objects.equals(this.description, updateWorkflowRequest.description) &&
        Objects.equals(this.ID, updateWorkflowRequest.ID) &&
        Objects.equals(this.mainWorkflowPath, updateWorkflowRequest.mainWorkflowPath) &&
        Objects.equals(this.name, updateWorkflowRequest.name) &&
        Objects.equals(this.source, updateWorkflowRequest.source) &&
        Objects.equals(this.sourceType, updateWorkflowRequest.sourceType) &&
        Objects.equals(this.tag, updateWorkflowRequest.tag) &&
        Objects.equals(this.token, updateWorkflowRequest.token) &&
        Objects.equals(this.workspaceID, updateWorkflowRequest.workspaceID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(content, description, ID, mainWorkflowPath, name, source, sourceType, tag, token, workspaceID);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateWorkflowRequest {\n");
    
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    mainWorkflowPath: ").append(toIndentedString(mainWorkflowPath)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    sourceType: ").append(toIndentedString(sourceType)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    workspaceID: ").append(toIndentedString(workspaceID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
