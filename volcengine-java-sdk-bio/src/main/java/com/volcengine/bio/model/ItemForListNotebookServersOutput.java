/*
 * bio
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.bio.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ItemForListNotebookServersOutput
 */



public class ItemForListNotebookServersOutput {
  @SerializedName("Duration")
  private Integer duration = null;

  @SerializedName("LastActivityTime")
  private Integer lastActivityTime = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("OwnerName")
  private String ownerName = null;

  @SerializedName("StartTime")
  private Integer startTime = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    @SerializedName("spawn")
    SPAWN("spawn"),
    @SerializedName("ready")
    READY("ready"),
    @SerializedName("stop")
    STOP("stop"),
    @SerializedName("absent")
    ABSENT("absent");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String input) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return StatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("Status")
  private StatusEnum status = null;

  @SerializedName("StorageCapacity")
  private Integer storageCapacity = null;

  @SerializedName("UserID")
  private Integer userID = null;

  @SerializedName("WorkspaceID")
  private String workspaceID = null;

  @SerializedName("WorkspaceName")
  private String workspaceName = null;

  public ItemForListNotebookServersOutput duration(Integer duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Get duration
   * @return duration
  **/
  @Schema(description = "")
  public Integer getDuration() {
    return duration;
  }

  public void setDuration(Integer duration) {
    this.duration = duration;
  }

  public ItemForListNotebookServersOutput lastActivityTime(Integer lastActivityTime) {
    this.lastActivityTime = lastActivityTime;
    return this;
  }

   /**
   * Get lastActivityTime
   * @return lastActivityTime
  **/
  @Schema(description = "")
  public Integer getLastActivityTime() {
    return lastActivityTime;
  }

  public void setLastActivityTime(Integer lastActivityTime) {
    this.lastActivityTime = lastActivityTime;
  }

  public ItemForListNotebookServersOutput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ItemForListNotebookServersOutput ownerName(String ownerName) {
    this.ownerName = ownerName;
    return this;
  }

   /**
   * Get ownerName
   * @return ownerName
  **/
  @Schema(description = "")
  public String getOwnerName() {
    return ownerName;
  }

  public void setOwnerName(String ownerName) {
    this.ownerName = ownerName;
  }

  public ItemForListNotebookServersOutput startTime(Integer startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @Schema(description = "")
  public Integer getStartTime() {
    return startTime;
  }

  public void setStartTime(Integer startTime) {
    this.startTime = startTime;
  }

  public ItemForListNotebookServersOutput status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public ItemForListNotebookServersOutput storageCapacity(Integer storageCapacity) {
    this.storageCapacity = storageCapacity;
    return this;
  }

   /**
   * Get storageCapacity
   * @return storageCapacity
  **/
  @Schema(description = "")
  public Integer getStorageCapacity() {
    return storageCapacity;
  }

  public void setStorageCapacity(Integer storageCapacity) {
    this.storageCapacity = storageCapacity;
  }

  public ItemForListNotebookServersOutput userID(Integer userID) {
    this.userID = userID;
    return this;
  }

   /**
   * Get userID
   * @return userID
  **/
  @Schema(description = "")
  public Integer getUserID() {
    return userID;
  }

  public void setUserID(Integer userID) {
    this.userID = userID;
  }

  public ItemForListNotebookServersOutput workspaceID(String workspaceID) {
    this.workspaceID = workspaceID;
    return this;
  }

   /**
   * Get workspaceID
   * @return workspaceID
  **/
  @Schema(description = "")
  public String getWorkspaceID() {
    return workspaceID;
  }

  public void setWorkspaceID(String workspaceID) {
    this.workspaceID = workspaceID;
  }

  public ItemForListNotebookServersOutput workspaceName(String workspaceName) {
    this.workspaceName = workspaceName;
    return this;
  }

   /**
   * Get workspaceName
   * @return workspaceName
  **/
  @Schema(description = "")
  public String getWorkspaceName() {
    return workspaceName;
  }

  public void setWorkspaceName(String workspaceName) {
    this.workspaceName = workspaceName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemForListNotebookServersOutput itemForListNotebookServersOutput = (ItemForListNotebookServersOutput) o;
    return Objects.equals(this.duration, itemForListNotebookServersOutput.duration) &&
        Objects.equals(this.lastActivityTime, itemForListNotebookServersOutput.lastActivityTime) &&
        Objects.equals(this.name, itemForListNotebookServersOutput.name) &&
        Objects.equals(this.ownerName, itemForListNotebookServersOutput.ownerName) &&
        Objects.equals(this.startTime, itemForListNotebookServersOutput.startTime) &&
        Objects.equals(this.status, itemForListNotebookServersOutput.status) &&
        Objects.equals(this.storageCapacity, itemForListNotebookServersOutput.storageCapacity) &&
        Objects.equals(this.userID, itemForListNotebookServersOutput.userID) &&
        Objects.equals(this.workspaceID, itemForListNotebookServersOutput.workspaceID) &&
        Objects.equals(this.workspaceName, itemForListNotebookServersOutput.workspaceName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(duration, lastActivityTime, name, ownerName, startTime, status, storageCapacity, userID, workspaceID, workspaceName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemForListNotebookServersOutput {\n");
    
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    lastActivityTime: ").append(toIndentedString(lastActivityTime)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    ownerName: ").append(toIndentedString(ownerName)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    storageCapacity: ").append(toIndentedString(storageCapacity)).append("\n");
    sb.append("    userID: ").append(toIndentedString(userID)).append("\n");
    sb.append("    workspaceID: ").append(toIndentedString(workspaceID)).append("\n");
    sb.append("    workspaceName: ").append(toIndentedString(workspaceName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
