/*
 * bio
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.bio.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.bio.model.DataEntityForListSubmissionsOutput;
import com.volcengine.bio.model.ExposedOptionsForListSubmissionsOutput;
import com.volcengine.bio.model.RunStatusForListSubmissionsOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ItemForListSubmissionsOutput
 */



public class ItemForListSubmissionsOutput {
  @SerializedName("ClusterID")
  private String clusterID = null;

  @SerializedName("ClusterType")
  private String clusterType = null;

  @SerializedName("DataEntity")
  private DataEntityForListSubmissionsOutput dataEntity = null;

  @SerializedName("DataModelID")
  private String dataModelID = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("Duration")
  private Integer duration = null;

  @SerializedName("ExposedOptions")
  private ExposedOptionsForListSubmissionsOutput exposedOptions = null;

  @SerializedName("FinishTime")
  private Integer finishTime = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("Inputs")
  private String inputs = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Outputs")
  private String outputs = null;

  @SerializedName("OwnerName")
  private String ownerName = null;

  @SerializedName("RunStatus")
  private RunStatusForListSubmissionsOutput runStatus = null;

  @SerializedName("StartTime")
  private Integer startTime = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    @SerializedName("Succeeded")
    SUCCEEDED("Succeeded"),
    @SerializedName("Failed")
    FAILED("Failed"),
    @SerializedName("Running")
    RUNNING("Running"),
    @SerializedName("Cancelled")
    CANCELLED("Cancelled"),
    @SerializedName("Cancelling")
    CANCELLING("Cancelling");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String input) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return StatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("Status")
  private StatusEnum status = null;

  @SerializedName("WorkflowID")
  private String workflowID = null;

  public ItemForListSubmissionsOutput clusterID(String clusterID) {
    this.clusterID = clusterID;
    return this;
  }

   /**
   * Get clusterID
   * @return clusterID
  **/
  @Schema(description = "")
  public String getClusterID() {
    return clusterID;
  }

  public void setClusterID(String clusterID) {
    this.clusterID = clusterID;
  }

  public ItemForListSubmissionsOutput clusterType(String clusterType) {
    this.clusterType = clusterType;
    return this;
  }

   /**
   * Get clusterType
   * @return clusterType
  **/
  @Schema(description = "")
  public String getClusterType() {
    return clusterType;
  }

  public void setClusterType(String clusterType) {
    this.clusterType = clusterType;
  }

  public ItemForListSubmissionsOutput dataEntity(DataEntityForListSubmissionsOutput dataEntity) {
    this.dataEntity = dataEntity;
    return this;
  }

   /**
   * Get dataEntity
   * @return dataEntity
  **/
  @Valid
  @Schema(description = "")
  public DataEntityForListSubmissionsOutput getDataEntity() {
    return dataEntity;
  }

  public void setDataEntity(DataEntityForListSubmissionsOutput dataEntity) {
    this.dataEntity = dataEntity;
  }

  public ItemForListSubmissionsOutput dataModelID(String dataModelID) {
    this.dataModelID = dataModelID;
    return this;
  }

   /**
   * Get dataModelID
   * @return dataModelID
  **/
  @Schema(description = "")
  public String getDataModelID() {
    return dataModelID;
  }

  public void setDataModelID(String dataModelID) {
    this.dataModelID = dataModelID;
  }

  public ItemForListSubmissionsOutput description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ItemForListSubmissionsOutput duration(Integer duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Get duration
   * @return duration
  **/
  @Schema(description = "")
  public Integer getDuration() {
    return duration;
  }

  public void setDuration(Integer duration) {
    this.duration = duration;
  }

  public ItemForListSubmissionsOutput exposedOptions(ExposedOptionsForListSubmissionsOutput exposedOptions) {
    this.exposedOptions = exposedOptions;
    return this;
  }

   /**
   * Get exposedOptions
   * @return exposedOptions
  **/
  @Valid
  @Schema(description = "")
  public ExposedOptionsForListSubmissionsOutput getExposedOptions() {
    return exposedOptions;
  }

  public void setExposedOptions(ExposedOptionsForListSubmissionsOutput exposedOptions) {
    this.exposedOptions = exposedOptions;
  }

  public ItemForListSubmissionsOutput finishTime(Integer finishTime) {
    this.finishTime = finishTime;
    return this;
  }

   /**
   * Get finishTime
   * @return finishTime
  **/
  @Schema(description = "")
  public Integer getFinishTime() {
    return finishTime;
  }

  public void setFinishTime(Integer finishTime) {
    this.finishTime = finishTime;
  }

  public ItemForListSubmissionsOutput ID(String ID) {
    this.ID = ID;
    return this;
  }

   /**
   * Get ID
   * @return ID
  **/
  @Schema(description = "")
  public String getID() {
    return ID;
  }

  public void setID(String ID) {
    this.ID = ID;
  }

  public ItemForListSubmissionsOutput inputs(String inputs) {
    this.inputs = inputs;
    return this;
  }

   /**
   * Get inputs
   * @return inputs
  **/
  @Schema(description = "")
  public String getInputs() {
    return inputs;
  }

  public void setInputs(String inputs) {
    this.inputs = inputs;
  }

  public ItemForListSubmissionsOutput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ItemForListSubmissionsOutput outputs(String outputs) {
    this.outputs = outputs;
    return this;
  }

   /**
   * Get outputs
   * @return outputs
  **/
  @Schema(description = "")
  public String getOutputs() {
    return outputs;
  }

  public void setOutputs(String outputs) {
    this.outputs = outputs;
  }

  public ItemForListSubmissionsOutput ownerName(String ownerName) {
    this.ownerName = ownerName;
    return this;
  }

   /**
   * Get ownerName
   * @return ownerName
  **/
  @Schema(description = "")
  public String getOwnerName() {
    return ownerName;
  }

  public void setOwnerName(String ownerName) {
    this.ownerName = ownerName;
  }

  public ItemForListSubmissionsOutput runStatus(RunStatusForListSubmissionsOutput runStatus) {
    this.runStatus = runStatus;
    return this;
  }

   /**
   * Get runStatus
   * @return runStatus
  **/
  @Valid
  @Schema(description = "")
  public RunStatusForListSubmissionsOutput getRunStatus() {
    return runStatus;
  }

  public void setRunStatus(RunStatusForListSubmissionsOutput runStatus) {
    this.runStatus = runStatus;
  }

  public ItemForListSubmissionsOutput startTime(Integer startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @Schema(description = "")
  public Integer getStartTime() {
    return startTime;
  }

  public void setStartTime(Integer startTime) {
    this.startTime = startTime;
  }

  public ItemForListSubmissionsOutput status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public ItemForListSubmissionsOutput workflowID(String workflowID) {
    this.workflowID = workflowID;
    return this;
  }

   /**
   * Get workflowID
   * @return workflowID
  **/
  @Schema(description = "")
  public String getWorkflowID() {
    return workflowID;
  }

  public void setWorkflowID(String workflowID) {
    this.workflowID = workflowID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemForListSubmissionsOutput itemForListSubmissionsOutput = (ItemForListSubmissionsOutput) o;
    return Objects.equals(this.clusterID, itemForListSubmissionsOutput.clusterID) &&
        Objects.equals(this.clusterType, itemForListSubmissionsOutput.clusterType) &&
        Objects.equals(this.dataEntity, itemForListSubmissionsOutput.dataEntity) &&
        Objects.equals(this.dataModelID, itemForListSubmissionsOutput.dataModelID) &&
        Objects.equals(this.description, itemForListSubmissionsOutput.description) &&
        Objects.equals(this.duration, itemForListSubmissionsOutput.duration) &&
        Objects.equals(this.exposedOptions, itemForListSubmissionsOutput.exposedOptions) &&
        Objects.equals(this.finishTime, itemForListSubmissionsOutput.finishTime) &&
        Objects.equals(this.ID, itemForListSubmissionsOutput.ID) &&
        Objects.equals(this.inputs, itemForListSubmissionsOutput.inputs) &&
        Objects.equals(this.name, itemForListSubmissionsOutput.name) &&
        Objects.equals(this.outputs, itemForListSubmissionsOutput.outputs) &&
        Objects.equals(this.ownerName, itemForListSubmissionsOutput.ownerName) &&
        Objects.equals(this.runStatus, itemForListSubmissionsOutput.runStatus) &&
        Objects.equals(this.startTime, itemForListSubmissionsOutput.startTime) &&
        Objects.equals(this.status, itemForListSubmissionsOutput.status) &&
        Objects.equals(this.workflowID, itemForListSubmissionsOutput.workflowID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clusterID, clusterType, dataEntity, dataModelID, description, duration, exposedOptions, finishTime, ID, inputs, name, outputs, ownerName, runStatus, startTime, status, workflowID);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemForListSubmissionsOutput {\n");
    
    sb.append("    clusterID: ").append(toIndentedString(clusterID)).append("\n");
    sb.append("    clusterType: ").append(toIndentedString(clusterType)).append("\n");
    sb.append("    dataEntity: ").append(toIndentedString(dataEntity)).append("\n");
    sb.append("    dataModelID: ").append(toIndentedString(dataModelID)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    exposedOptions: ").append(toIndentedString(exposedOptions)).append("\n");
    sb.append("    finishTime: ").append(toIndentedString(finishTime)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    inputs: ").append(toIndentedString(inputs)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    outputs: ").append(toIndentedString(outputs)).append("\n");
    sb.append("    ownerName: ").append(toIndentedString(ownerName)).append("\n");
    sb.append("    runStatus: ").append(toIndentedString(runStatus)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    workflowID: ").append(toIndentedString(workflowID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
