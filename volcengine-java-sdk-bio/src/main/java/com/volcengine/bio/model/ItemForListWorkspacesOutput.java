/*
 * bio
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.bio.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.bio.model.PublicMetaForListWorkspacesOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ItemForListWorkspacesOutput
 */



public class ItemForListWorkspacesOutput {
  @SerializedName("CoverDownloadURL")
  private String coverDownloadURL = null;

  @SerializedName("CreateTime")
  private Integer createTime = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("Labels")
  private List<String> labels = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("OwnerName")
  private String ownerName = null;

  @SerializedName("PublicMeta")
  private PublicMetaForListWorkspacesOutput publicMeta = null;

  /**
   * Gets or Sets role
   */
  @JsonAdapter(RoleEnum.Adapter.class)
  public enum RoleEnum {
    @SerializedName("Admin")
    ADMIN("Admin"),
    @SerializedName("User")
    USER("User"),
    @SerializedName("Visitor")
    VISITOR("Visitor");

    private String value;

    RoleEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static RoleEnum fromValue(String input) {
      for (RoleEnum b : RoleEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<RoleEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RoleEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public RoleEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return RoleEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("Role")
  private RoleEnum role = null;

  @SerializedName("S3Bucket")
  private String s3Bucket = null;

  @SerializedName("UpdateTime")
  private Integer updateTime = null;

  public ItemForListWorkspacesOutput coverDownloadURL(String coverDownloadURL) {
    this.coverDownloadURL = coverDownloadURL;
    return this;
  }

   /**
   * Get coverDownloadURL
   * @return coverDownloadURL
  **/
  @Schema(description = "")
  public String getCoverDownloadURL() {
    return coverDownloadURL;
  }

  public void setCoverDownloadURL(String coverDownloadURL) {
    this.coverDownloadURL = coverDownloadURL;
  }

  public ItemForListWorkspacesOutput createTime(Integer createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @Schema(description = "")
  public Integer getCreateTime() {
    return createTime;
  }

  public void setCreateTime(Integer createTime) {
    this.createTime = createTime;
  }

  public ItemForListWorkspacesOutput description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ItemForListWorkspacesOutput ID(String ID) {
    this.ID = ID;
    return this;
  }

   /**
   * Get ID
   * @return ID
  **/
  @Schema(description = "")
  public String getID() {
    return ID;
  }

  public void setID(String ID) {
    this.ID = ID;
  }

  public ItemForListWorkspacesOutput labels(List<String> labels) {
    this.labels = labels;
    return this;
  }

  public ItemForListWorkspacesOutput addLabelsItem(String labelsItem) {
    if (this.labels == null) {
      this.labels = new ArrayList<String>();
    }
    this.labels.add(labelsItem);
    return this;
  }

   /**
   * Get labels
   * @return labels
  **/
  @Schema(description = "")
  public List<String> getLabels() {
    return labels;
  }

  public void setLabels(List<String> labels) {
    this.labels = labels;
  }

  public ItemForListWorkspacesOutput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ItemForListWorkspacesOutput ownerName(String ownerName) {
    this.ownerName = ownerName;
    return this;
  }

   /**
   * Get ownerName
   * @return ownerName
  **/
  @Schema(description = "")
  public String getOwnerName() {
    return ownerName;
  }

  public void setOwnerName(String ownerName) {
    this.ownerName = ownerName;
  }

  public ItemForListWorkspacesOutput publicMeta(PublicMetaForListWorkspacesOutput publicMeta) {
    this.publicMeta = publicMeta;
    return this;
  }

   /**
   * Get publicMeta
   * @return publicMeta
  **/
  @Valid
  @Schema(description = "")
  public PublicMetaForListWorkspacesOutput getPublicMeta() {
    return publicMeta;
  }

  public void setPublicMeta(PublicMetaForListWorkspacesOutput publicMeta) {
    this.publicMeta = publicMeta;
  }

  public ItemForListWorkspacesOutput role(RoleEnum role) {
    this.role = role;
    return this;
  }

   /**
   * Get role
   * @return role
  **/
  @Schema(description = "")
  public RoleEnum getRole() {
    return role;
  }

  public void setRole(RoleEnum role) {
    this.role = role;
  }

  public ItemForListWorkspacesOutput s3Bucket(String s3Bucket) {
    this.s3Bucket = s3Bucket;
    return this;
  }

   /**
   * Get s3Bucket
   * @return s3Bucket
  **/
  @Schema(description = "")
  public String getS3Bucket() {
    return s3Bucket;
  }

  public void setS3Bucket(String s3Bucket) {
    this.s3Bucket = s3Bucket;
  }

  public ItemForListWorkspacesOutput updateTime(Integer updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @Schema(description = "")
  public Integer getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(Integer updateTime) {
    this.updateTime = updateTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemForListWorkspacesOutput itemForListWorkspacesOutput = (ItemForListWorkspacesOutput) o;
    return Objects.equals(this.coverDownloadURL, itemForListWorkspacesOutput.coverDownloadURL) &&
        Objects.equals(this.createTime, itemForListWorkspacesOutput.createTime) &&
        Objects.equals(this.description, itemForListWorkspacesOutput.description) &&
        Objects.equals(this.ID, itemForListWorkspacesOutput.ID) &&
        Objects.equals(this.labels, itemForListWorkspacesOutput.labels) &&
        Objects.equals(this.name, itemForListWorkspacesOutput.name) &&
        Objects.equals(this.ownerName, itemForListWorkspacesOutput.ownerName) &&
        Objects.equals(this.publicMeta, itemForListWorkspacesOutput.publicMeta) &&
        Objects.equals(this.role, itemForListWorkspacesOutput.role) &&
        Objects.equals(this.s3Bucket, itemForListWorkspacesOutput.s3Bucket) &&
        Objects.equals(this.updateTime, itemForListWorkspacesOutput.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(coverDownloadURL, createTime, description, ID, labels, name, ownerName, publicMeta, role, s3Bucket, updateTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemForListWorkspacesOutput {\n");
    
    sb.append("    coverDownloadURL: ").append(toIndentedString(coverDownloadURL)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    ownerName: ").append(toIndentedString(ownerName)).append("\n");
    sb.append("    publicMeta: ").append(toIndentedString(publicMeta)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    s3Bucket: ").append(toIndentedString(s3Bucket)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
