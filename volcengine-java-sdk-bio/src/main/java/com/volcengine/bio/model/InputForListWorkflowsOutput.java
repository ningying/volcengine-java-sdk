/*
 * bio
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.bio.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * InputForListWorkflowsOutput
 */



public class InputForListWorkflowsOutput {
  @SerializedName("Default")
  private String _default = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Optional")
  private Boolean optional = null;

  @SerializedName("ParameterMeta")
  private String parameterMeta = null;

  @SerializedName("Type")
  private String type = null;

  public InputForListWorkflowsOutput _default(String _default) {
    this._default = _default;
    return this;
  }

   /**
   * Get _default
   * @return _default
  **/
  @Schema(description = "")
  public String getDefault() {
    return _default;
  }

  public void setDefault(String _default) {
    this._default = _default;
  }

  public InputForListWorkflowsOutput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public InputForListWorkflowsOutput optional(Boolean optional) {
    this.optional = optional;
    return this;
  }

   /**
   * Get optional
   * @return optional
  **/
  @Schema(description = "")
  public Boolean isOptional() {
    return optional;
  }

  public void setOptional(Boolean optional) {
    this.optional = optional;
  }

  public InputForListWorkflowsOutput parameterMeta(String parameterMeta) {
    this.parameterMeta = parameterMeta;
    return this;
  }

   /**
   * Get parameterMeta
   * @return parameterMeta
  **/
  @Schema(description = "")
  public String getParameterMeta() {
    return parameterMeta;
  }

  public void setParameterMeta(String parameterMeta) {
    this.parameterMeta = parameterMeta;
  }

  public InputForListWorkflowsOutput type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InputForListWorkflowsOutput inputForListWorkflowsOutput = (InputForListWorkflowsOutput) o;
    return Objects.equals(this._default, inputForListWorkflowsOutput._default) &&
        Objects.equals(this.name, inputForListWorkflowsOutput.name) &&
        Objects.equals(this.optional, inputForListWorkflowsOutput.optional) &&
        Objects.equals(this.parameterMeta, inputForListWorkflowsOutput.parameterMeta) &&
        Objects.equals(this.type, inputForListWorkflowsOutput.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_default, name, optional, parameterMeta, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InputForListWorkflowsOutput {\n");
    
    sb.append("    _default: ").append(toIndentedString(_default)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    optional: ").append(toIndentedString(optional)).append("\n");
    sb.append("    parameterMeta: ").append(toIndentedString(parameterMeta)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
