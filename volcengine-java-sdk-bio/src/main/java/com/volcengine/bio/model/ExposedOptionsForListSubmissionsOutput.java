/*
 * bio
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.bio.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ExposedOptionsForListSubmissionsOutput
 */



public class ExposedOptionsForListSubmissionsOutput {
  @SerializedName("AAIPassport")
  private String aaIPassport = null;

  @SerializedName("ExecutionRootDir")
  private String executionRootDir = null;

  @SerializedName("MountTOS")
  private Boolean mountTOS = null;

  @SerializedName("ReadFromCache")
  private Boolean readFromCache = null;

  public ExposedOptionsForListSubmissionsOutput aaIPassport(String aaIPassport) {
    this.aaIPassport = aaIPassport;
    return this;
  }

   /**
   * Get aaIPassport
   * @return aaIPassport
  **/
  @Schema(description = "")
  public String getAaIPassport() {
    return aaIPassport;
  }

  public void setAaIPassport(String aaIPassport) {
    this.aaIPassport = aaIPassport;
  }

  public ExposedOptionsForListSubmissionsOutput executionRootDir(String executionRootDir) {
    this.executionRootDir = executionRootDir;
    return this;
  }

   /**
   * Get executionRootDir
   * @return executionRootDir
  **/
  @Schema(description = "")
  public String getExecutionRootDir() {
    return executionRootDir;
  }

  public void setExecutionRootDir(String executionRootDir) {
    this.executionRootDir = executionRootDir;
  }

  public ExposedOptionsForListSubmissionsOutput mountTOS(Boolean mountTOS) {
    this.mountTOS = mountTOS;
    return this;
  }

   /**
   * Get mountTOS
   * @return mountTOS
  **/
  @Schema(description = "")
  public Boolean isMountTOS() {
    return mountTOS;
  }

  public void setMountTOS(Boolean mountTOS) {
    this.mountTOS = mountTOS;
  }

  public ExposedOptionsForListSubmissionsOutput readFromCache(Boolean readFromCache) {
    this.readFromCache = readFromCache;
    return this;
  }

   /**
   * Get readFromCache
   * @return readFromCache
  **/
  @Schema(description = "")
  public Boolean isReadFromCache() {
    return readFromCache;
  }

  public void setReadFromCache(Boolean readFromCache) {
    this.readFromCache = readFromCache;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExposedOptionsForListSubmissionsOutput exposedOptionsForListSubmissionsOutput = (ExposedOptionsForListSubmissionsOutput) o;
    return Objects.equals(this.aaIPassport, exposedOptionsForListSubmissionsOutput.aaIPassport) &&
        Objects.equals(this.executionRootDir, exposedOptionsForListSubmissionsOutput.executionRootDir) &&
        Objects.equals(this.mountTOS, exposedOptionsForListSubmissionsOutput.mountTOS) &&
        Objects.equals(this.readFromCache, exposedOptionsForListSubmissionsOutput.readFromCache);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aaIPassport, executionRootDir, mountTOS, readFromCache);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExposedOptionsForListSubmissionsOutput {\n");
    
    sb.append("    aaIPassport: ").append(toIndentedString(aaIPassport)).append("\n");
    sb.append("    executionRootDir: ").append(toIndentedString(executionRootDir)).append("\n");
    sb.append("    mountTOS: ").append(toIndentedString(mountTOS)).append("\n");
    sb.append("    readFromCache: ").append(toIndentedString(readFromCache)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
