/*
 * cdn
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.cdn.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * UriParamSupForDescribeCdnConfigOutput
 */



public class UriParamSupForDescribeCdnConfigOutput {
  @SerializedName("JoinSymbol")
  private String joinSymbol = null;

  @SerializedName("SplitSymbol")
  private String splitSymbol = null;

  @SerializedName("StartLevel")
  private Long startLevel = null;

  @SerializedName("TermLevel")
  private Long termLevel = null;

  public UriParamSupForDescribeCdnConfigOutput joinSymbol(String joinSymbol) {
    this.joinSymbol = joinSymbol;
    return this;
  }

   /**
   * Get joinSymbol
   * @return joinSymbol
  **/
  @Schema(description = "")
  public String getJoinSymbol() {
    return joinSymbol;
  }

  public void setJoinSymbol(String joinSymbol) {
    this.joinSymbol = joinSymbol;
  }

  public UriParamSupForDescribeCdnConfigOutput splitSymbol(String splitSymbol) {
    this.splitSymbol = splitSymbol;
    return this;
  }

   /**
   * Get splitSymbol
   * @return splitSymbol
  **/
  @Schema(description = "")
  public String getSplitSymbol() {
    return splitSymbol;
  }

  public void setSplitSymbol(String splitSymbol) {
    this.splitSymbol = splitSymbol;
  }

  public UriParamSupForDescribeCdnConfigOutput startLevel(Long startLevel) {
    this.startLevel = startLevel;
    return this;
  }

   /**
   * Get startLevel
   * @return startLevel
  **/
  @Schema(description = "")
  public Long getStartLevel() {
    return startLevel;
  }

  public void setStartLevel(Long startLevel) {
    this.startLevel = startLevel;
  }

  public UriParamSupForDescribeCdnConfigOutput termLevel(Long termLevel) {
    this.termLevel = termLevel;
    return this;
  }

   /**
   * Get termLevel
   * @return termLevel
  **/
  @Schema(description = "")
  public Long getTermLevel() {
    return termLevel;
  }

  public void setTermLevel(Long termLevel) {
    this.termLevel = termLevel;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UriParamSupForDescribeCdnConfigOutput uriParamSupForDescribeCdnConfigOutput = (UriParamSupForDescribeCdnConfigOutput) o;
    return Objects.equals(this.joinSymbol, uriParamSupForDescribeCdnConfigOutput.joinSymbol) &&
        Objects.equals(this.splitSymbol, uriParamSupForDescribeCdnConfigOutput.splitSymbol) &&
        Objects.equals(this.startLevel, uriParamSupForDescribeCdnConfigOutput.startLevel) &&
        Objects.equals(this.termLevel, uriParamSupForDescribeCdnConfigOutput.termLevel);
  }

  @Override
  public int hashCode() {
    return Objects.hash(joinSymbol, splitSymbol, startLevel, termLevel);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UriParamSupForDescribeCdnConfigOutput {\n");
    
    sb.append("    joinSymbol: ").append(toIndentedString(joinSymbol)).append("\n");
    sb.append("    splitSymbol: ").append(toIndentedString(splitSymbol)).append("\n");
    sb.append("    startLevel: ").append(toIndentedString(startLevel)).append("\n");
    sb.append("    termLevel: ").append(toIndentedString(termLevel)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
