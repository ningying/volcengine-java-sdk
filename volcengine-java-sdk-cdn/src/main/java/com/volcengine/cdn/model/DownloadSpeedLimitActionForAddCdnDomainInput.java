/*
 * cdn
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.cdn.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.cdn.model.SpeedLimitTimeForAddCdnDomainInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DownloadSpeedLimitActionForAddCdnDomainInput
 */



public class DownloadSpeedLimitActionForAddCdnDomainInput {
  @SerializedName("SpeedLimitRate")
  private Long speedLimitRate = null;

  @SerializedName("SpeedLimitRateAfter")
  private Long speedLimitRateAfter = null;

  @SerializedName("SpeedLimitTime")
  private SpeedLimitTimeForAddCdnDomainInput speedLimitTime = null;

  public DownloadSpeedLimitActionForAddCdnDomainInput speedLimitRate(Long speedLimitRate) {
    this.speedLimitRate = speedLimitRate;
    return this;
  }

   /**
   * Get speedLimitRate
   * @return speedLimitRate
  **/
  @Schema(description = "")
  public Long getSpeedLimitRate() {
    return speedLimitRate;
  }

  public void setSpeedLimitRate(Long speedLimitRate) {
    this.speedLimitRate = speedLimitRate;
  }

  public DownloadSpeedLimitActionForAddCdnDomainInput speedLimitRateAfter(Long speedLimitRateAfter) {
    this.speedLimitRateAfter = speedLimitRateAfter;
    return this;
  }

   /**
   * Get speedLimitRateAfter
   * @return speedLimitRateAfter
  **/
  @Schema(description = "")
  public Long getSpeedLimitRateAfter() {
    return speedLimitRateAfter;
  }

  public void setSpeedLimitRateAfter(Long speedLimitRateAfter) {
    this.speedLimitRateAfter = speedLimitRateAfter;
  }

  public DownloadSpeedLimitActionForAddCdnDomainInput speedLimitTime(SpeedLimitTimeForAddCdnDomainInput speedLimitTime) {
    this.speedLimitTime = speedLimitTime;
    return this;
  }

   /**
   * Get speedLimitTime
   * @return speedLimitTime
  **/
  @Valid
  @Schema(description = "")
  public SpeedLimitTimeForAddCdnDomainInput getSpeedLimitTime() {
    return speedLimitTime;
  }

  public void setSpeedLimitTime(SpeedLimitTimeForAddCdnDomainInput speedLimitTime) {
    this.speedLimitTime = speedLimitTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DownloadSpeedLimitActionForAddCdnDomainInput downloadSpeedLimitActionForAddCdnDomainInput = (DownloadSpeedLimitActionForAddCdnDomainInput) o;
    return Objects.equals(this.speedLimitRate, downloadSpeedLimitActionForAddCdnDomainInput.speedLimitRate) &&
        Objects.equals(this.speedLimitRateAfter, downloadSpeedLimitActionForAddCdnDomainInput.speedLimitRateAfter) &&
        Objects.equals(this.speedLimitTime, downloadSpeedLimitActionForAddCdnDomainInput.speedLimitTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(speedLimitRate, speedLimitRateAfter, speedLimitTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DownloadSpeedLimitActionForAddCdnDomainInput {\n");
    
    sb.append("    speedLimitRate: ").append(toIndentedString(speedLimitRate)).append("\n");
    sb.append("    speedLimitRateAfter: ").append(toIndentedString(speedLimitRateAfter)).append("\n");
    sb.append("    speedLimitTime: ").append(toIndentedString(speedLimitTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
