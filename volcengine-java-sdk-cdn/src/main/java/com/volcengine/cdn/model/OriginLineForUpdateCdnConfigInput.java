/*
 * cdn
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.cdn.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * OriginLineForUpdateCdnConfigInput
 */



public class OriginLineForUpdateCdnConfigInput {
  @SerializedName("Address")
  private String address = null;

  @SerializedName("HttpPort")
  private String httpPort = null;

  @SerializedName("HttpsPort")
  private String httpsPort = null;

  @SerializedName("InstanceType")
  private String instanceType = null;

  @SerializedName("OriginHost")
  private String originHost = null;

  public OriginLineForUpdateCdnConfigInput address(String address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @Schema(description = "")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public OriginLineForUpdateCdnConfigInput httpPort(String httpPort) {
    this.httpPort = httpPort;
    return this;
  }

   /**
   * Get httpPort
   * @return httpPort
  **/
  @Schema(description = "")
  public String getHttpPort() {
    return httpPort;
  }

  public void setHttpPort(String httpPort) {
    this.httpPort = httpPort;
  }

  public OriginLineForUpdateCdnConfigInput httpsPort(String httpsPort) {
    this.httpsPort = httpsPort;
    return this;
  }

   /**
   * Get httpsPort
   * @return httpsPort
  **/
  @Schema(description = "")
  public String getHttpsPort() {
    return httpsPort;
  }

  public void setHttpsPort(String httpsPort) {
    this.httpsPort = httpsPort;
  }

  public OriginLineForUpdateCdnConfigInput instanceType(String instanceType) {
    this.instanceType = instanceType;
    return this;
  }

   /**
   * Get instanceType
   * @return instanceType
  **/
  @Schema(description = "")
  public String getInstanceType() {
    return instanceType;
  }

  public void setInstanceType(String instanceType) {
    this.instanceType = instanceType;
  }

  public OriginLineForUpdateCdnConfigInput originHost(String originHost) {
    this.originHost = originHost;
    return this;
  }

   /**
   * Get originHost
   * @return originHost
  **/
  @Schema(description = "")
  public String getOriginHost() {
    return originHost;
  }

  public void setOriginHost(String originHost) {
    this.originHost = originHost;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OriginLineForUpdateCdnConfigInput originLineForUpdateCdnConfigInput = (OriginLineForUpdateCdnConfigInput) o;
    return Objects.equals(this.address, originLineForUpdateCdnConfigInput.address) &&
        Objects.equals(this.httpPort, originLineForUpdateCdnConfigInput.httpPort) &&
        Objects.equals(this.httpsPort, originLineForUpdateCdnConfigInput.httpsPort) &&
        Objects.equals(this.instanceType, originLineForUpdateCdnConfigInput.instanceType) &&
        Objects.equals(this.originHost, originLineForUpdateCdnConfigInput.originHost);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, httpPort, httpsPort, instanceType, originHost);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OriginLineForUpdateCdnConfigInput {\n");
    
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    httpPort: ").append(toIndentedString(httpPort)).append("\n");
    sb.append("    httpsPort: ").append(toIndentedString(httpsPort)).append("\n");
    sb.append("    instanceType: ").append(toIndentedString(instanceType)).append("\n");
    sb.append("    originHost: ").append(toIndentedString(originHost)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
