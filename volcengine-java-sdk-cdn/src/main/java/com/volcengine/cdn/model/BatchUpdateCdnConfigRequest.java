/*
 * cdn
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.cdn.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.cdn.model.AreaAccessRuleForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.BandwidthLimitForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.BrowserCacheForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.CacheForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.CacheHostForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.CacheKeyForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.CompressionForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.ConditionalOriginForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.CustomErrorPageForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.CustomizeAccessRuleForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.DownloadSpeedLimitForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.HTTPSForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.HttpForcedRedirectForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.IPv6ForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.IpAccessRuleForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.IpFreqLimitForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.MethodDeniedRuleForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.MultiRangeForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.NegativeCacheForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.OfflineCacheForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.OriginAccessRuleForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.OriginArgForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.OriginCertCheckForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.OriginForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.OriginRetryForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.OriginRewriteForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.OriginSniForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.PageOptimizationForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.QuicForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.RedirectionRewriteForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.RefererAccessRuleForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.RemoteAuthForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.RequestBlockRuleForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.RequestHeaderForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.ResponseHeaderForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.RewriteHLSForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.SignedUrlAuthForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.TimeoutForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.UaAccessRuleForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.UrlNormalizeForBatchUpdateCdnConfigInput;
import com.volcengine.cdn.model.VideoDragForBatchUpdateCdnConfigInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * BatchUpdateCdnConfigRequest
 */



public class BatchUpdateCdnConfigRequest {
  @SerializedName("Aggregate")
  private Boolean aggregate = null;

  @SerializedName("AreaAccessRule")
  private AreaAccessRuleForBatchUpdateCdnConfigInput areaAccessRule = null;

  @SerializedName("BandwidthLimit")
  private BandwidthLimitForBatchUpdateCdnConfigInput bandwidthLimit = null;

  @SerializedName("BrowserCache")
  private List<BrowserCacheForBatchUpdateCdnConfigInput> browserCache = null;

  @SerializedName("Cache")
  private List<CacheForBatchUpdateCdnConfigInput> cache = null;

  @SerializedName("CacheHost")
  private CacheHostForBatchUpdateCdnConfigInput cacheHost = null;

  @SerializedName("CacheKey")
  private List<CacheKeyForBatchUpdateCdnConfigInput> cacheKey = null;

  @SerializedName("Compression")
  private CompressionForBatchUpdateCdnConfigInput compression = null;

  @SerializedName("ConditionalOrigin")
  private ConditionalOriginForBatchUpdateCdnConfigInput conditionalOrigin = null;

  @SerializedName("CustomErrorPage")
  private CustomErrorPageForBatchUpdateCdnConfigInput customErrorPage = null;

  @SerializedName("CustomizeAccessRule")
  private CustomizeAccessRuleForBatchUpdateCdnConfigInput customizeAccessRule = null;

  @SerializedName("Domains")
  private List<String> domains = null;

  @SerializedName("DownloadSpeedLimit")
  private DownloadSpeedLimitForBatchUpdateCdnConfigInput downloadSpeedLimit = null;

  @SerializedName("FollowRedirect")
  private Boolean followRedirect = null;

  @SerializedName("HTTPS")
  private HTTPSForBatchUpdateCdnConfigInput HTTPS = null;

  @SerializedName("HttpForcedRedirect")
  private HttpForcedRedirectForBatchUpdateCdnConfigInput httpForcedRedirect = null;

  @SerializedName("IPv6")
  private IPv6ForBatchUpdateCdnConfigInput ipv6 = null;

  @SerializedName("IpAccessRule")
  private IpAccessRuleForBatchUpdateCdnConfigInput ipAccessRule = null;

  @SerializedName("IpFreqLimit")
  private IpFreqLimitForBatchUpdateCdnConfigInput ipFreqLimit = null;

  @SerializedName("MethodDeniedRule")
  private MethodDeniedRuleForBatchUpdateCdnConfigInput methodDeniedRule = null;

  @SerializedName("MultiRange")
  private MultiRangeForBatchUpdateCdnConfigInput multiRange = null;

  @SerializedName("NegativeCache")
  private List<NegativeCacheForBatchUpdateCdnConfigInput> negativeCache = null;

  @SerializedName("OfflineCache")
  private OfflineCacheForBatchUpdateCdnConfigInput offlineCache = null;

  @SerializedName("Origin")
  private List<OriginForBatchUpdateCdnConfigInput> origin = null;

  @SerializedName("OriginAccessRule")
  private OriginAccessRuleForBatchUpdateCdnConfigInput originAccessRule = null;

  @SerializedName("OriginArg")
  private List<OriginArgForBatchUpdateCdnConfigInput> originArg = null;

  @SerializedName("OriginCertCheck")
  private OriginCertCheckForBatchUpdateCdnConfigInput originCertCheck = null;

  @SerializedName("OriginHost")
  private String originHost = null;

  @SerializedName("OriginIPv6")
  private String originIPv6 = null;

  @SerializedName("OriginProtocol")
  private String originProtocol = null;

  @SerializedName("OriginRange")
  private Boolean originRange = null;

  @SerializedName("OriginRetry")
  private OriginRetryForBatchUpdateCdnConfigInput originRetry = null;

  @SerializedName("OriginRewrite")
  private OriginRewriteForBatchUpdateCdnConfigInput originRewrite = null;

  @SerializedName("OriginSni")
  private OriginSniForBatchUpdateCdnConfigInput originSni = null;

  @SerializedName("PageOptimization")
  private PageOptimizationForBatchUpdateCdnConfigInput pageOptimization = null;

  @SerializedName("Quic")
  private QuicForBatchUpdateCdnConfigInput quic = null;

  @SerializedName("RedirectionRewrite")
  private RedirectionRewriteForBatchUpdateCdnConfigInput redirectionRewrite = null;

  @SerializedName("RefererAccessRule")
  private RefererAccessRuleForBatchUpdateCdnConfigInput refererAccessRule = null;

  @SerializedName("RemoteAuth")
  private RemoteAuthForBatchUpdateCdnConfigInput remoteAuth = null;

  @SerializedName("RequestBlockRule")
  private RequestBlockRuleForBatchUpdateCdnConfigInput requestBlockRule = null;

  @SerializedName("RequestHeader")
  private List<RequestHeaderForBatchUpdateCdnConfigInput> requestHeader = null;

  @SerializedName("ResponseHeader")
  private List<ResponseHeaderForBatchUpdateCdnConfigInput> responseHeader = null;

  @SerializedName("RewriteHLS")
  private RewriteHLSForBatchUpdateCdnConfigInput rewriteHLS = null;

  @SerializedName("ServiceRegion")
  private String serviceRegion = null;

  @SerializedName("SignedUrlAuth")
  private SignedUrlAuthForBatchUpdateCdnConfigInput signedUrlAuth = null;

  @SerializedName("Timeout")
  private TimeoutForBatchUpdateCdnConfigInput timeout = null;

  @SerializedName("UaAccessRule")
  private UaAccessRuleForBatchUpdateCdnConfigInput uaAccessRule = null;

  @SerializedName("UrlNormalize")
  private UrlNormalizeForBatchUpdateCdnConfigInput urlNormalize = null;

  @SerializedName("VideoDrag")
  private VideoDragForBatchUpdateCdnConfigInput videoDrag = null;

  public BatchUpdateCdnConfigRequest aggregate(Boolean aggregate) {
    this.aggregate = aggregate;
    return this;
  }

   /**
   * Get aggregate
   * @return aggregate
  **/
  @Schema(description = "")
  public Boolean isAggregate() {
    return aggregate;
  }

  public void setAggregate(Boolean aggregate) {
    this.aggregate = aggregate;
  }

  public BatchUpdateCdnConfigRequest areaAccessRule(AreaAccessRuleForBatchUpdateCdnConfigInput areaAccessRule) {
    this.areaAccessRule = areaAccessRule;
    return this;
  }

   /**
   * Get areaAccessRule
   * @return areaAccessRule
  **/
  @Valid
  @Schema(description = "")
  public AreaAccessRuleForBatchUpdateCdnConfigInput getAreaAccessRule() {
    return areaAccessRule;
  }

  public void setAreaAccessRule(AreaAccessRuleForBatchUpdateCdnConfigInput areaAccessRule) {
    this.areaAccessRule = areaAccessRule;
  }

  public BatchUpdateCdnConfigRequest bandwidthLimit(BandwidthLimitForBatchUpdateCdnConfigInput bandwidthLimit) {
    this.bandwidthLimit = bandwidthLimit;
    return this;
  }

   /**
   * Get bandwidthLimit
   * @return bandwidthLimit
  **/
  @Valid
  @Schema(description = "")
  public BandwidthLimitForBatchUpdateCdnConfigInput getBandwidthLimit() {
    return bandwidthLimit;
  }

  public void setBandwidthLimit(BandwidthLimitForBatchUpdateCdnConfigInput bandwidthLimit) {
    this.bandwidthLimit = bandwidthLimit;
  }

  public BatchUpdateCdnConfigRequest browserCache(List<BrowserCacheForBatchUpdateCdnConfigInput> browserCache) {
    this.browserCache = browserCache;
    return this;
  }

  public BatchUpdateCdnConfigRequest addBrowserCacheItem(BrowserCacheForBatchUpdateCdnConfigInput browserCacheItem) {
    if (this.browserCache == null) {
      this.browserCache = new ArrayList<BrowserCacheForBatchUpdateCdnConfigInput>();
    }
    this.browserCache.add(browserCacheItem);
    return this;
  }

   /**
   * Get browserCache
   * @return browserCache
  **/
  @Valid
  @Schema(description = "")
  public List<BrowserCacheForBatchUpdateCdnConfigInput> getBrowserCache() {
    return browserCache;
  }

  public void setBrowserCache(List<BrowserCacheForBatchUpdateCdnConfigInput> browserCache) {
    this.browserCache = browserCache;
  }

  public BatchUpdateCdnConfigRequest cache(List<CacheForBatchUpdateCdnConfigInput> cache) {
    this.cache = cache;
    return this;
  }

  public BatchUpdateCdnConfigRequest addCacheItem(CacheForBatchUpdateCdnConfigInput cacheItem) {
    if (this.cache == null) {
      this.cache = new ArrayList<CacheForBatchUpdateCdnConfigInput>();
    }
    this.cache.add(cacheItem);
    return this;
  }

   /**
   * Get cache
   * @return cache
  **/
  @Valid
  @Schema(description = "")
  public List<CacheForBatchUpdateCdnConfigInput> getCache() {
    return cache;
  }

  public void setCache(List<CacheForBatchUpdateCdnConfigInput> cache) {
    this.cache = cache;
  }

  public BatchUpdateCdnConfigRequest cacheHost(CacheHostForBatchUpdateCdnConfigInput cacheHost) {
    this.cacheHost = cacheHost;
    return this;
  }

   /**
   * Get cacheHost
   * @return cacheHost
  **/
  @Valid
  @Schema(description = "")
  public CacheHostForBatchUpdateCdnConfigInput getCacheHost() {
    return cacheHost;
  }

  public void setCacheHost(CacheHostForBatchUpdateCdnConfigInput cacheHost) {
    this.cacheHost = cacheHost;
  }

  public BatchUpdateCdnConfigRequest cacheKey(List<CacheKeyForBatchUpdateCdnConfigInput> cacheKey) {
    this.cacheKey = cacheKey;
    return this;
  }

  public BatchUpdateCdnConfigRequest addCacheKeyItem(CacheKeyForBatchUpdateCdnConfigInput cacheKeyItem) {
    if (this.cacheKey == null) {
      this.cacheKey = new ArrayList<CacheKeyForBatchUpdateCdnConfigInput>();
    }
    this.cacheKey.add(cacheKeyItem);
    return this;
  }

   /**
   * Get cacheKey
   * @return cacheKey
  **/
  @Valid
  @Schema(description = "")
  public List<CacheKeyForBatchUpdateCdnConfigInput> getCacheKey() {
    return cacheKey;
  }

  public void setCacheKey(List<CacheKeyForBatchUpdateCdnConfigInput> cacheKey) {
    this.cacheKey = cacheKey;
  }

  public BatchUpdateCdnConfigRequest compression(CompressionForBatchUpdateCdnConfigInput compression) {
    this.compression = compression;
    return this;
  }

   /**
   * Get compression
   * @return compression
  **/
  @Valid
  @Schema(description = "")
  public CompressionForBatchUpdateCdnConfigInput getCompression() {
    return compression;
  }

  public void setCompression(CompressionForBatchUpdateCdnConfigInput compression) {
    this.compression = compression;
  }

  public BatchUpdateCdnConfigRequest conditionalOrigin(ConditionalOriginForBatchUpdateCdnConfigInput conditionalOrigin) {
    this.conditionalOrigin = conditionalOrigin;
    return this;
  }

   /**
   * Get conditionalOrigin
   * @return conditionalOrigin
  **/
  @Valid
  @Schema(description = "")
  public ConditionalOriginForBatchUpdateCdnConfigInput getConditionalOrigin() {
    return conditionalOrigin;
  }

  public void setConditionalOrigin(ConditionalOriginForBatchUpdateCdnConfigInput conditionalOrigin) {
    this.conditionalOrigin = conditionalOrigin;
  }

  public BatchUpdateCdnConfigRequest customErrorPage(CustomErrorPageForBatchUpdateCdnConfigInput customErrorPage) {
    this.customErrorPage = customErrorPage;
    return this;
  }

   /**
   * Get customErrorPage
   * @return customErrorPage
  **/
  @Valid
  @Schema(description = "")
  public CustomErrorPageForBatchUpdateCdnConfigInput getCustomErrorPage() {
    return customErrorPage;
  }

  public void setCustomErrorPage(CustomErrorPageForBatchUpdateCdnConfigInput customErrorPage) {
    this.customErrorPage = customErrorPage;
  }

  public BatchUpdateCdnConfigRequest customizeAccessRule(CustomizeAccessRuleForBatchUpdateCdnConfigInput customizeAccessRule) {
    this.customizeAccessRule = customizeAccessRule;
    return this;
  }

   /**
   * Get customizeAccessRule
   * @return customizeAccessRule
  **/
  @Valid
  @Schema(description = "")
  public CustomizeAccessRuleForBatchUpdateCdnConfigInput getCustomizeAccessRule() {
    return customizeAccessRule;
  }

  public void setCustomizeAccessRule(CustomizeAccessRuleForBatchUpdateCdnConfigInput customizeAccessRule) {
    this.customizeAccessRule = customizeAccessRule;
  }

  public BatchUpdateCdnConfigRequest domains(List<String> domains) {
    this.domains = domains;
    return this;
  }

  public BatchUpdateCdnConfigRequest addDomainsItem(String domainsItem) {
    if (this.domains == null) {
      this.domains = new ArrayList<String>();
    }
    this.domains.add(domainsItem);
    return this;
  }

   /**
   * Get domains
   * @return domains
  **/
  @Schema(description = "")
  public List<String> getDomains() {
    return domains;
  }

  public void setDomains(List<String> domains) {
    this.domains = domains;
  }

  public BatchUpdateCdnConfigRequest downloadSpeedLimit(DownloadSpeedLimitForBatchUpdateCdnConfigInput downloadSpeedLimit) {
    this.downloadSpeedLimit = downloadSpeedLimit;
    return this;
  }

   /**
   * Get downloadSpeedLimit
   * @return downloadSpeedLimit
  **/
  @Valid
  @Schema(description = "")
  public DownloadSpeedLimitForBatchUpdateCdnConfigInput getDownloadSpeedLimit() {
    return downloadSpeedLimit;
  }

  public void setDownloadSpeedLimit(DownloadSpeedLimitForBatchUpdateCdnConfigInput downloadSpeedLimit) {
    this.downloadSpeedLimit = downloadSpeedLimit;
  }

  public BatchUpdateCdnConfigRequest followRedirect(Boolean followRedirect) {
    this.followRedirect = followRedirect;
    return this;
  }

   /**
   * Get followRedirect
   * @return followRedirect
  **/
  @Schema(description = "")
  public Boolean isFollowRedirect() {
    return followRedirect;
  }

  public void setFollowRedirect(Boolean followRedirect) {
    this.followRedirect = followRedirect;
  }

  public BatchUpdateCdnConfigRequest HTTPS(HTTPSForBatchUpdateCdnConfigInput HTTPS) {
    this.HTTPS = HTTPS;
    return this;
  }

   /**
   * Get HTTPS
   * @return HTTPS
  **/
  @Valid
  @Schema(description = "")
  public HTTPSForBatchUpdateCdnConfigInput getHTTPS() {
    return HTTPS;
  }

  public void setHTTPS(HTTPSForBatchUpdateCdnConfigInput HTTPS) {
    this.HTTPS = HTTPS;
  }

  public BatchUpdateCdnConfigRequest httpForcedRedirect(HttpForcedRedirectForBatchUpdateCdnConfigInput httpForcedRedirect) {
    this.httpForcedRedirect = httpForcedRedirect;
    return this;
  }

   /**
   * Get httpForcedRedirect
   * @return httpForcedRedirect
  **/
  @Valid
  @Schema(description = "")
  public HttpForcedRedirectForBatchUpdateCdnConfigInput getHttpForcedRedirect() {
    return httpForcedRedirect;
  }

  public void setHttpForcedRedirect(HttpForcedRedirectForBatchUpdateCdnConfigInput httpForcedRedirect) {
    this.httpForcedRedirect = httpForcedRedirect;
  }

  public BatchUpdateCdnConfigRequest ipv6(IPv6ForBatchUpdateCdnConfigInput ipv6) {
    this.ipv6 = ipv6;
    return this;
  }

   /**
   * Get ipv6
   * @return ipv6
  **/
  @Valid
  @Schema(description = "")
  public IPv6ForBatchUpdateCdnConfigInput getIpv6() {
    return ipv6;
  }

  public void setIpv6(IPv6ForBatchUpdateCdnConfigInput ipv6) {
    this.ipv6 = ipv6;
  }

  public BatchUpdateCdnConfigRequest ipAccessRule(IpAccessRuleForBatchUpdateCdnConfigInput ipAccessRule) {
    this.ipAccessRule = ipAccessRule;
    return this;
  }

   /**
   * Get ipAccessRule
   * @return ipAccessRule
  **/
  @Valid
  @Schema(description = "")
  public IpAccessRuleForBatchUpdateCdnConfigInput getIpAccessRule() {
    return ipAccessRule;
  }

  public void setIpAccessRule(IpAccessRuleForBatchUpdateCdnConfigInput ipAccessRule) {
    this.ipAccessRule = ipAccessRule;
  }

  public BatchUpdateCdnConfigRequest ipFreqLimit(IpFreqLimitForBatchUpdateCdnConfigInput ipFreqLimit) {
    this.ipFreqLimit = ipFreqLimit;
    return this;
  }

   /**
   * Get ipFreqLimit
   * @return ipFreqLimit
  **/
  @Valid
  @Schema(description = "")
  public IpFreqLimitForBatchUpdateCdnConfigInput getIpFreqLimit() {
    return ipFreqLimit;
  }

  public void setIpFreqLimit(IpFreqLimitForBatchUpdateCdnConfigInput ipFreqLimit) {
    this.ipFreqLimit = ipFreqLimit;
  }

  public BatchUpdateCdnConfigRequest methodDeniedRule(MethodDeniedRuleForBatchUpdateCdnConfigInput methodDeniedRule) {
    this.methodDeniedRule = methodDeniedRule;
    return this;
  }

   /**
   * Get methodDeniedRule
   * @return methodDeniedRule
  **/
  @Valid
  @Schema(description = "")
  public MethodDeniedRuleForBatchUpdateCdnConfigInput getMethodDeniedRule() {
    return methodDeniedRule;
  }

  public void setMethodDeniedRule(MethodDeniedRuleForBatchUpdateCdnConfigInput methodDeniedRule) {
    this.methodDeniedRule = methodDeniedRule;
  }

  public BatchUpdateCdnConfigRequest multiRange(MultiRangeForBatchUpdateCdnConfigInput multiRange) {
    this.multiRange = multiRange;
    return this;
  }

   /**
   * Get multiRange
   * @return multiRange
  **/
  @Valid
  @Schema(description = "")
  public MultiRangeForBatchUpdateCdnConfigInput getMultiRange() {
    return multiRange;
  }

  public void setMultiRange(MultiRangeForBatchUpdateCdnConfigInput multiRange) {
    this.multiRange = multiRange;
  }

  public BatchUpdateCdnConfigRequest negativeCache(List<NegativeCacheForBatchUpdateCdnConfigInput> negativeCache) {
    this.negativeCache = negativeCache;
    return this;
  }

  public BatchUpdateCdnConfigRequest addNegativeCacheItem(NegativeCacheForBatchUpdateCdnConfigInput negativeCacheItem) {
    if (this.negativeCache == null) {
      this.negativeCache = new ArrayList<NegativeCacheForBatchUpdateCdnConfigInput>();
    }
    this.negativeCache.add(negativeCacheItem);
    return this;
  }

   /**
   * Get negativeCache
   * @return negativeCache
  **/
  @Valid
  @Schema(description = "")
  public List<NegativeCacheForBatchUpdateCdnConfigInput> getNegativeCache() {
    return negativeCache;
  }

  public void setNegativeCache(List<NegativeCacheForBatchUpdateCdnConfigInput> negativeCache) {
    this.negativeCache = negativeCache;
  }

  public BatchUpdateCdnConfigRequest offlineCache(OfflineCacheForBatchUpdateCdnConfigInput offlineCache) {
    this.offlineCache = offlineCache;
    return this;
  }

   /**
   * Get offlineCache
   * @return offlineCache
  **/
  @Valid
  @Schema(description = "")
  public OfflineCacheForBatchUpdateCdnConfigInput getOfflineCache() {
    return offlineCache;
  }

  public void setOfflineCache(OfflineCacheForBatchUpdateCdnConfigInput offlineCache) {
    this.offlineCache = offlineCache;
  }

  public BatchUpdateCdnConfigRequest origin(List<OriginForBatchUpdateCdnConfigInput> origin) {
    this.origin = origin;
    return this;
  }

  public BatchUpdateCdnConfigRequest addOriginItem(OriginForBatchUpdateCdnConfigInput originItem) {
    if (this.origin == null) {
      this.origin = new ArrayList<OriginForBatchUpdateCdnConfigInput>();
    }
    this.origin.add(originItem);
    return this;
  }

   /**
   * Get origin
   * @return origin
  **/
  @Valid
  @Schema(description = "")
  public List<OriginForBatchUpdateCdnConfigInput> getOrigin() {
    return origin;
  }

  public void setOrigin(List<OriginForBatchUpdateCdnConfigInput> origin) {
    this.origin = origin;
  }

  public BatchUpdateCdnConfigRequest originAccessRule(OriginAccessRuleForBatchUpdateCdnConfigInput originAccessRule) {
    this.originAccessRule = originAccessRule;
    return this;
  }

   /**
   * Get originAccessRule
   * @return originAccessRule
  **/
  @Valid
  @Schema(description = "")
  public OriginAccessRuleForBatchUpdateCdnConfigInput getOriginAccessRule() {
    return originAccessRule;
  }

  public void setOriginAccessRule(OriginAccessRuleForBatchUpdateCdnConfigInput originAccessRule) {
    this.originAccessRule = originAccessRule;
  }

  public BatchUpdateCdnConfigRequest originArg(List<OriginArgForBatchUpdateCdnConfigInput> originArg) {
    this.originArg = originArg;
    return this;
  }

  public BatchUpdateCdnConfigRequest addOriginArgItem(OriginArgForBatchUpdateCdnConfigInput originArgItem) {
    if (this.originArg == null) {
      this.originArg = new ArrayList<OriginArgForBatchUpdateCdnConfigInput>();
    }
    this.originArg.add(originArgItem);
    return this;
  }

   /**
   * Get originArg
   * @return originArg
  **/
  @Valid
  @Schema(description = "")
  public List<OriginArgForBatchUpdateCdnConfigInput> getOriginArg() {
    return originArg;
  }

  public void setOriginArg(List<OriginArgForBatchUpdateCdnConfigInput> originArg) {
    this.originArg = originArg;
  }

  public BatchUpdateCdnConfigRequest originCertCheck(OriginCertCheckForBatchUpdateCdnConfigInput originCertCheck) {
    this.originCertCheck = originCertCheck;
    return this;
  }

   /**
   * Get originCertCheck
   * @return originCertCheck
  **/
  @Valid
  @Schema(description = "")
  public OriginCertCheckForBatchUpdateCdnConfigInput getOriginCertCheck() {
    return originCertCheck;
  }

  public void setOriginCertCheck(OriginCertCheckForBatchUpdateCdnConfigInput originCertCheck) {
    this.originCertCheck = originCertCheck;
  }

  public BatchUpdateCdnConfigRequest originHost(String originHost) {
    this.originHost = originHost;
    return this;
  }

   /**
   * Get originHost
   * @return originHost
  **/
  @Schema(description = "")
  public String getOriginHost() {
    return originHost;
  }

  public void setOriginHost(String originHost) {
    this.originHost = originHost;
  }

  public BatchUpdateCdnConfigRequest originIPv6(String originIPv6) {
    this.originIPv6 = originIPv6;
    return this;
  }

   /**
   * Get originIPv6
   * @return originIPv6
  **/
  @Schema(description = "")
  public String getOriginIPv6() {
    return originIPv6;
  }

  public void setOriginIPv6(String originIPv6) {
    this.originIPv6 = originIPv6;
  }

  public BatchUpdateCdnConfigRequest originProtocol(String originProtocol) {
    this.originProtocol = originProtocol;
    return this;
  }

   /**
   * Get originProtocol
   * @return originProtocol
  **/
  @Schema(description = "")
  public String getOriginProtocol() {
    return originProtocol;
  }

  public void setOriginProtocol(String originProtocol) {
    this.originProtocol = originProtocol;
  }

  public BatchUpdateCdnConfigRequest originRange(Boolean originRange) {
    this.originRange = originRange;
    return this;
  }

   /**
   * Get originRange
   * @return originRange
  **/
  @Schema(description = "")
  public Boolean isOriginRange() {
    return originRange;
  }

  public void setOriginRange(Boolean originRange) {
    this.originRange = originRange;
  }

  public BatchUpdateCdnConfigRequest originRetry(OriginRetryForBatchUpdateCdnConfigInput originRetry) {
    this.originRetry = originRetry;
    return this;
  }

   /**
   * Get originRetry
   * @return originRetry
  **/
  @Valid
  @Schema(description = "")
  public OriginRetryForBatchUpdateCdnConfigInput getOriginRetry() {
    return originRetry;
  }

  public void setOriginRetry(OriginRetryForBatchUpdateCdnConfigInput originRetry) {
    this.originRetry = originRetry;
  }

  public BatchUpdateCdnConfigRequest originRewrite(OriginRewriteForBatchUpdateCdnConfigInput originRewrite) {
    this.originRewrite = originRewrite;
    return this;
  }

   /**
   * Get originRewrite
   * @return originRewrite
  **/
  @Valid
  @Schema(description = "")
  public OriginRewriteForBatchUpdateCdnConfigInput getOriginRewrite() {
    return originRewrite;
  }

  public void setOriginRewrite(OriginRewriteForBatchUpdateCdnConfigInput originRewrite) {
    this.originRewrite = originRewrite;
  }

  public BatchUpdateCdnConfigRequest originSni(OriginSniForBatchUpdateCdnConfigInput originSni) {
    this.originSni = originSni;
    return this;
  }

   /**
   * Get originSni
   * @return originSni
  **/
  @Valid
  @Schema(description = "")
  public OriginSniForBatchUpdateCdnConfigInput getOriginSni() {
    return originSni;
  }

  public void setOriginSni(OriginSniForBatchUpdateCdnConfigInput originSni) {
    this.originSni = originSni;
  }

  public BatchUpdateCdnConfigRequest pageOptimization(PageOptimizationForBatchUpdateCdnConfigInput pageOptimization) {
    this.pageOptimization = pageOptimization;
    return this;
  }

   /**
   * Get pageOptimization
   * @return pageOptimization
  **/
  @Valid
  @Schema(description = "")
  public PageOptimizationForBatchUpdateCdnConfigInput getPageOptimization() {
    return pageOptimization;
  }

  public void setPageOptimization(PageOptimizationForBatchUpdateCdnConfigInput pageOptimization) {
    this.pageOptimization = pageOptimization;
  }

  public BatchUpdateCdnConfigRequest quic(QuicForBatchUpdateCdnConfigInput quic) {
    this.quic = quic;
    return this;
  }

   /**
   * Get quic
   * @return quic
  **/
  @Valid
  @Schema(description = "")
  public QuicForBatchUpdateCdnConfigInput getQuic() {
    return quic;
  }

  public void setQuic(QuicForBatchUpdateCdnConfigInput quic) {
    this.quic = quic;
  }

  public BatchUpdateCdnConfigRequest redirectionRewrite(RedirectionRewriteForBatchUpdateCdnConfigInput redirectionRewrite) {
    this.redirectionRewrite = redirectionRewrite;
    return this;
  }

   /**
   * Get redirectionRewrite
   * @return redirectionRewrite
  **/
  @Valid
  @Schema(description = "")
  public RedirectionRewriteForBatchUpdateCdnConfigInput getRedirectionRewrite() {
    return redirectionRewrite;
  }

  public void setRedirectionRewrite(RedirectionRewriteForBatchUpdateCdnConfigInput redirectionRewrite) {
    this.redirectionRewrite = redirectionRewrite;
  }

  public BatchUpdateCdnConfigRequest refererAccessRule(RefererAccessRuleForBatchUpdateCdnConfigInput refererAccessRule) {
    this.refererAccessRule = refererAccessRule;
    return this;
  }

   /**
   * Get refererAccessRule
   * @return refererAccessRule
  **/
  @Valid
  @Schema(description = "")
  public RefererAccessRuleForBatchUpdateCdnConfigInput getRefererAccessRule() {
    return refererAccessRule;
  }

  public void setRefererAccessRule(RefererAccessRuleForBatchUpdateCdnConfigInput refererAccessRule) {
    this.refererAccessRule = refererAccessRule;
  }

  public BatchUpdateCdnConfigRequest remoteAuth(RemoteAuthForBatchUpdateCdnConfigInput remoteAuth) {
    this.remoteAuth = remoteAuth;
    return this;
  }

   /**
   * Get remoteAuth
   * @return remoteAuth
  **/
  @Valid
  @Schema(description = "")
  public RemoteAuthForBatchUpdateCdnConfigInput getRemoteAuth() {
    return remoteAuth;
  }

  public void setRemoteAuth(RemoteAuthForBatchUpdateCdnConfigInput remoteAuth) {
    this.remoteAuth = remoteAuth;
  }

  public BatchUpdateCdnConfigRequest requestBlockRule(RequestBlockRuleForBatchUpdateCdnConfigInput requestBlockRule) {
    this.requestBlockRule = requestBlockRule;
    return this;
  }

   /**
   * Get requestBlockRule
   * @return requestBlockRule
  **/
  @Valid
  @Schema(description = "")
  public RequestBlockRuleForBatchUpdateCdnConfigInput getRequestBlockRule() {
    return requestBlockRule;
  }

  public void setRequestBlockRule(RequestBlockRuleForBatchUpdateCdnConfigInput requestBlockRule) {
    this.requestBlockRule = requestBlockRule;
  }

  public BatchUpdateCdnConfigRequest requestHeader(List<RequestHeaderForBatchUpdateCdnConfigInput> requestHeader) {
    this.requestHeader = requestHeader;
    return this;
  }

  public BatchUpdateCdnConfigRequest addRequestHeaderItem(RequestHeaderForBatchUpdateCdnConfigInput requestHeaderItem) {
    if (this.requestHeader == null) {
      this.requestHeader = new ArrayList<RequestHeaderForBatchUpdateCdnConfigInput>();
    }
    this.requestHeader.add(requestHeaderItem);
    return this;
  }

   /**
   * Get requestHeader
   * @return requestHeader
  **/
  @Valid
  @Schema(description = "")
  public List<RequestHeaderForBatchUpdateCdnConfigInput> getRequestHeader() {
    return requestHeader;
  }

  public void setRequestHeader(List<RequestHeaderForBatchUpdateCdnConfigInput> requestHeader) {
    this.requestHeader = requestHeader;
  }

  public BatchUpdateCdnConfigRequest responseHeader(List<ResponseHeaderForBatchUpdateCdnConfigInput> responseHeader) {
    this.responseHeader = responseHeader;
    return this;
  }

  public BatchUpdateCdnConfigRequest addResponseHeaderItem(ResponseHeaderForBatchUpdateCdnConfigInput responseHeaderItem) {
    if (this.responseHeader == null) {
      this.responseHeader = new ArrayList<ResponseHeaderForBatchUpdateCdnConfigInput>();
    }
    this.responseHeader.add(responseHeaderItem);
    return this;
  }

   /**
   * Get responseHeader
   * @return responseHeader
  **/
  @Valid
  @Schema(description = "")
  public List<ResponseHeaderForBatchUpdateCdnConfigInput> getResponseHeader() {
    return responseHeader;
  }

  public void setResponseHeader(List<ResponseHeaderForBatchUpdateCdnConfigInput> responseHeader) {
    this.responseHeader = responseHeader;
  }

  public BatchUpdateCdnConfigRequest rewriteHLS(RewriteHLSForBatchUpdateCdnConfigInput rewriteHLS) {
    this.rewriteHLS = rewriteHLS;
    return this;
  }

   /**
   * Get rewriteHLS
   * @return rewriteHLS
  **/
  @Valid
  @Schema(description = "")
  public RewriteHLSForBatchUpdateCdnConfigInput getRewriteHLS() {
    return rewriteHLS;
  }

  public void setRewriteHLS(RewriteHLSForBatchUpdateCdnConfigInput rewriteHLS) {
    this.rewriteHLS = rewriteHLS;
  }

  public BatchUpdateCdnConfigRequest serviceRegion(String serviceRegion) {
    this.serviceRegion = serviceRegion;
    return this;
  }

   /**
   * Get serviceRegion
   * @return serviceRegion
  **/
  @Schema(description = "")
  public String getServiceRegion() {
    return serviceRegion;
  }

  public void setServiceRegion(String serviceRegion) {
    this.serviceRegion = serviceRegion;
  }

  public BatchUpdateCdnConfigRequest signedUrlAuth(SignedUrlAuthForBatchUpdateCdnConfigInput signedUrlAuth) {
    this.signedUrlAuth = signedUrlAuth;
    return this;
  }

   /**
   * Get signedUrlAuth
   * @return signedUrlAuth
  **/
  @Valid
  @Schema(description = "")
  public SignedUrlAuthForBatchUpdateCdnConfigInput getSignedUrlAuth() {
    return signedUrlAuth;
  }

  public void setSignedUrlAuth(SignedUrlAuthForBatchUpdateCdnConfigInput signedUrlAuth) {
    this.signedUrlAuth = signedUrlAuth;
  }

  public BatchUpdateCdnConfigRequest timeout(TimeoutForBatchUpdateCdnConfigInput timeout) {
    this.timeout = timeout;
    return this;
  }

   /**
   * Get timeout
   * @return timeout
  **/
  @Valid
  @Schema(description = "")
  public TimeoutForBatchUpdateCdnConfigInput getTimeout() {
    return timeout;
  }

  public void setTimeout(TimeoutForBatchUpdateCdnConfigInput timeout) {
    this.timeout = timeout;
  }

  public BatchUpdateCdnConfigRequest uaAccessRule(UaAccessRuleForBatchUpdateCdnConfigInput uaAccessRule) {
    this.uaAccessRule = uaAccessRule;
    return this;
  }

   /**
   * Get uaAccessRule
   * @return uaAccessRule
  **/
  @Valid
  @Schema(description = "")
  public UaAccessRuleForBatchUpdateCdnConfigInput getUaAccessRule() {
    return uaAccessRule;
  }

  public void setUaAccessRule(UaAccessRuleForBatchUpdateCdnConfigInput uaAccessRule) {
    this.uaAccessRule = uaAccessRule;
  }

  public BatchUpdateCdnConfigRequest urlNormalize(UrlNormalizeForBatchUpdateCdnConfigInput urlNormalize) {
    this.urlNormalize = urlNormalize;
    return this;
  }

   /**
   * Get urlNormalize
   * @return urlNormalize
  **/
  @Valid
  @Schema(description = "")
  public UrlNormalizeForBatchUpdateCdnConfigInput getUrlNormalize() {
    return urlNormalize;
  }

  public void setUrlNormalize(UrlNormalizeForBatchUpdateCdnConfigInput urlNormalize) {
    this.urlNormalize = urlNormalize;
  }

  public BatchUpdateCdnConfigRequest videoDrag(VideoDragForBatchUpdateCdnConfigInput videoDrag) {
    this.videoDrag = videoDrag;
    return this;
  }

   /**
   * Get videoDrag
   * @return videoDrag
  **/
  @Valid
  @Schema(description = "")
  public VideoDragForBatchUpdateCdnConfigInput getVideoDrag() {
    return videoDrag;
  }

  public void setVideoDrag(VideoDragForBatchUpdateCdnConfigInput videoDrag) {
    this.videoDrag = videoDrag;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BatchUpdateCdnConfigRequest batchUpdateCdnConfigRequest = (BatchUpdateCdnConfigRequest) o;
    return Objects.equals(this.aggregate, batchUpdateCdnConfigRequest.aggregate) &&
        Objects.equals(this.areaAccessRule, batchUpdateCdnConfigRequest.areaAccessRule) &&
        Objects.equals(this.bandwidthLimit, batchUpdateCdnConfigRequest.bandwidthLimit) &&
        Objects.equals(this.browserCache, batchUpdateCdnConfigRequest.browserCache) &&
        Objects.equals(this.cache, batchUpdateCdnConfigRequest.cache) &&
        Objects.equals(this.cacheHost, batchUpdateCdnConfigRequest.cacheHost) &&
        Objects.equals(this.cacheKey, batchUpdateCdnConfigRequest.cacheKey) &&
        Objects.equals(this.compression, batchUpdateCdnConfigRequest.compression) &&
        Objects.equals(this.conditionalOrigin, batchUpdateCdnConfigRequest.conditionalOrigin) &&
        Objects.equals(this.customErrorPage, batchUpdateCdnConfigRequest.customErrorPage) &&
        Objects.equals(this.customizeAccessRule, batchUpdateCdnConfigRequest.customizeAccessRule) &&
        Objects.equals(this.domains, batchUpdateCdnConfigRequest.domains) &&
        Objects.equals(this.downloadSpeedLimit, batchUpdateCdnConfigRequest.downloadSpeedLimit) &&
        Objects.equals(this.followRedirect, batchUpdateCdnConfigRequest.followRedirect) &&
        Objects.equals(this.HTTPS, batchUpdateCdnConfigRequest.HTTPS) &&
        Objects.equals(this.httpForcedRedirect, batchUpdateCdnConfigRequest.httpForcedRedirect) &&
        Objects.equals(this.ipv6, batchUpdateCdnConfigRequest.ipv6) &&
        Objects.equals(this.ipAccessRule, batchUpdateCdnConfigRequest.ipAccessRule) &&
        Objects.equals(this.ipFreqLimit, batchUpdateCdnConfigRequest.ipFreqLimit) &&
        Objects.equals(this.methodDeniedRule, batchUpdateCdnConfigRequest.methodDeniedRule) &&
        Objects.equals(this.multiRange, batchUpdateCdnConfigRequest.multiRange) &&
        Objects.equals(this.negativeCache, batchUpdateCdnConfigRequest.negativeCache) &&
        Objects.equals(this.offlineCache, batchUpdateCdnConfigRequest.offlineCache) &&
        Objects.equals(this.origin, batchUpdateCdnConfigRequest.origin) &&
        Objects.equals(this.originAccessRule, batchUpdateCdnConfigRequest.originAccessRule) &&
        Objects.equals(this.originArg, batchUpdateCdnConfigRequest.originArg) &&
        Objects.equals(this.originCertCheck, batchUpdateCdnConfigRequest.originCertCheck) &&
        Objects.equals(this.originHost, batchUpdateCdnConfigRequest.originHost) &&
        Objects.equals(this.originIPv6, batchUpdateCdnConfigRequest.originIPv6) &&
        Objects.equals(this.originProtocol, batchUpdateCdnConfigRequest.originProtocol) &&
        Objects.equals(this.originRange, batchUpdateCdnConfigRequest.originRange) &&
        Objects.equals(this.originRetry, batchUpdateCdnConfigRequest.originRetry) &&
        Objects.equals(this.originRewrite, batchUpdateCdnConfigRequest.originRewrite) &&
        Objects.equals(this.originSni, batchUpdateCdnConfigRequest.originSni) &&
        Objects.equals(this.pageOptimization, batchUpdateCdnConfigRequest.pageOptimization) &&
        Objects.equals(this.quic, batchUpdateCdnConfigRequest.quic) &&
        Objects.equals(this.redirectionRewrite, batchUpdateCdnConfigRequest.redirectionRewrite) &&
        Objects.equals(this.refererAccessRule, batchUpdateCdnConfigRequest.refererAccessRule) &&
        Objects.equals(this.remoteAuth, batchUpdateCdnConfigRequest.remoteAuth) &&
        Objects.equals(this.requestBlockRule, batchUpdateCdnConfigRequest.requestBlockRule) &&
        Objects.equals(this.requestHeader, batchUpdateCdnConfigRequest.requestHeader) &&
        Objects.equals(this.responseHeader, batchUpdateCdnConfigRequest.responseHeader) &&
        Objects.equals(this.rewriteHLS, batchUpdateCdnConfigRequest.rewriteHLS) &&
        Objects.equals(this.serviceRegion, batchUpdateCdnConfigRequest.serviceRegion) &&
        Objects.equals(this.signedUrlAuth, batchUpdateCdnConfigRequest.signedUrlAuth) &&
        Objects.equals(this.timeout, batchUpdateCdnConfigRequest.timeout) &&
        Objects.equals(this.uaAccessRule, batchUpdateCdnConfigRequest.uaAccessRule) &&
        Objects.equals(this.urlNormalize, batchUpdateCdnConfigRequest.urlNormalize) &&
        Objects.equals(this.videoDrag, batchUpdateCdnConfigRequest.videoDrag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aggregate, areaAccessRule, bandwidthLimit, browserCache, cache, cacheHost, cacheKey, compression, conditionalOrigin, customErrorPage, customizeAccessRule, domains, downloadSpeedLimit, followRedirect, HTTPS, httpForcedRedirect, ipv6, ipAccessRule, ipFreqLimit, methodDeniedRule, multiRange, negativeCache, offlineCache, origin, originAccessRule, originArg, originCertCheck, originHost, originIPv6, originProtocol, originRange, originRetry, originRewrite, originSni, pageOptimization, quic, redirectionRewrite, refererAccessRule, remoteAuth, requestBlockRule, requestHeader, responseHeader, rewriteHLS, serviceRegion, signedUrlAuth, timeout, uaAccessRule, urlNormalize, videoDrag);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BatchUpdateCdnConfigRequest {\n");
    
    sb.append("    aggregate: ").append(toIndentedString(aggregate)).append("\n");
    sb.append("    areaAccessRule: ").append(toIndentedString(areaAccessRule)).append("\n");
    sb.append("    bandwidthLimit: ").append(toIndentedString(bandwidthLimit)).append("\n");
    sb.append("    browserCache: ").append(toIndentedString(browserCache)).append("\n");
    sb.append("    cache: ").append(toIndentedString(cache)).append("\n");
    sb.append("    cacheHost: ").append(toIndentedString(cacheHost)).append("\n");
    sb.append("    cacheKey: ").append(toIndentedString(cacheKey)).append("\n");
    sb.append("    compression: ").append(toIndentedString(compression)).append("\n");
    sb.append("    conditionalOrigin: ").append(toIndentedString(conditionalOrigin)).append("\n");
    sb.append("    customErrorPage: ").append(toIndentedString(customErrorPage)).append("\n");
    sb.append("    customizeAccessRule: ").append(toIndentedString(customizeAccessRule)).append("\n");
    sb.append("    domains: ").append(toIndentedString(domains)).append("\n");
    sb.append("    downloadSpeedLimit: ").append(toIndentedString(downloadSpeedLimit)).append("\n");
    sb.append("    followRedirect: ").append(toIndentedString(followRedirect)).append("\n");
    sb.append("    HTTPS: ").append(toIndentedString(HTTPS)).append("\n");
    sb.append("    httpForcedRedirect: ").append(toIndentedString(httpForcedRedirect)).append("\n");
    sb.append("    ipv6: ").append(toIndentedString(ipv6)).append("\n");
    sb.append("    ipAccessRule: ").append(toIndentedString(ipAccessRule)).append("\n");
    sb.append("    ipFreqLimit: ").append(toIndentedString(ipFreqLimit)).append("\n");
    sb.append("    methodDeniedRule: ").append(toIndentedString(methodDeniedRule)).append("\n");
    sb.append("    multiRange: ").append(toIndentedString(multiRange)).append("\n");
    sb.append("    negativeCache: ").append(toIndentedString(negativeCache)).append("\n");
    sb.append("    offlineCache: ").append(toIndentedString(offlineCache)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    originAccessRule: ").append(toIndentedString(originAccessRule)).append("\n");
    sb.append("    originArg: ").append(toIndentedString(originArg)).append("\n");
    sb.append("    originCertCheck: ").append(toIndentedString(originCertCheck)).append("\n");
    sb.append("    originHost: ").append(toIndentedString(originHost)).append("\n");
    sb.append("    originIPv6: ").append(toIndentedString(originIPv6)).append("\n");
    sb.append("    originProtocol: ").append(toIndentedString(originProtocol)).append("\n");
    sb.append("    originRange: ").append(toIndentedString(originRange)).append("\n");
    sb.append("    originRetry: ").append(toIndentedString(originRetry)).append("\n");
    sb.append("    originRewrite: ").append(toIndentedString(originRewrite)).append("\n");
    sb.append("    originSni: ").append(toIndentedString(originSni)).append("\n");
    sb.append("    pageOptimization: ").append(toIndentedString(pageOptimization)).append("\n");
    sb.append("    quic: ").append(toIndentedString(quic)).append("\n");
    sb.append("    redirectionRewrite: ").append(toIndentedString(redirectionRewrite)).append("\n");
    sb.append("    refererAccessRule: ").append(toIndentedString(refererAccessRule)).append("\n");
    sb.append("    remoteAuth: ").append(toIndentedString(remoteAuth)).append("\n");
    sb.append("    requestBlockRule: ").append(toIndentedString(requestBlockRule)).append("\n");
    sb.append("    requestHeader: ").append(toIndentedString(requestHeader)).append("\n");
    sb.append("    responseHeader: ").append(toIndentedString(responseHeader)).append("\n");
    sb.append("    rewriteHLS: ").append(toIndentedString(rewriteHLS)).append("\n");
    sb.append("    serviceRegion: ").append(toIndentedString(serviceRegion)).append("\n");
    sb.append("    signedUrlAuth: ").append(toIndentedString(signedUrlAuth)).append("\n");
    sb.append("    timeout: ").append(toIndentedString(timeout)).append("\n");
    sb.append("    uaAccessRule: ").append(toIndentedString(uaAccessRule)).append("\n");
    sb.append("    urlNormalize: ").append(toIndentedString(urlNormalize)).append("\n");
    sb.append("    videoDrag: ").append(toIndentedString(videoDrag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
