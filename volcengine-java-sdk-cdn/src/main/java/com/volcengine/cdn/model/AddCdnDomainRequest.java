/*
 * cdn
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.cdn.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.cdn.model.AreaAccessRuleForAddCdnDomainInput;
import com.volcengine.cdn.model.BandwidthLimitForAddCdnDomainInput;
import com.volcengine.cdn.model.BrowserCacheForAddCdnDomainInput;
import com.volcengine.cdn.model.CacheForAddCdnDomainInput;
import com.volcengine.cdn.model.CacheHostForAddCdnDomainInput;
import com.volcengine.cdn.model.CacheKeyForAddCdnDomainInput;
import com.volcengine.cdn.model.CompressionForAddCdnDomainInput;
import com.volcengine.cdn.model.ConditionalOriginForAddCdnDomainInput;
import com.volcengine.cdn.model.CustomErrorPageForAddCdnDomainInput;
import com.volcengine.cdn.model.CustomizeAccessRuleForAddCdnDomainInput;
import com.volcengine.cdn.model.DownloadSpeedLimitForAddCdnDomainInput;
import com.volcengine.cdn.model.HTTPSForAddCdnDomainInput;
import com.volcengine.cdn.model.HttpForcedRedirectForAddCdnDomainInput;
import com.volcengine.cdn.model.IPv6ForAddCdnDomainInput;
import com.volcengine.cdn.model.IpAccessRuleForAddCdnDomainInput;
import com.volcengine.cdn.model.IpFreqLimitForAddCdnDomainInput;
import com.volcengine.cdn.model.MethodDeniedRuleForAddCdnDomainInput;
import com.volcengine.cdn.model.NegativeCacheForAddCdnDomainInput;
import com.volcengine.cdn.model.OriginAccessRuleForAddCdnDomainInput;
import com.volcengine.cdn.model.OriginArgForAddCdnDomainInput;
import com.volcengine.cdn.model.OriginCertCheckForAddCdnDomainInput;
import com.volcengine.cdn.model.OriginForAddCdnDomainInput;
import com.volcengine.cdn.model.OriginRetryForAddCdnDomainInput;
import com.volcengine.cdn.model.OriginRewriteForAddCdnDomainInput;
import com.volcengine.cdn.model.OriginSniForAddCdnDomainInput;
import com.volcengine.cdn.model.PageOptimizationForAddCdnDomainInput;
import com.volcengine.cdn.model.QuicForAddCdnDomainInput;
import com.volcengine.cdn.model.RedirectionRewriteForAddCdnDomainInput;
import com.volcengine.cdn.model.RefererAccessRuleForAddCdnDomainInput;
import com.volcengine.cdn.model.RemoteAuthForAddCdnDomainInput;
import com.volcengine.cdn.model.RequestBlockRuleForAddCdnDomainInput;
import com.volcengine.cdn.model.RequestHeaderForAddCdnDomainInput;
import com.volcengine.cdn.model.ResourceTagForAddCdnDomainInput;
import com.volcengine.cdn.model.ResponseHeaderForAddCdnDomainInput;
import com.volcengine.cdn.model.SignedUrlAuthForAddCdnDomainInput;
import com.volcengine.cdn.model.TimeoutForAddCdnDomainInput;
import com.volcengine.cdn.model.UaAccessRuleForAddCdnDomainInput;
import com.volcengine.cdn.model.UrlNormalizeForAddCdnDomainInput;
import com.volcengine.cdn.model.VideoDragForAddCdnDomainInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * AddCdnDomainRequest
 */



public class AddCdnDomainRequest {
  @SerializedName("AreaAccessRule")
  private AreaAccessRuleForAddCdnDomainInput areaAccessRule = null;

  @SerializedName("BandwidthLimit")
  private BandwidthLimitForAddCdnDomainInput bandwidthLimit = null;

  @SerializedName("BrowserCache")
  private List<BrowserCacheForAddCdnDomainInput> browserCache = null;

  @SerializedName("Cache")
  private List<CacheForAddCdnDomainInput> cache = null;

  @SerializedName("CacheHost")
  private CacheHostForAddCdnDomainInput cacheHost = null;

  @SerializedName("CacheKey")
  private List<CacheKeyForAddCdnDomainInput> cacheKey = null;

  @SerializedName("Compression")
  private CompressionForAddCdnDomainInput compression = null;

  @SerializedName("ConditionalOrigin")
  private ConditionalOriginForAddCdnDomainInput conditionalOrigin = null;

  @SerializedName("CustomErrorPage")
  private CustomErrorPageForAddCdnDomainInput customErrorPage = null;

  @SerializedName("CustomizeAccessRule")
  private CustomizeAccessRuleForAddCdnDomainInput customizeAccessRule = null;

  @SerializedName("Domain")
  private String domain = null;

  @SerializedName("DownloadSpeedLimit")
  private DownloadSpeedLimitForAddCdnDomainInput downloadSpeedLimit = null;

  @SerializedName("FollowRedirect")
  private Boolean followRedirect = null;

  @SerializedName("HTTPS")
  private HTTPSForAddCdnDomainInput HTTPS = null;

  @SerializedName("HttpForcedRedirect")
  private HttpForcedRedirectForAddCdnDomainInput httpForcedRedirect = null;

  @SerializedName("IPv6")
  private IPv6ForAddCdnDomainInput ipv6 = null;

  @SerializedName("IpAccessRule")
  private IpAccessRuleForAddCdnDomainInput ipAccessRule = null;

  @SerializedName("IpFreqLimit")
  private IpFreqLimitForAddCdnDomainInput ipFreqLimit = null;

  @SerializedName("MethodDeniedRule")
  private MethodDeniedRuleForAddCdnDomainInput methodDeniedRule = null;

  @SerializedName("NegativeCache")
  private List<NegativeCacheForAddCdnDomainInput> negativeCache = null;

  @SerializedName("Origin")
  private List<OriginForAddCdnDomainInput> origin = null;

  @SerializedName("OriginAccessRule")
  private OriginAccessRuleForAddCdnDomainInput originAccessRule = null;

  @SerializedName("OriginArg")
  private List<OriginArgForAddCdnDomainInput> originArg = null;

  @SerializedName("OriginCertCheck")
  private OriginCertCheckForAddCdnDomainInput originCertCheck = null;

  @SerializedName("OriginHost")
  private String originHost = null;

  @SerializedName("OriginIPv6")
  private String originIPv6 = null;

  @SerializedName("OriginProtocol")
  private String originProtocol = null;

  @SerializedName("OriginRange")
  private Boolean originRange = null;

  @SerializedName("OriginRetry")
  private OriginRetryForAddCdnDomainInput originRetry = null;

  @SerializedName("OriginRewrite")
  private OriginRewriteForAddCdnDomainInput originRewrite = null;

  @SerializedName("OriginSni")
  private OriginSniForAddCdnDomainInput originSni = null;

  @SerializedName("PageOptimization")
  private PageOptimizationForAddCdnDomainInput pageOptimization = null;

  @SerializedName("Project")
  private String project = null;

  @SerializedName("Quic")
  private QuicForAddCdnDomainInput quic = null;

  @SerializedName("RedirectionRewrite")
  private RedirectionRewriteForAddCdnDomainInput redirectionRewrite = null;

  @SerializedName("RefererAccessRule")
  private RefererAccessRuleForAddCdnDomainInput refererAccessRule = null;

  @SerializedName("RemoteAuth")
  private RemoteAuthForAddCdnDomainInput remoteAuth = null;

  @SerializedName("RequestBlockRule")
  private RequestBlockRuleForAddCdnDomainInput requestBlockRule = null;

  @SerializedName("RequestHeader")
  private List<RequestHeaderForAddCdnDomainInput> requestHeader = null;

  @SerializedName("ResourceTags")
  private List<ResourceTagForAddCdnDomainInput> resourceTags = null;

  @SerializedName("ResponseHeader")
  private List<ResponseHeaderForAddCdnDomainInput> responseHeader = null;

  @SerializedName("ServiceRegion")
  private String serviceRegion = null;

  @SerializedName("ServiceType")
  private String serviceType = null;

  @SerializedName("SignedUrlAuth")
  private SignedUrlAuthForAddCdnDomainInput signedUrlAuth = null;

  @SerializedName("Timeout")
  private TimeoutForAddCdnDomainInput timeout = null;

  @SerializedName("UaAccessRule")
  private UaAccessRuleForAddCdnDomainInput uaAccessRule = null;

  @SerializedName("UrlNormalize")
  private UrlNormalizeForAddCdnDomainInput urlNormalize = null;

  @SerializedName("VideoDrag")
  private VideoDragForAddCdnDomainInput videoDrag = null;

  public AddCdnDomainRequest areaAccessRule(AreaAccessRuleForAddCdnDomainInput areaAccessRule) {
    this.areaAccessRule = areaAccessRule;
    return this;
  }

   /**
   * Get areaAccessRule
   * @return areaAccessRule
  **/
  @Valid
  @Schema(description = "")
  public AreaAccessRuleForAddCdnDomainInput getAreaAccessRule() {
    return areaAccessRule;
  }

  public void setAreaAccessRule(AreaAccessRuleForAddCdnDomainInput areaAccessRule) {
    this.areaAccessRule = areaAccessRule;
  }

  public AddCdnDomainRequest bandwidthLimit(BandwidthLimitForAddCdnDomainInput bandwidthLimit) {
    this.bandwidthLimit = bandwidthLimit;
    return this;
  }

   /**
   * Get bandwidthLimit
   * @return bandwidthLimit
  **/
  @Valid
  @Schema(description = "")
  public BandwidthLimitForAddCdnDomainInput getBandwidthLimit() {
    return bandwidthLimit;
  }

  public void setBandwidthLimit(BandwidthLimitForAddCdnDomainInput bandwidthLimit) {
    this.bandwidthLimit = bandwidthLimit;
  }

  public AddCdnDomainRequest browserCache(List<BrowserCacheForAddCdnDomainInput> browserCache) {
    this.browserCache = browserCache;
    return this;
  }

  public AddCdnDomainRequest addBrowserCacheItem(BrowserCacheForAddCdnDomainInput browserCacheItem) {
    if (this.browserCache == null) {
      this.browserCache = new ArrayList<BrowserCacheForAddCdnDomainInput>();
    }
    this.browserCache.add(browserCacheItem);
    return this;
  }

   /**
   * Get browserCache
   * @return browserCache
  **/
  @Valid
  @Schema(description = "")
  public List<BrowserCacheForAddCdnDomainInput> getBrowserCache() {
    return browserCache;
  }

  public void setBrowserCache(List<BrowserCacheForAddCdnDomainInput> browserCache) {
    this.browserCache = browserCache;
  }

  public AddCdnDomainRequest cache(List<CacheForAddCdnDomainInput> cache) {
    this.cache = cache;
    return this;
  }

  public AddCdnDomainRequest addCacheItem(CacheForAddCdnDomainInput cacheItem) {
    if (this.cache == null) {
      this.cache = new ArrayList<CacheForAddCdnDomainInput>();
    }
    this.cache.add(cacheItem);
    return this;
  }

   /**
   * Get cache
   * @return cache
  **/
  @Valid
  @Schema(description = "")
  public List<CacheForAddCdnDomainInput> getCache() {
    return cache;
  }

  public void setCache(List<CacheForAddCdnDomainInput> cache) {
    this.cache = cache;
  }

  public AddCdnDomainRequest cacheHost(CacheHostForAddCdnDomainInput cacheHost) {
    this.cacheHost = cacheHost;
    return this;
  }

   /**
   * Get cacheHost
   * @return cacheHost
  **/
  @Valid
  @Schema(description = "")
  public CacheHostForAddCdnDomainInput getCacheHost() {
    return cacheHost;
  }

  public void setCacheHost(CacheHostForAddCdnDomainInput cacheHost) {
    this.cacheHost = cacheHost;
  }

  public AddCdnDomainRequest cacheKey(List<CacheKeyForAddCdnDomainInput> cacheKey) {
    this.cacheKey = cacheKey;
    return this;
  }

  public AddCdnDomainRequest addCacheKeyItem(CacheKeyForAddCdnDomainInput cacheKeyItem) {
    if (this.cacheKey == null) {
      this.cacheKey = new ArrayList<CacheKeyForAddCdnDomainInput>();
    }
    this.cacheKey.add(cacheKeyItem);
    return this;
  }

   /**
   * Get cacheKey
   * @return cacheKey
  **/
  @Valid
  @Schema(description = "")
  public List<CacheKeyForAddCdnDomainInput> getCacheKey() {
    return cacheKey;
  }

  public void setCacheKey(List<CacheKeyForAddCdnDomainInput> cacheKey) {
    this.cacheKey = cacheKey;
  }

  public AddCdnDomainRequest compression(CompressionForAddCdnDomainInput compression) {
    this.compression = compression;
    return this;
  }

   /**
   * Get compression
   * @return compression
  **/
  @Valid
  @Schema(description = "")
  public CompressionForAddCdnDomainInput getCompression() {
    return compression;
  }

  public void setCompression(CompressionForAddCdnDomainInput compression) {
    this.compression = compression;
  }

  public AddCdnDomainRequest conditionalOrigin(ConditionalOriginForAddCdnDomainInput conditionalOrigin) {
    this.conditionalOrigin = conditionalOrigin;
    return this;
  }

   /**
   * Get conditionalOrigin
   * @return conditionalOrigin
  **/
  @Valid
  @Schema(description = "")
  public ConditionalOriginForAddCdnDomainInput getConditionalOrigin() {
    return conditionalOrigin;
  }

  public void setConditionalOrigin(ConditionalOriginForAddCdnDomainInput conditionalOrigin) {
    this.conditionalOrigin = conditionalOrigin;
  }

  public AddCdnDomainRequest customErrorPage(CustomErrorPageForAddCdnDomainInput customErrorPage) {
    this.customErrorPage = customErrorPage;
    return this;
  }

   /**
   * Get customErrorPage
   * @return customErrorPage
  **/
  @Valid
  @Schema(description = "")
  public CustomErrorPageForAddCdnDomainInput getCustomErrorPage() {
    return customErrorPage;
  }

  public void setCustomErrorPage(CustomErrorPageForAddCdnDomainInput customErrorPage) {
    this.customErrorPage = customErrorPage;
  }

  public AddCdnDomainRequest customizeAccessRule(CustomizeAccessRuleForAddCdnDomainInput customizeAccessRule) {
    this.customizeAccessRule = customizeAccessRule;
    return this;
  }

   /**
   * Get customizeAccessRule
   * @return customizeAccessRule
  **/
  @Valid
  @Schema(description = "")
  public CustomizeAccessRuleForAddCdnDomainInput getCustomizeAccessRule() {
    return customizeAccessRule;
  }

  public void setCustomizeAccessRule(CustomizeAccessRuleForAddCdnDomainInput customizeAccessRule) {
    this.customizeAccessRule = customizeAccessRule;
  }

  public AddCdnDomainRequest domain(String domain) {
    this.domain = domain;
    return this;
  }

   /**
   * Get domain
   * @return domain
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getDomain() {
    return domain;
  }

  public void setDomain(String domain) {
    this.domain = domain;
  }

  public AddCdnDomainRequest downloadSpeedLimit(DownloadSpeedLimitForAddCdnDomainInput downloadSpeedLimit) {
    this.downloadSpeedLimit = downloadSpeedLimit;
    return this;
  }

   /**
   * Get downloadSpeedLimit
   * @return downloadSpeedLimit
  **/
  @Valid
  @Schema(description = "")
  public DownloadSpeedLimitForAddCdnDomainInput getDownloadSpeedLimit() {
    return downloadSpeedLimit;
  }

  public void setDownloadSpeedLimit(DownloadSpeedLimitForAddCdnDomainInput downloadSpeedLimit) {
    this.downloadSpeedLimit = downloadSpeedLimit;
  }

  public AddCdnDomainRequest followRedirect(Boolean followRedirect) {
    this.followRedirect = followRedirect;
    return this;
  }

   /**
   * Get followRedirect
   * @return followRedirect
  **/
  @Schema(description = "")
  public Boolean isFollowRedirect() {
    return followRedirect;
  }

  public void setFollowRedirect(Boolean followRedirect) {
    this.followRedirect = followRedirect;
  }

  public AddCdnDomainRequest HTTPS(HTTPSForAddCdnDomainInput HTTPS) {
    this.HTTPS = HTTPS;
    return this;
  }

   /**
   * Get HTTPS
   * @return HTTPS
  **/
  @Valid
  @Schema(description = "")
  public HTTPSForAddCdnDomainInput getHTTPS() {
    return HTTPS;
  }

  public void setHTTPS(HTTPSForAddCdnDomainInput HTTPS) {
    this.HTTPS = HTTPS;
  }

  public AddCdnDomainRequest httpForcedRedirect(HttpForcedRedirectForAddCdnDomainInput httpForcedRedirect) {
    this.httpForcedRedirect = httpForcedRedirect;
    return this;
  }

   /**
   * Get httpForcedRedirect
   * @return httpForcedRedirect
  **/
  @Valid
  @Schema(description = "")
  public HttpForcedRedirectForAddCdnDomainInput getHttpForcedRedirect() {
    return httpForcedRedirect;
  }

  public void setHttpForcedRedirect(HttpForcedRedirectForAddCdnDomainInput httpForcedRedirect) {
    this.httpForcedRedirect = httpForcedRedirect;
  }

  public AddCdnDomainRequest ipv6(IPv6ForAddCdnDomainInput ipv6) {
    this.ipv6 = ipv6;
    return this;
  }

   /**
   * Get ipv6
   * @return ipv6
  **/
  @Valid
  @Schema(description = "")
  public IPv6ForAddCdnDomainInput getIpv6() {
    return ipv6;
  }

  public void setIpv6(IPv6ForAddCdnDomainInput ipv6) {
    this.ipv6 = ipv6;
  }

  public AddCdnDomainRequest ipAccessRule(IpAccessRuleForAddCdnDomainInput ipAccessRule) {
    this.ipAccessRule = ipAccessRule;
    return this;
  }

   /**
   * Get ipAccessRule
   * @return ipAccessRule
  **/
  @Valid
  @Schema(description = "")
  public IpAccessRuleForAddCdnDomainInput getIpAccessRule() {
    return ipAccessRule;
  }

  public void setIpAccessRule(IpAccessRuleForAddCdnDomainInput ipAccessRule) {
    this.ipAccessRule = ipAccessRule;
  }

  public AddCdnDomainRequest ipFreqLimit(IpFreqLimitForAddCdnDomainInput ipFreqLimit) {
    this.ipFreqLimit = ipFreqLimit;
    return this;
  }

   /**
   * Get ipFreqLimit
   * @return ipFreqLimit
  **/
  @Valid
  @Schema(description = "")
  public IpFreqLimitForAddCdnDomainInput getIpFreqLimit() {
    return ipFreqLimit;
  }

  public void setIpFreqLimit(IpFreqLimitForAddCdnDomainInput ipFreqLimit) {
    this.ipFreqLimit = ipFreqLimit;
  }

  public AddCdnDomainRequest methodDeniedRule(MethodDeniedRuleForAddCdnDomainInput methodDeniedRule) {
    this.methodDeniedRule = methodDeniedRule;
    return this;
  }

   /**
   * Get methodDeniedRule
   * @return methodDeniedRule
  **/
  @Valid
  @Schema(description = "")
  public MethodDeniedRuleForAddCdnDomainInput getMethodDeniedRule() {
    return methodDeniedRule;
  }

  public void setMethodDeniedRule(MethodDeniedRuleForAddCdnDomainInput methodDeniedRule) {
    this.methodDeniedRule = methodDeniedRule;
  }

  public AddCdnDomainRequest negativeCache(List<NegativeCacheForAddCdnDomainInput> negativeCache) {
    this.negativeCache = negativeCache;
    return this;
  }

  public AddCdnDomainRequest addNegativeCacheItem(NegativeCacheForAddCdnDomainInput negativeCacheItem) {
    if (this.negativeCache == null) {
      this.negativeCache = new ArrayList<NegativeCacheForAddCdnDomainInput>();
    }
    this.negativeCache.add(negativeCacheItem);
    return this;
  }

   /**
   * Get negativeCache
   * @return negativeCache
  **/
  @Valid
  @Schema(description = "")
  public List<NegativeCacheForAddCdnDomainInput> getNegativeCache() {
    return negativeCache;
  }

  public void setNegativeCache(List<NegativeCacheForAddCdnDomainInput> negativeCache) {
    this.negativeCache = negativeCache;
  }

  public AddCdnDomainRequest origin(List<OriginForAddCdnDomainInput> origin) {
    this.origin = origin;
    return this;
  }

  public AddCdnDomainRequest addOriginItem(OriginForAddCdnDomainInput originItem) {
    if (this.origin == null) {
      this.origin = new ArrayList<OriginForAddCdnDomainInput>();
    }
    this.origin.add(originItem);
    return this;
  }

   /**
   * Get origin
   * @return origin
  **/
  @Valid
  @Schema(description = "")
  public List<OriginForAddCdnDomainInput> getOrigin() {
    return origin;
  }

  public void setOrigin(List<OriginForAddCdnDomainInput> origin) {
    this.origin = origin;
  }

  public AddCdnDomainRequest originAccessRule(OriginAccessRuleForAddCdnDomainInput originAccessRule) {
    this.originAccessRule = originAccessRule;
    return this;
  }

   /**
   * Get originAccessRule
   * @return originAccessRule
  **/
  @Valid
  @Schema(description = "")
  public OriginAccessRuleForAddCdnDomainInput getOriginAccessRule() {
    return originAccessRule;
  }

  public void setOriginAccessRule(OriginAccessRuleForAddCdnDomainInput originAccessRule) {
    this.originAccessRule = originAccessRule;
  }

  public AddCdnDomainRequest originArg(List<OriginArgForAddCdnDomainInput> originArg) {
    this.originArg = originArg;
    return this;
  }

  public AddCdnDomainRequest addOriginArgItem(OriginArgForAddCdnDomainInput originArgItem) {
    if (this.originArg == null) {
      this.originArg = new ArrayList<OriginArgForAddCdnDomainInput>();
    }
    this.originArg.add(originArgItem);
    return this;
  }

   /**
   * Get originArg
   * @return originArg
  **/
  @Valid
  @Schema(description = "")
  public List<OriginArgForAddCdnDomainInput> getOriginArg() {
    return originArg;
  }

  public void setOriginArg(List<OriginArgForAddCdnDomainInput> originArg) {
    this.originArg = originArg;
  }

  public AddCdnDomainRequest originCertCheck(OriginCertCheckForAddCdnDomainInput originCertCheck) {
    this.originCertCheck = originCertCheck;
    return this;
  }

   /**
   * Get originCertCheck
   * @return originCertCheck
  **/
  @Valid
  @Schema(description = "")
  public OriginCertCheckForAddCdnDomainInput getOriginCertCheck() {
    return originCertCheck;
  }

  public void setOriginCertCheck(OriginCertCheckForAddCdnDomainInput originCertCheck) {
    this.originCertCheck = originCertCheck;
  }

  public AddCdnDomainRequest originHost(String originHost) {
    this.originHost = originHost;
    return this;
  }

   /**
   * Get originHost
   * @return originHost
  **/
  @Schema(description = "")
  public String getOriginHost() {
    return originHost;
  }

  public void setOriginHost(String originHost) {
    this.originHost = originHost;
  }

  public AddCdnDomainRequest originIPv6(String originIPv6) {
    this.originIPv6 = originIPv6;
    return this;
  }

   /**
   * Get originIPv6
   * @return originIPv6
  **/
  @Schema(description = "")
  public String getOriginIPv6() {
    return originIPv6;
  }

  public void setOriginIPv6(String originIPv6) {
    this.originIPv6 = originIPv6;
  }

  public AddCdnDomainRequest originProtocol(String originProtocol) {
    this.originProtocol = originProtocol;
    return this;
  }

   /**
   * Get originProtocol
   * @return originProtocol
  **/
  @Schema(description = "")
  public String getOriginProtocol() {
    return originProtocol;
  }

  public void setOriginProtocol(String originProtocol) {
    this.originProtocol = originProtocol;
  }

  public AddCdnDomainRequest originRange(Boolean originRange) {
    this.originRange = originRange;
    return this;
  }

   /**
   * Get originRange
   * @return originRange
  **/
  @Schema(description = "")
  public Boolean isOriginRange() {
    return originRange;
  }

  public void setOriginRange(Boolean originRange) {
    this.originRange = originRange;
  }

  public AddCdnDomainRequest originRetry(OriginRetryForAddCdnDomainInput originRetry) {
    this.originRetry = originRetry;
    return this;
  }

   /**
   * Get originRetry
   * @return originRetry
  **/
  @Valid
  @Schema(description = "")
  public OriginRetryForAddCdnDomainInput getOriginRetry() {
    return originRetry;
  }

  public void setOriginRetry(OriginRetryForAddCdnDomainInput originRetry) {
    this.originRetry = originRetry;
  }

  public AddCdnDomainRequest originRewrite(OriginRewriteForAddCdnDomainInput originRewrite) {
    this.originRewrite = originRewrite;
    return this;
  }

   /**
   * Get originRewrite
   * @return originRewrite
  **/
  @Valid
  @Schema(description = "")
  public OriginRewriteForAddCdnDomainInput getOriginRewrite() {
    return originRewrite;
  }

  public void setOriginRewrite(OriginRewriteForAddCdnDomainInput originRewrite) {
    this.originRewrite = originRewrite;
  }

  public AddCdnDomainRequest originSni(OriginSniForAddCdnDomainInput originSni) {
    this.originSni = originSni;
    return this;
  }

   /**
   * Get originSni
   * @return originSni
  **/
  @Valid
  @Schema(description = "")
  public OriginSniForAddCdnDomainInput getOriginSni() {
    return originSni;
  }

  public void setOriginSni(OriginSniForAddCdnDomainInput originSni) {
    this.originSni = originSni;
  }

  public AddCdnDomainRequest pageOptimization(PageOptimizationForAddCdnDomainInput pageOptimization) {
    this.pageOptimization = pageOptimization;
    return this;
  }

   /**
   * Get pageOptimization
   * @return pageOptimization
  **/
  @Valid
  @Schema(description = "")
  public PageOptimizationForAddCdnDomainInput getPageOptimization() {
    return pageOptimization;
  }

  public void setPageOptimization(PageOptimizationForAddCdnDomainInput pageOptimization) {
    this.pageOptimization = pageOptimization;
  }

  public AddCdnDomainRequest project(String project) {
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @Schema(description = "")
  public String getProject() {
    return project;
  }

  public void setProject(String project) {
    this.project = project;
  }

  public AddCdnDomainRequest quic(QuicForAddCdnDomainInput quic) {
    this.quic = quic;
    return this;
  }

   /**
   * Get quic
   * @return quic
  **/
  @Valid
  @Schema(description = "")
  public QuicForAddCdnDomainInput getQuic() {
    return quic;
  }

  public void setQuic(QuicForAddCdnDomainInput quic) {
    this.quic = quic;
  }

  public AddCdnDomainRequest redirectionRewrite(RedirectionRewriteForAddCdnDomainInput redirectionRewrite) {
    this.redirectionRewrite = redirectionRewrite;
    return this;
  }

   /**
   * Get redirectionRewrite
   * @return redirectionRewrite
  **/
  @Valid
  @Schema(description = "")
  public RedirectionRewriteForAddCdnDomainInput getRedirectionRewrite() {
    return redirectionRewrite;
  }

  public void setRedirectionRewrite(RedirectionRewriteForAddCdnDomainInput redirectionRewrite) {
    this.redirectionRewrite = redirectionRewrite;
  }

  public AddCdnDomainRequest refererAccessRule(RefererAccessRuleForAddCdnDomainInput refererAccessRule) {
    this.refererAccessRule = refererAccessRule;
    return this;
  }

   /**
   * Get refererAccessRule
   * @return refererAccessRule
  **/
  @Valid
  @Schema(description = "")
  public RefererAccessRuleForAddCdnDomainInput getRefererAccessRule() {
    return refererAccessRule;
  }

  public void setRefererAccessRule(RefererAccessRuleForAddCdnDomainInput refererAccessRule) {
    this.refererAccessRule = refererAccessRule;
  }

  public AddCdnDomainRequest remoteAuth(RemoteAuthForAddCdnDomainInput remoteAuth) {
    this.remoteAuth = remoteAuth;
    return this;
  }

   /**
   * Get remoteAuth
   * @return remoteAuth
  **/
  @Valid
  @Schema(description = "")
  public RemoteAuthForAddCdnDomainInput getRemoteAuth() {
    return remoteAuth;
  }

  public void setRemoteAuth(RemoteAuthForAddCdnDomainInput remoteAuth) {
    this.remoteAuth = remoteAuth;
  }

  public AddCdnDomainRequest requestBlockRule(RequestBlockRuleForAddCdnDomainInput requestBlockRule) {
    this.requestBlockRule = requestBlockRule;
    return this;
  }

   /**
   * Get requestBlockRule
   * @return requestBlockRule
  **/
  @Valid
  @Schema(description = "")
  public RequestBlockRuleForAddCdnDomainInput getRequestBlockRule() {
    return requestBlockRule;
  }

  public void setRequestBlockRule(RequestBlockRuleForAddCdnDomainInput requestBlockRule) {
    this.requestBlockRule = requestBlockRule;
  }

  public AddCdnDomainRequest requestHeader(List<RequestHeaderForAddCdnDomainInput> requestHeader) {
    this.requestHeader = requestHeader;
    return this;
  }

  public AddCdnDomainRequest addRequestHeaderItem(RequestHeaderForAddCdnDomainInput requestHeaderItem) {
    if (this.requestHeader == null) {
      this.requestHeader = new ArrayList<RequestHeaderForAddCdnDomainInput>();
    }
    this.requestHeader.add(requestHeaderItem);
    return this;
  }

   /**
   * Get requestHeader
   * @return requestHeader
  **/
  @Valid
  @Schema(description = "")
  public List<RequestHeaderForAddCdnDomainInput> getRequestHeader() {
    return requestHeader;
  }

  public void setRequestHeader(List<RequestHeaderForAddCdnDomainInput> requestHeader) {
    this.requestHeader = requestHeader;
  }

  public AddCdnDomainRequest resourceTags(List<ResourceTagForAddCdnDomainInput> resourceTags) {
    this.resourceTags = resourceTags;
    return this;
  }

  public AddCdnDomainRequest addResourceTagsItem(ResourceTagForAddCdnDomainInput resourceTagsItem) {
    if (this.resourceTags == null) {
      this.resourceTags = new ArrayList<ResourceTagForAddCdnDomainInput>();
    }
    this.resourceTags.add(resourceTagsItem);
    return this;
  }

   /**
   * Get resourceTags
   * @return resourceTags
  **/
  @Valid
  @Schema(description = "")
  public List<ResourceTagForAddCdnDomainInput> getResourceTags() {
    return resourceTags;
  }

  public void setResourceTags(List<ResourceTagForAddCdnDomainInput> resourceTags) {
    this.resourceTags = resourceTags;
  }

  public AddCdnDomainRequest responseHeader(List<ResponseHeaderForAddCdnDomainInput> responseHeader) {
    this.responseHeader = responseHeader;
    return this;
  }

  public AddCdnDomainRequest addResponseHeaderItem(ResponseHeaderForAddCdnDomainInput responseHeaderItem) {
    if (this.responseHeader == null) {
      this.responseHeader = new ArrayList<ResponseHeaderForAddCdnDomainInput>();
    }
    this.responseHeader.add(responseHeaderItem);
    return this;
  }

   /**
   * Get responseHeader
   * @return responseHeader
  **/
  @Valid
  @Schema(description = "")
  public List<ResponseHeaderForAddCdnDomainInput> getResponseHeader() {
    return responseHeader;
  }

  public void setResponseHeader(List<ResponseHeaderForAddCdnDomainInput> responseHeader) {
    this.responseHeader = responseHeader;
  }

  public AddCdnDomainRequest serviceRegion(String serviceRegion) {
    this.serviceRegion = serviceRegion;
    return this;
  }

   /**
   * Get serviceRegion
   * @return serviceRegion
  **/
  @Schema(description = "")
  public String getServiceRegion() {
    return serviceRegion;
  }

  public void setServiceRegion(String serviceRegion) {
    this.serviceRegion = serviceRegion;
  }

  public AddCdnDomainRequest serviceType(String serviceType) {
    this.serviceType = serviceType;
    return this;
  }

   /**
   * Get serviceType
   * @return serviceType
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getServiceType() {
    return serviceType;
  }

  public void setServiceType(String serviceType) {
    this.serviceType = serviceType;
  }

  public AddCdnDomainRequest signedUrlAuth(SignedUrlAuthForAddCdnDomainInput signedUrlAuth) {
    this.signedUrlAuth = signedUrlAuth;
    return this;
  }

   /**
   * Get signedUrlAuth
   * @return signedUrlAuth
  **/
  @Valid
  @Schema(description = "")
  public SignedUrlAuthForAddCdnDomainInput getSignedUrlAuth() {
    return signedUrlAuth;
  }

  public void setSignedUrlAuth(SignedUrlAuthForAddCdnDomainInput signedUrlAuth) {
    this.signedUrlAuth = signedUrlAuth;
  }

  public AddCdnDomainRequest timeout(TimeoutForAddCdnDomainInput timeout) {
    this.timeout = timeout;
    return this;
  }

   /**
   * Get timeout
   * @return timeout
  **/
  @Valid
  @Schema(description = "")
  public TimeoutForAddCdnDomainInput getTimeout() {
    return timeout;
  }

  public void setTimeout(TimeoutForAddCdnDomainInput timeout) {
    this.timeout = timeout;
  }

  public AddCdnDomainRequest uaAccessRule(UaAccessRuleForAddCdnDomainInput uaAccessRule) {
    this.uaAccessRule = uaAccessRule;
    return this;
  }

   /**
   * Get uaAccessRule
   * @return uaAccessRule
  **/
  @Valid
  @Schema(description = "")
  public UaAccessRuleForAddCdnDomainInput getUaAccessRule() {
    return uaAccessRule;
  }

  public void setUaAccessRule(UaAccessRuleForAddCdnDomainInput uaAccessRule) {
    this.uaAccessRule = uaAccessRule;
  }

  public AddCdnDomainRequest urlNormalize(UrlNormalizeForAddCdnDomainInput urlNormalize) {
    this.urlNormalize = urlNormalize;
    return this;
  }

   /**
   * Get urlNormalize
   * @return urlNormalize
  **/
  @Valid
  @Schema(description = "")
  public UrlNormalizeForAddCdnDomainInput getUrlNormalize() {
    return urlNormalize;
  }

  public void setUrlNormalize(UrlNormalizeForAddCdnDomainInput urlNormalize) {
    this.urlNormalize = urlNormalize;
  }

  public AddCdnDomainRequest videoDrag(VideoDragForAddCdnDomainInput videoDrag) {
    this.videoDrag = videoDrag;
    return this;
  }

   /**
   * Get videoDrag
   * @return videoDrag
  **/
  @Valid
  @Schema(description = "")
  public VideoDragForAddCdnDomainInput getVideoDrag() {
    return videoDrag;
  }

  public void setVideoDrag(VideoDragForAddCdnDomainInput videoDrag) {
    this.videoDrag = videoDrag;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddCdnDomainRequest addCdnDomainRequest = (AddCdnDomainRequest) o;
    return Objects.equals(this.areaAccessRule, addCdnDomainRequest.areaAccessRule) &&
        Objects.equals(this.bandwidthLimit, addCdnDomainRequest.bandwidthLimit) &&
        Objects.equals(this.browserCache, addCdnDomainRequest.browserCache) &&
        Objects.equals(this.cache, addCdnDomainRequest.cache) &&
        Objects.equals(this.cacheHost, addCdnDomainRequest.cacheHost) &&
        Objects.equals(this.cacheKey, addCdnDomainRequest.cacheKey) &&
        Objects.equals(this.compression, addCdnDomainRequest.compression) &&
        Objects.equals(this.conditionalOrigin, addCdnDomainRequest.conditionalOrigin) &&
        Objects.equals(this.customErrorPage, addCdnDomainRequest.customErrorPage) &&
        Objects.equals(this.customizeAccessRule, addCdnDomainRequest.customizeAccessRule) &&
        Objects.equals(this.domain, addCdnDomainRequest.domain) &&
        Objects.equals(this.downloadSpeedLimit, addCdnDomainRequest.downloadSpeedLimit) &&
        Objects.equals(this.followRedirect, addCdnDomainRequest.followRedirect) &&
        Objects.equals(this.HTTPS, addCdnDomainRequest.HTTPS) &&
        Objects.equals(this.httpForcedRedirect, addCdnDomainRequest.httpForcedRedirect) &&
        Objects.equals(this.ipv6, addCdnDomainRequest.ipv6) &&
        Objects.equals(this.ipAccessRule, addCdnDomainRequest.ipAccessRule) &&
        Objects.equals(this.ipFreqLimit, addCdnDomainRequest.ipFreqLimit) &&
        Objects.equals(this.methodDeniedRule, addCdnDomainRequest.methodDeniedRule) &&
        Objects.equals(this.negativeCache, addCdnDomainRequest.negativeCache) &&
        Objects.equals(this.origin, addCdnDomainRequest.origin) &&
        Objects.equals(this.originAccessRule, addCdnDomainRequest.originAccessRule) &&
        Objects.equals(this.originArg, addCdnDomainRequest.originArg) &&
        Objects.equals(this.originCertCheck, addCdnDomainRequest.originCertCheck) &&
        Objects.equals(this.originHost, addCdnDomainRequest.originHost) &&
        Objects.equals(this.originIPv6, addCdnDomainRequest.originIPv6) &&
        Objects.equals(this.originProtocol, addCdnDomainRequest.originProtocol) &&
        Objects.equals(this.originRange, addCdnDomainRequest.originRange) &&
        Objects.equals(this.originRetry, addCdnDomainRequest.originRetry) &&
        Objects.equals(this.originRewrite, addCdnDomainRequest.originRewrite) &&
        Objects.equals(this.originSni, addCdnDomainRequest.originSni) &&
        Objects.equals(this.pageOptimization, addCdnDomainRequest.pageOptimization) &&
        Objects.equals(this.project, addCdnDomainRequest.project) &&
        Objects.equals(this.quic, addCdnDomainRequest.quic) &&
        Objects.equals(this.redirectionRewrite, addCdnDomainRequest.redirectionRewrite) &&
        Objects.equals(this.refererAccessRule, addCdnDomainRequest.refererAccessRule) &&
        Objects.equals(this.remoteAuth, addCdnDomainRequest.remoteAuth) &&
        Objects.equals(this.requestBlockRule, addCdnDomainRequest.requestBlockRule) &&
        Objects.equals(this.requestHeader, addCdnDomainRequest.requestHeader) &&
        Objects.equals(this.resourceTags, addCdnDomainRequest.resourceTags) &&
        Objects.equals(this.responseHeader, addCdnDomainRequest.responseHeader) &&
        Objects.equals(this.serviceRegion, addCdnDomainRequest.serviceRegion) &&
        Objects.equals(this.serviceType, addCdnDomainRequest.serviceType) &&
        Objects.equals(this.signedUrlAuth, addCdnDomainRequest.signedUrlAuth) &&
        Objects.equals(this.timeout, addCdnDomainRequest.timeout) &&
        Objects.equals(this.uaAccessRule, addCdnDomainRequest.uaAccessRule) &&
        Objects.equals(this.urlNormalize, addCdnDomainRequest.urlNormalize) &&
        Objects.equals(this.videoDrag, addCdnDomainRequest.videoDrag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(areaAccessRule, bandwidthLimit, browserCache, cache, cacheHost, cacheKey, compression, conditionalOrigin, customErrorPage, customizeAccessRule, domain, downloadSpeedLimit, followRedirect, HTTPS, httpForcedRedirect, ipv6, ipAccessRule, ipFreqLimit, methodDeniedRule, negativeCache, origin, originAccessRule, originArg, originCertCheck, originHost, originIPv6, originProtocol, originRange, originRetry, originRewrite, originSni, pageOptimization, project, quic, redirectionRewrite, refererAccessRule, remoteAuth, requestBlockRule, requestHeader, resourceTags, responseHeader, serviceRegion, serviceType, signedUrlAuth, timeout, uaAccessRule, urlNormalize, videoDrag);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddCdnDomainRequest {\n");
    
    sb.append("    areaAccessRule: ").append(toIndentedString(areaAccessRule)).append("\n");
    sb.append("    bandwidthLimit: ").append(toIndentedString(bandwidthLimit)).append("\n");
    sb.append("    browserCache: ").append(toIndentedString(browserCache)).append("\n");
    sb.append("    cache: ").append(toIndentedString(cache)).append("\n");
    sb.append("    cacheHost: ").append(toIndentedString(cacheHost)).append("\n");
    sb.append("    cacheKey: ").append(toIndentedString(cacheKey)).append("\n");
    sb.append("    compression: ").append(toIndentedString(compression)).append("\n");
    sb.append("    conditionalOrigin: ").append(toIndentedString(conditionalOrigin)).append("\n");
    sb.append("    customErrorPage: ").append(toIndentedString(customErrorPage)).append("\n");
    sb.append("    customizeAccessRule: ").append(toIndentedString(customizeAccessRule)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    downloadSpeedLimit: ").append(toIndentedString(downloadSpeedLimit)).append("\n");
    sb.append("    followRedirect: ").append(toIndentedString(followRedirect)).append("\n");
    sb.append("    HTTPS: ").append(toIndentedString(HTTPS)).append("\n");
    sb.append("    httpForcedRedirect: ").append(toIndentedString(httpForcedRedirect)).append("\n");
    sb.append("    ipv6: ").append(toIndentedString(ipv6)).append("\n");
    sb.append("    ipAccessRule: ").append(toIndentedString(ipAccessRule)).append("\n");
    sb.append("    ipFreqLimit: ").append(toIndentedString(ipFreqLimit)).append("\n");
    sb.append("    methodDeniedRule: ").append(toIndentedString(methodDeniedRule)).append("\n");
    sb.append("    negativeCache: ").append(toIndentedString(negativeCache)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    originAccessRule: ").append(toIndentedString(originAccessRule)).append("\n");
    sb.append("    originArg: ").append(toIndentedString(originArg)).append("\n");
    sb.append("    originCertCheck: ").append(toIndentedString(originCertCheck)).append("\n");
    sb.append("    originHost: ").append(toIndentedString(originHost)).append("\n");
    sb.append("    originIPv6: ").append(toIndentedString(originIPv6)).append("\n");
    sb.append("    originProtocol: ").append(toIndentedString(originProtocol)).append("\n");
    sb.append("    originRange: ").append(toIndentedString(originRange)).append("\n");
    sb.append("    originRetry: ").append(toIndentedString(originRetry)).append("\n");
    sb.append("    originRewrite: ").append(toIndentedString(originRewrite)).append("\n");
    sb.append("    originSni: ").append(toIndentedString(originSni)).append("\n");
    sb.append("    pageOptimization: ").append(toIndentedString(pageOptimization)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    quic: ").append(toIndentedString(quic)).append("\n");
    sb.append("    redirectionRewrite: ").append(toIndentedString(redirectionRewrite)).append("\n");
    sb.append("    refererAccessRule: ").append(toIndentedString(refererAccessRule)).append("\n");
    sb.append("    remoteAuth: ").append(toIndentedString(remoteAuth)).append("\n");
    sb.append("    requestBlockRule: ").append(toIndentedString(requestBlockRule)).append("\n");
    sb.append("    requestHeader: ").append(toIndentedString(requestHeader)).append("\n");
    sb.append("    resourceTags: ").append(toIndentedString(resourceTags)).append("\n");
    sb.append("    responseHeader: ").append(toIndentedString(responseHeader)).append("\n");
    sb.append("    serviceRegion: ").append(toIndentedString(serviceRegion)).append("\n");
    sb.append("    serviceType: ").append(toIndentedString(serviceType)).append("\n");
    sb.append("    signedUrlAuth: ").append(toIndentedString(signedUrlAuth)).append("\n");
    sb.append("    timeout: ").append(toIndentedString(timeout)).append("\n");
    sb.append("    uaAccessRule: ").append(toIndentedString(uaAccessRule)).append("\n");
    sb.append("    urlNormalize: ").append(toIndentedString(urlNormalize)).append("\n");
    sb.append("    videoDrag: ").append(toIndentedString(videoDrag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
