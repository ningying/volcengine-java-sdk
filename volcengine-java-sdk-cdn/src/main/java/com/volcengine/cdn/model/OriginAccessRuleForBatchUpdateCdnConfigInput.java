/*
 * cdn
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.cdn.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * OriginAccessRuleForBatchUpdateCdnConfigInput
 */



public class OriginAccessRuleForBatchUpdateCdnConfigInput {
  @SerializedName("AllowEmpty")
  private Boolean allowEmpty = null;

  @SerializedName("IgnoreCase")
  private Boolean ignoreCase = null;

  @SerializedName("Origins")
  private List<String> origins = null;

  @SerializedName("RuleType")
  private String ruleType = null;

  @SerializedName("Switch")
  private Boolean _switch = null;

  public OriginAccessRuleForBatchUpdateCdnConfigInput allowEmpty(Boolean allowEmpty) {
    this.allowEmpty = allowEmpty;
    return this;
  }

   /**
   * Get allowEmpty
   * @return allowEmpty
  **/
  @Schema(description = "")
  public Boolean isAllowEmpty() {
    return allowEmpty;
  }

  public void setAllowEmpty(Boolean allowEmpty) {
    this.allowEmpty = allowEmpty;
  }

  public OriginAccessRuleForBatchUpdateCdnConfigInput ignoreCase(Boolean ignoreCase) {
    this.ignoreCase = ignoreCase;
    return this;
  }

   /**
   * Get ignoreCase
   * @return ignoreCase
  **/
  @Schema(description = "")
  public Boolean isIgnoreCase() {
    return ignoreCase;
  }

  public void setIgnoreCase(Boolean ignoreCase) {
    this.ignoreCase = ignoreCase;
  }

  public OriginAccessRuleForBatchUpdateCdnConfigInput origins(List<String> origins) {
    this.origins = origins;
    return this;
  }

  public OriginAccessRuleForBatchUpdateCdnConfigInput addOriginsItem(String originsItem) {
    if (this.origins == null) {
      this.origins = new ArrayList<String>();
    }
    this.origins.add(originsItem);
    return this;
  }

   /**
   * Get origins
   * @return origins
  **/
  @Schema(description = "")
  public List<String> getOrigins() {
    return origins;
  }

  public void setOrigins(List<String> origins) {
    this.origins = origins;
  }

  public OriginAccessRuleForBatchUpdateCdnConfigInput ruleType(String ruleType) {
    this.ruleType = ruleType;
    return this;
  }

   /**
   * Get ruleType
   * @return ruleType
  **/
  @Schema(description = "")
  public String getRuleType() {
    return ruleType;
  }

  public void setRuleType(String ruleType) {
    this.ruleType = ruleType;
  }

  public OriginAccessRuleForBatchUpdateCdnConfigInput _switch(Boolean _switch) {
    this._switch = _switch;
    return this;
  }

   /**
   * Get _switch
   * @return _switch
  **/
  @Schema(description = "")
  public Boolean isSwitch() {
    return _switch;
  }

  public void setSwitch(Boolean _switch) {
    this._switch = _switch;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OriginAccessRuleForBatchUpdateCdnConfigInput originAccessRuleForBatchUpdateCdnConfigInput = (OriginAccessRuleForBatchUpdateCdnConfigInput) o;
    return Objects.equals(this.allowEmpty, originAccessRuleForBatchUpdateCdnConfigInput.allowEmpty) &&
        Objects.equals(this.ignoreCase, originAccessRuleForBatchUpdateCdnConfigInput.ignoreCase) &&
        Objects.equals(this.origins, originAccessRuleForBatchUpdateCdnConfigInput.origins) &&
        Objects.equals(this.ruleType, originAccessRuleForBatchUpdateCdnConfigInput.ruleType) &&
        Objects.equals(this._switch, originAccessRuleForBatchUpdateCdnConfigInput._switch);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowEmpty, ignoreCase, origins, ruleType, _switch);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OriginAccessRuleForBatchUpdateCdnConfigInput {\n");
    
    sb.append("    allowEmpty: ").append(toIndentedString(allowEmpty)).append("\n");
    sb.append("    ignoreCase: ").append(toIndentedString(ignoreCase)).append("\n");
    sb.append("    origins: ").append(toIndentedString(origins)).append("\n");
    sb.append("    ruleType: ").append(toIndentedString(ruleType)).append("\n");
    sb.append("    _switch: ").append(toIndentedString(_switch)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
