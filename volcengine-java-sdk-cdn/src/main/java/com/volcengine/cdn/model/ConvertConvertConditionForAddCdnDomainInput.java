/*
 * cdn
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.cdn.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.cdn.model.ConditionGroupForAddCdnDomainInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ConvertConvertConditionForAddCdnDomainInput
 */



public class ConvertConvertConditionForAddCdnDomainInput {
  @SerializedName("ConditionGroups")
  private List<ConditionGroupForAddCdnDomainInput> conditionGroups = null;

  @SerializedName("Connective")
  private String connective = null;

  @SerializedName("IsGroup")
  private Boolean isGroup = null;

  public ConvertConvertConditionForAddCdnDomainInput conditionGroups(List<ConditionGroupForAddCdnDomainInput> conditionGroups) {
    this.conditionGroups = conditionGroups;
    return this;
  }

  public ConvertConvertConditionForAddCdnDomainInput addConditionGroupsItem(ConditionGroupForAddCdnDomainInput conditionGroupsItem) {
    if (this.conditionGroups == null) {
      this.conditionGroups = new ArrayList<ConditionGroupForAddCdnDomainInput>();
    }
    this.conditionGroups.add(conditionGroupsItem);
    return this;
  }

   /**
   * Get conditionGroups
   * @return conditionGroups
  **/
  @Valid
  @Schema(description = "")
  public List<ConditionGroupForAddCdnDomainInput> getConditionGroups() {
    return conditionGroups;
  }

  public void setConditionGroups(List<ConditionGroupForAddCdnDomainInput> conditionGroups) {
    this.conditionGroups = conditionGroups;
  }

  public ConvertConvertConditionForAddCdnDomainInput connective(String connective) {
    this.connective = connective;
    return this;
  }

   /**
   * Get connective
   * @return connective
  **/
  @Schema(description = "")
  public String getConnective() {
    return connective;
  }

  public void setConnective(String connective) {
    this.connective = connective;
  }

  public ConvertConvertConditionForAddCdnDomainInput isGroup(Boolean isGroup) {
    this.isGroup = isGroup;
    return this;
  }

   /**
   * Get isGroup
   * @return isGroup
  **/
  @Schema(description = "")
  public Boolean isIsGroup() {
    return isGroup;
  }

  public void setIsGroup(Boolean isGroup) {
    this.isGroup = isGroup;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConvertConvertConditionForAddCdnDomainInput convertConvertConditionForAddCdnDomainInput = (ConvertConvertConditionForAddCdnDomainInput) o;
    return Objects.equals(this.conditionGroups, convertConvertConditionForAddCdnDomainInput.conditionGroups) &&
        Objects.equals(this.connective, convertConvertConditionForAddCdnDomainInput.connective) &&
        Objects.equals(this.isGroup, convertConvertConditionForAddCdnDomainInput.isGroup);
  }

  @Override
  public int hashCode() {
    return Objects.hash(conditionGroups, connective, isGroup);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConvertConvertConditionForAddCdnDomainInput {\n");
    
    sb.append("    conditionGroups: ").append(toIndentedString(conditionGroups)).append("\n");
    sb.append("    connective: ").append(toIndentedString(connective)).append("\n");
    sb.append("    isGroup: ").append(toIndentedString(isGroup)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
