/*
 * cdn
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.cdn.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.cdn.model.AreaAccessRuleForUpdateCdnConfigInput;
import com.volcengine.cdn.model.BandwidthLimitForUpdateCdnConfigInput;
import com.volcengine.cdn.model.BrowserCacheForUpdateCdnConfigInput;
import com.volcengine.cdn.model.CacheForUpdateCdnConfigInput;
import com.volcengine.cdn.model.CacheHostForUpdateCdnConfigInput;
import com.volcengine.cdn.model.CacheKeyForUpdateCdnConfigInput;
import com.volcengine.cdn.model.CompressionForUpdateCdnConfigInput;
import com.volcengine.cdn.model.ConditionalOriginForUpdateCdnConfigInput;
import com.volcengine.cdn.model.CustomErrorPageForUpdateCdnConfigInput;
import com.volcengine.cdn.model.CustomizeAccessRuleForUpdateCdnConfigInput;
import com.volcengine.cdn.model.DownloadSpeedLimitForUpdateCdnConfigInput;
import com.volcengine.cdn.model.HTTPSForUpdateCdnConfigInput;
import com.volcengine.cdn.model.HttpForcedRedirectForUpdateCdnConfigInput;
import com.volcengine.cdn.model.IPv6ForUpdateCdnConfigInput;
import com.volcengine.cdn.model.IpAccessRuleForUpdateCdnConfigInput;
import com.volcengine.cdn.model.IpFreqLimitForUpdateCdnConfigInput;
import com.volcengine.cdn.model.MethodDeniedRuleForUpdateCdnConfigInput;
import com.volcengine.cdn.model.NegativeCacheForUpdateCdnConfigInput;
import com.volcengine.cdn.model.OriginAccessRuleForUpdateCdnConfigInput;
import com.volcengine.cdn.model.OriginArgForUpdateCdnConfigInput;
import com.volcengine.cdn.model.OriginCertCheckForUpdateCdnConfigInput;
import com.volcengine.cdn.model.OriginForUpdateCdnConfigInput;
import com.volcengine.cdn.model.OriginRetryForUpdateCdnConfigInput;
import com.volcengine.cdn.model.OriginRewriteForUpdateCdnConfigInput;
import com.volcengine.cdn.model.OriginSniForUpdateCdnConfigInput;
import com.volcengine.cdn.model.PageOptimizationForUpdateCdnConfigInput;
import com.volcengine.cdn.model.QuicForUpdateCdnConfigInput;
import com.volcengine.cdn.model.RedirectionRewriteForUpdateCdnConfigInput;
import com.volcengine.cdn.model.RefererAccessRuleForUpdateCdnConfigInput;
import com.volcengine.cdn.model.RemoteAuthForUpdateCdnConfigInput;
import com.volcengine.cdn.model.RequestBlockRuleForUpdateCdnConfigInput;
import com.volcengine.cdn.model.RequestHeaderForUpdateCdnConfigInput;
import com.volcengine.cdn.model.ResponseHeaderForUpdateCdnConfigInput;
import com.volcengine.cdn.model.SignedUrlAuthForUpdateCdnConfigInput;
import com.volcengine.cdn.model.TimeoutForUpdateCdnConfigInput;
import com.volcengine.cdn.model.UaAccessRuleForUpdateCdnConfigInput;
import com.volcengine.cdn.model.UrlNormalizeForUpdateCdnConfigInput;
import com.volcengine.cdn.model.VideoDragForUpdateCdnConfigInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * UpdateCdnConfigRequest
 */



public class UpdateCdnConfigRequest {
  @SerializedName("AreaAccessRule")
  private AreaAccessRuleForUpdateCdnConfigInput areaAccessRule = null;

  @SerializedName("BandwidthLimit")
  private BandwidthLimitForUpdateCdnConfigInput bandwidthLimit = null;

  @SerializedName("BrowserCache")
  private List<BrowserCacheForUpdateCdnConfigInput> browserCache = null;

  @SerializedName("Cache")
  private List<CacheForUpdateCdnConfigInput> cache = null;

  @SerializedName("CacheHost")
  private CacheHostForUpdateCdnConfigInput cacheHost = null;

  @SerializedName("CacheKey")
  private List<CacheKeyForUpdateCdnConfigInput> cacheKey = null;

  @SerializedName("Compression")
  private CompressionForUpdateCdnConfigInput compression = null;

  @SerializedName("ConditionalOrigin")
  private ConditionalOriginForUpdateCdnConfigInput conditionalOrigin = null;

  @SerializedName("CustomErrorPage")
  private CustomErrorPageForUpdateCdnConfigInput customErrorPage = null;

  @SerializedName("CustomizeAccessRule")
  private CustomizeAccessRuleForUpdateCdnConfigInput customizeAccessRule = null;

  @SerializedName("Domain")
  private String domain = null;

  @SerializedName("DownloadSpeedLimit")
  private DownloadSpeedLimitForUpdateCdnConfigInput downloadSpeedLimit = null;

  @SerializedName("FollowRedirect")
  private Boolean followRedirect = null;

  @SerializedName("HTTPS")
  private HTTPSForUpdateCdnConfigInput HTTPS = null;

  @SerializedName("HttpForcedRedirect")
  private HttpForcedRedirectForUpdateCdnConfigInput httpForcedRedirect = null;

  @SerializedName("IPv6")
  private IPv6ForUpdateCdnConfigInput ipv6 = null;

  @SerializedName("IpAccessRule")
  private IpAccessRuleForUpdateCdnConfigInput ipAccessRule = null;

  @SerializedName("IpFreqLimit")
  private IpFreqLimitForUpdateCdnConfigInput ipFreqLimit = null;

  @SerializedName("MethodDeniedRule")
  private MethodDeniedRuleForUpdateCdnConfigInput methodDeniedRule = null;

  @SerializedName("NegativeCache")
  private List<NegativeCacheForUpdateCdnConfigInput> negativeCache = null;

  @SerializedName("Origin")
  private List<OriginForUpdateCdnConfigInput> origin = null;

  @SerializedName("OriginAccessRule")
  private OriginAccessRuleForUpdateCdnConfigInput originAccessRule = null;

  @SerializedName("OriginArg")
  private List<OriginArgForUpdateCdnConfigInput> originArg = null;

  @SerializedName("OriginCertCheck")
  private OriginCertCheckForUpdateCdnConfigInput originCertCheck = null;

  @SerializedName("OriginHost")
  private String originHost = null;

  @SerializedName("OriginIPv6")
  private String originIPv6 = null;

  @SerializedName("OriginProtocol")
  private String originProtocol = null;

  @SerializedName("OriginRange")
  private Boolean originRange = null;

  @SerializedName("OriginRetry")
  private OriginRetryForUpdateCdnConfigInput originRetry = null;

  @SerializedName("OriginRewrite")
  private OriginRewriteForUpdateCdnConfigInput originRewrite = null;

  @SerializedName("OriginSni")
  private OriginSniForUpdateCdnConfigInput originSni = null;

  @SerializedName("PageOptimization")
  private PageOptimizationForUpdateCdnConfigInput pageOptimization = null;

  @SerializedName("Quic")
  private QuicForUpdateCdnConfigInput quic = null;

  @SerializedName("RedirectionRewrite")
  private RedirectionRewriteForUpdateCdnConfigInput redirectionRewrite = null;

  @SerializedName("RefererAccessRule")
  private RefererAccessRuleForUpdateCdnConfigInput refererAccessRule = null;

  @SerializedName("RemoteAuth")
  private RemoteAuthForUpdateCdnConfigInput remoteAuth = null;

  @SerializedName("RequestBlockRule")
  private RequestBlockRuleForUpdateCdnConfigInput requestBlockRule = null;

  @SerializedName("RequestHeader")
  private List<RequestHeaderForUpdateCdnConfigInput> requestHeader = null;

  @SerializedName("ResponseHeader")
  private List<ResponseHeaderForUpdateCdnConfigInput> responseHeader = null;

  @SerializedName("ServiceRegion")
  private String serviceRegion = null;

  @SerializedName("SignedUrlAuth")
  private SignedUrlAuthForUpdateCdnConfigInput signedUrlAuth = null;

  @SerializedName("Timeout")
  private TimeoutForUpdateCdnConfigInput timeout = null;

  @SerializedName("UaAccessRule")
  private UaAccessRuleForUpdateCdnConfigInput uaAccessRule = null;

  @SerializedName("UrlNormalize")
  private UrlNormalizeForUpdateCdnConfigInput urlNormalize = null;

  @SerializedName("VideoDrag")
  private VideoDragForUpdateCdnConfigInput videoDrag = null;

  public UpdateCdnConfigRequest areaAccessRule(AreaAccessRuleForUpdateCdnConfigInput areaAccessRule) {
    this.areaAccessRule = areaAccessRule;
    return this;
  }

   /**
   * Get areaAccessRule
   * @return areaAccessRule
  **/
  @Valid
  @Schema(description = "")
  public AreaAccessRuleForUpdateCdnConfigInput getAreaAccessRule() {
    return areaAccessRule;
  }

  public void setAreaAccessRule(AreaAccessRuleForUpdateCdnConfigInput areaAccessRule) {
    this.areaAccessRule = areaAccessRule;
  }

  public UpdateCdnConfigRequest bandwidthLimit(BandwidthLimitForUpdateCdnConfigInput bandwidthLimit) {
    this.bandwidthLimit = bandwidthLimit;
    return this;
  }

   /**
   * Get bandwidthLimit
   * @return bandwidthLimit
  **/
  @Valid
  @Schema(description = "")
  public BandwidthLimitForUpdateCdnConfigInput getBandwidthLimit() {
    return bandwidthLimit;
  }

  public void setBandwidthLimit(BandwidthLimitForUpdateCdnConfigInput bandwidthLimit) {
    this.bandwidthLimit = bandwidthLimit;
  }

  public UpdateCdnConfigRequest browserCache(List<BrowserCacheForUpdateCdnConfigInput> browserCache) {
    this.browserCache = browserCache;
    return this;
  }

  public UpdateCdnConfigRequest addBrowserCacheItem(BrowserCacheForUpdateCdnConfigInput browserCacheItem) {
    if (this.browserCache == null) {
      this.browserCache = new ArrayList<BrowserCacheForUpdateCdnConfigInput>();
    }
    this.browserCache.add(browserCacheItem);
    return this;
  }

   /**
   * Get browserCache
   * @return browserCache
  **/
  @Valid
  @Schema(description = "")
  public List<BrowserCacheForUpdateCdnConfigInput> getBrowserCache() {
    return browserCache;
  }

  public void setBrowserCache(List<BrowserCacheForUpdateCdnConfigInput> browserCache) {
    this.browserCache = browserCache;
  }

  public UpdateCdnConfigRequest cache(List<CacheForUpdateCdnConfigInput> cache) {
    this.cache = cache;
    return this;
  }

  public UpdateCdnConfigRequest addCacheItem(CacheForUpdateCdnConfigInput cacheItem) {
    if (this.cache == null) {
      this.cache = new ArrayList<CacheForUpdateCdnConfigInput>();
    }
    this.cache.add(cacheItem);
    return this;
  }

   /**
   * Get cache
   * @return cache
  **/
  @Valid
  @Schema(description = "")
  public List<CacheForUpdateCdnConfigInput> getCache() {
    return cache;
  }

  public void setCache(List<CacheForUpdateCdnConfigInput> cache) {
    this.cache = cache;
  }

  public UpdateCdnConfigRequest cacheHost(CacheHostForUpdateCdnConfigInput cacheHost) {
    this.cacheHost = cacheHost;
    return this;
  }

   /**
   * Get cacheHost
   * @return cacheHost
  **/
  @Valid
  @Schema(description = "")
  public CacheHostForUpdateCdnConfigInput getCacheHost() {
    return cacheHost;
  }

  public void setCacheHost(CacheHostForUpdateCdnConfigInput cacheHost) {
    this.cacheHost = cacheHost;
  }

  public UpdateCdnConfigRequest cacheKey(List<CacheKeyForUpdateCdnConfigInput> cacheKey) {
    this.cacheKey = cacheKey;
    return this;
  }

  public UpdateCdnConfigRequest addCacheKeyItem(CacheKeyForUpdateCdnConfigInput cacheKeyItem) {
    if (this.cacheKey == null) {
      this.cacheKey = new ArrayList<CacheKeyForUpdateCdnConfigInput>();
    }
    this.cacheKey.add(cacheKeyItem);
    return this;
  }

   /**
   * Get cacheKey
   * @return cacheKey
  **/
  @Valid
  @Schema(description = "")
  public List<CacheKeyForUpdateCdnConfigInput> getCacheKey() {
    return cacheKey;
  }

  public void setCacheKey(List<CacheKeyForUpdateCdnConfigInput> cacheKey) {
    this.cacheKey = cacheKey;
  }

  public UpdateCdnConfigRequest compression(CompressionForUpdateCdnConfigInput compression) {
    this.compression = compression;
    return this;
  }

   /**
   * Get compression
   * @return compression
  **/
  @Valid
  @Schema(description = "")
  public CompressionForUpdateCdnConfigInput getCompression() {
    return compression;
  }

  public void setCompression(CompressionForUpdateCdnConfigInput compression) {
    this.compression = compression;
  }

  public UpdateCdnConfigRequest conditionalOrigin(ConditionalOriginForUpdateCdnConfigInput conditionalOrigin) {
    this.conditionalOrigin = conditionalOrigin;
    return this;
  }

   /**
   * Get conditionalOrigin
   * @return conditionalOrigin
  **/
  @Valid
  @Schema(description = "")
  public ConditionalOriginForUpdateCdnConfigInput getConditionalOrigin() {
    return conditionalOrigin;
  }

  public void setConditionalOrigin(ConditionalOriginForUpdateCdnConfigInput conditionalOrigin) {
    this.conditionalOrigin = conditionalOrigin;
  }

  public UpdateCdnConfigRequest customErrorPage(CustomErrorPageForUpdateCdnConfigInput customErrorPage) {
    this.customErrorPage = customErrorPage;
    return this;
  }

   /**
   * Get customErrorPage
   * @return customErrorPage
  **/
  @Valid
  @Schema(description = "")
  public CustomErrorPageForUpdateCdnConfigInput getCustomErrorPage() {
    return customErrorPage;
  }

  public void setCustomErrorPage(CustomErrorPageForUpdateCdnConfigInput customErrorPage) {
    this.customErrorPage = customErrorPage;
  }

  public UpdateCdnConfigRequest customizeAccessRule(CustomizeAccessRuleForUpdateCdnConfigInput customizeAccessRule) {
    this.customizeAccessRule = customizeAccessRule;
    return this;
  }

   /**
   * Get customizeAccessRule
   * @return customizeAccessRule
  **/
  @Valid
  @Schema(description = "")
  public CustomizeAccessRuleForUpdateCdnConfigInput getCustomizeAccessRule() {
    return customizeAccessRule;
  }

  public void setCustomizeAccessRule(CustomizeAccessRuleForUpdateCdnConfigInput customizeAccessRule) {
    this.customizeAccessRule = customizeAccessRule;
  }

  public UpdateCdnConfigRequest domain(String domain) {
    this.domain = domain;
    return this;
  }

   /**
   * Get domain
   * @return domain
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getDomain() {
    return domain;
  }

  public void setDomain(String domain) {
    this.domain = domain;
  }

  public UpdateCdnConfigRequest downloadSpeedLimit(DownloadSpeedLimitForUpdateCdnConfigInput downloadSpeedLimit) {
    this.downloadSpeedLimit = downloadSpeedLimit;
    return this;
  }

   /**
   * Get downloadSpeedLimit
   * @return downloadSpeedLimit
  **/
  @Valid
  @Schema(description = "")
  public DownloadSpeedLimitForUpdateCdnConfigInput getDownloadSpeedLimit() {
    return downloadSpeedLimit;
  }

  public void setDownloadSpeedLimit(DownloadSpeedLimitForUpdateCdnConfigInput downloadSpeedLimit) {
    this.downloadSpeedLimit = downloadSpeedLimit;
  }

  public UpdateCdnConfigRequest followRedirect(Boolean followRedirect) {
    this.followRedirect = followRedirect;
    return this;
  }

   /**
   * Get followRedirect
   * @return followRedirect
  **/
  @Schema(description = "")
  public Boolean isFollowRedirect() {
    return followRedirect;
  }

  public void setFollowRedirect(Boolean followRedirect) {
    this.followRedirect = followRedirect;
  }

  public UpdateCdnConfigRequest HTTPS(HTTPSForUpdateCdnConfigInput HTTPS) {
    this.HTTPS = HTTPS;
    return this;
  }

   /**
   * Get HTTPS
   * @return HTTPS
  **/
  @Valid
  @Schema(description = "")
  public HTTPSForUpdateCdnConfigInput getHTTPS() {
    return HTTPS;
  }

  public void setHTTPS(HTTPSForUpdateCdnConfigInput HTTPS) {
    this.HTTPS = HTTPS;
  }

  public UpdateCdnConfigRequest httpForcedRedirect(HttpForcedRedirectForUpdateCdnConfigInput httpForcedRedirect) {
    this.httpForcedRedirect = httpForcedRedirect;
    return this;
  }

   /**
   * Get httpForcedRedirect
   * @return httpForcedRedirect
  **/
  @Valid
  @Schema(description = "")
  public HttpForcedRedirectForUpdateCdnConfigInput getHttpForcedRedirect() {
    return httpForcedRedirect;
  }

  public void setHttpForcedRedirect(HttpForcedRedirectForUpdateCdnConfigInput httpForcedRedirect) {
    this.httpForcedRedirect = httpForcedRedirect;
  }

  public UpdateCdnConfigRequest ipv6(IPv6ForUpdateCdnConfigInput ipv6) {
    this.ipv6 = ipv6;
    return this;
  }

   /**
   * Get ipv6
   * @return ipv6
  **/
  @Valid
  @Schema(description = "")
  public IPv6ForUpdateCdnConfigInput getIpv6() {
    return ipv6;
  }

  public void setIpv6(IPv6ForUpdateCdnConfigInput ipv6) {
    this.ipv6 = ipv6;
  }

  public UpdateCdnConfigRequest ipAccessRule(IpAccessRuleForUpdateCdnConfigInput ipAccessRule) {
    this.ipAccessRule = ipAccessRule;
    return this;
  }

   /**
   * Get ipAccessRule
   * @return ipAccessRule
  **/
  @Valid
  @Schema(description = "")
  public IpAccessRuleForUpdateCdnConfigInput getIpAccessRule() {
    return ipAccessRule;
  }

  public void setIpAccessRule(IpAccessRuleForUpdateCdnConfigInput ipAccessRule) {
    this.ipAccessRule = ipAccessRule;
  }

  public UpdateCdnConfigRequest ipFreqLimit(IpFreqLimitForUpdateCdnConfigInput ipFreqLimit) {
    this.ipFreqLimit = ipFreqLimit;
    return this;
  }

   /**
   * Get ipFreqLimit
   * @return ipFreqLimit
  **/
  @Valid
  @Schema(description = "")
  public IpFreqLimitForUpdateCdnConfigInput getIpFreqLimit() {
    return ipFreqLimit;
  }

  public void setIpFreqLimit(IpFreqLimitForUpdateCdnConfigInput ipFreqLimit) {
    this.ipFreqLimit = ipFreqLimit;
  }

  public UpdateCdnConfigRequest methodDeniedRule(MethodDeniedRuleForUpdateCdnConfigInput methodDeniedRule) {
    this.methodDeniedRule = methodDeniedRule;
    return this;
  }

   /**
   * Get methodDeniedRule
   * @return methodDeniedRule
  **/
  @Valid
  @Schema(description = "")
  public MethodDeniedRuleForUpdateCdnConfigInput getMethodDeniedRule() {
    return methodDeniedRule;
  }

  public void setMethodDeniedRule(MethodDeniedRuleForUpdateCdnConfigInput methodDeniedRule) {
    this.methodDeniedRule = methodDeniedRule;
  }

  public UpdateCdnConfigRequest negativeCache(List<NegativeCacheForUpdateCdnConfigInput> negativeCache) {
    this.negativeCache = negativeCache;
    return this;
  }

  public UpdateCdnConfigRequest addNegativeCacheItem(NegativeCacheForUpdateCdnConfigInput negativeCacheItem) {
    if (this.negativeCache == null) {
      this.negativeCache = new ArrayList<NegativeCacheForUpdateCdnConfigInput>();
    }
    this.negativeCache.add(negativeCacheItem);
    return this;
  }

   /**
   * Get negativeCache
   * @return negativeCache
  **/
  @Valid
  @Schema(description = "")
  public List<NegativeCacheForUpdateCdnConfigInput> getNegativeCache() {
    return negativeCache;
  }

  public void setNegativeCache(List<NegativeCacheForUpdateCdnConfigInput> negativeCache) {
    this.negativeCache = negativeCache;
  }

  public UpdateCdnConfigRequest origin(List<OriginForUpdateCdnConfigInput> origin) {
    this.origin = origin;
    return this;
  }

  public UpdateCdnConfigRequest addOriginItem(OriginForUpdateCdnConfigInput originItem) {
    if (this.origin == null) {
      this.origin = new ArrayList<OriginForUpdateCdnConfigInput>();
    }
    this.origin.add(originItem);
    return this;
  }

   /**
   * Get origin
   * @return origin
  **/
  @Valid
  @Schema(description = "")
  public List<OriginForUpdateCdnConfigInput> getOrigin() {
    return origin;
  }

  public void setOrigin(List<OriginForUpdateCdnConfigInput> origin) {
    this.origin = origin;
  }

  public UpdateCdnConfigRequest originAccessRule(OriginAccessRuleForUpdateCdnConfigInput originAccessRule) {
    this.originAccessRule = originAccessRule;
    return this;
  }

   /**
   * Get originAccessRule
   * @return originAccessRule
  **/
  @Valid
  @Schema(description = "")
  public OriginAccessRuleForUpdateCdnConfigInput getOriginAccessRule() {
    return originAccessRule;
  }

  public void setOriginAccessRule(OriginAccessRuleForUpdateCdnConfigInput originAccessRule) {
    this.originAccessRule = originAccessRule;
  }

  public UpdateCdnConfigRequest originArg(List<OriginArgForUpdateCdnConfigInput> originArg) {
    this.originArg = originArg;
    return this;
  }

  public UpdateCdnConfigRequest addOriginArgItem(OriginArgForUpdateCdnConfigInput originArgItem) {
    if (this.originArg == null) {
      this.originArg = new ArrayList<OriginArgForUpdateCdnConfigInput>();
    }
    this.originArg.add(originArgItem);
    return this;
  }

   /**
   * Get originArg
   * @return originArg
  **/
  @Valid
  @Schema(description = "")
  public List<OriginArgForUpdateCdnConfigInput> getOriginArg() {
    return originArg;
  }

  public void setOriginArg(List<OriginArgForUpdateCdnConfigInput> originArg) {
    this.originArg = originArg;
  }

  public UpdateCdnConfigRequest originCertCheck(OriginCertCheckForUpdateCdnConfigInput originCertCheck) {
    this.originCertCheck = originCertCheck;
    return this;
  }

   /**
   * Get originCertCheck
   * @return originCertCheck
  **/
  @Valid
  @Schema(description = "")
  public OriginCertCheckForUpdateCdnConfigInput getOriginCertCheck() {
    return originCertCheck;
  }

  public void setOriginCertCheck(OriginCertCheckForUpdateCdnConfigInput originCertCheck) {
    this.originCertCheck = originCertCheck;
  }

  public UpdateCdnConfigRequest originHost(String originHost) {
    this.originHost = originHost;
    return this;
  }

   /**
   * Get originHost
   * @return originHost
  **/
  @Schema(description = "")
  public String getOriginHost() {
    return originHost;
  }

  public void setOriginHost(String originHost) {
    this.originHost = originHost;
  }

  public UpdateCdnConfigRequest originIPv6(String originIPv6) {
    this.originIPv6 = originIPv6;
    return this;
  }

   /**
   * Get originIPv6
   * @return originIPv6
  **/
  @Schema(description = "")
  public String getOriginIPv6() {
    return originIPv6;
  }

  public void setOriginIPv6(String originIPv6) {
    this.originIPv6 = originIPv6;
  }

  public UpdateCdnConfigRequest originProtocol(String originProtocol) {
    this.originProtocol = originProtocol;
    return this;
  }

   /**
   * Get originProtocol
   * @return originProtocol
  **/
  @Schema(description = "")
  public String getOriginProtocol() {
    return originProtocol;
  }

  public void setOriginProtocol(String originProtocol) {
    this.originProtocol = originProtocol;
  }

  public UpdateCdnConfigRequest originRange(Boolean originRange) {
    this.originRange = originRange;
    return this;
  }

   /**
   * Get originRange
   * @return originRange
  **/
  @Schema(description = "")
  public Boolean isOriginRange() {
    return originRange;
  }

  public void setOriginRange(Boolean originRange) {
    this.originRange = originRange;
  }

  public UpdateCdnConfigRequest originRetry(OriginRetryForUpdateCdnConfigInput originRetry) {
    this.originRetry = originRetry;
    return this;
  }

   /**
   * Get originRetry
   * @return originRetry
  **/
  @Valid
  @Schema(description = "")
  public OriginRetryForUpdateCdnConfigInput getOriginRetry() {
    return originRetry;
  }

  public void setOriginRetry(OriginRetryForUpdateCdnConfigInput originRetry) {
    this.originRetry = originRetry;
  }

  public UpdateCdnConfigRequest originRewrite(OriginRewriteForUpdateCdnConfigInput originRewrite) {
    this.originRewrite = originRewrite;
    return this;
  }

   /**
   * Get originRewrite
   * @return originRewrite
  **/
  @Valid
  @Schema(description = "")
  public OriginRewriteForUpdateCdnConfigInput getOriginRewrite() {
    return originRewrite;
  }

  public void setOriginRewrite(OriginRewriteForUpdateCdnConfigInput originRewrite) {
    this.originRewrite = originRewrite;
  }

  public UpdateCdnConfigRequest originSni(OriginSniForUpdateCdnConfigInput originSni) {
    this.originSni = originSni;
    return this;
  }

   /**
   * Get originSni
   * @return originSni
  **/
  @Valid
  @Schema(description = "")
  public OriginSniForUpdateCdnConfigInput getOriginSni() {
    return originSni;
  }

  public void setOriginSni(OriginSniForUpdateCdnConfigInput originSni) {
    this.originSni = originSni;
  }

  public UpdateCdnConfigRequest pageOptimization(PageOptimizationForUpdateCdnConfigInput pageOptimization) {
    this.pageOptimization = pageOptimization;
    return this;
  }

   /**
   * Get pageOptimization
   * @return pageOptimization
  **/
  @Valid
  @Schema(description = "")
  public PageOptimizationForUpdateCdnConfigInput getPageOptimization() {
    return pageOptimization;
  }

  public void setPageOptimization(PageOptimizationForUpdateCdnConfigInput pageOptimization) {
    this.pageOptimization = pageOptimization;
  }

  public UpdateCdnConfigRequest quic(QuicForUpdateCdnConfigInput quic) {
    this.quic = quic;
    return this;
  }

   /**
   * Get quic
   * @return quic
  **/
  @Valid
  @Schema(description = "")
  public QuicForUpdateCdnConfigInput getQuic() {
    return quic;
  }

  public void setQuic(QuicForUpdateCdnConfigInput quic) {
    this.quic = quic;
  }

  public UpdateCdnConfigRequest redirectionRewrite(RedirectionRewriteForUpdateCdnConfigInput redirectionRewrite) {
    this.redirectionRewrite = redirectionRewrite;
    return this;
  }

   /**
   * Get redirectionRewrite
   * @return redirectionRewrite
  **/
  @Valid
  @Schema(description = "")
  public RedirectionRewriteForUpdateCdnConfigInput getRedirectionRewrite() {
    return redirectionRewrite;
  }

  public void setRedirectionRewrite(RedirectionRewriteForUpdateCdnConfigInput redirectionRewrite) {
    this.redirectionRewrite = redirectionRewrite;
  }

  public UpdateCdnConfigRequest refererAccessRule(RefererAccessRuleForUpdateCdnConfigInput refererAccessRule) {
    this.refererAccessRule = refererAccessRule;
    return this;
  }

   /**
   * Get refererAccessRule
   * @return refererAccessRule
  **/
  @Valid
  @Schema(description = "")
  public RefererAccessRuleForUpdateCdnConfigInput getRefererAccessRule() {
    return refererAccessRule;
  }

  public void setRefererAccessRule(RefererAccessRuleForUpdateCdnConfigInput refererAccessRule) {
    this.refererAccessRule = refererAccessRule;
  }

  public UpdateCdnConfigRequest remoteAuth(RemoteAuthForUpdateCdnConfigInput remoteAuth) {
    this.remoteAuth = remoteAuth;
    return this;
  }

   /**
   * Get remoteAuth
   * @return remoteAuth
  **/
  @Valid
  @Schema(description = "")
  public RemoteAuthForUpdateCdnConfigInput getRemoteAuth() {
    return remoteAuth;
  }

  public void setRemoteAuth(RemoteAuthForUpdateCdnConfigInput remoteAuth) {
    this.remoteAuth = remoteAuth;
  }

  public UpdateCdnConfigRequest requestBlockRule(RequestBlockRuleForUpdateCdnConfigInput requestBlockRule) {
    this.requestBlockRule = requestBlockRule;
    return this;
  }

   /**
   * Get requestBlockRule
   * @return requestBlockRule
  **/
  @Valid
  @Schema(description = "")
  public RequestBlockRuleForUpdateCdnConfigInput getRequestBlockRule() {
    return requestBlockRule;
  }

  public void setRequestBlockRule(RequestBlockRuleForUpdateCdnConfigInput requestBlockRule) {
    this.requestBlockRule = requestBlockRule;
  }

  public UpdateCdnConfigRequest requestHeader(List<RequestHeaderForUpdateCdnConfigInput> requestHeader) {
    this.requestHeader = requestHeader;
    return this;
  }

  public UpdateCdnConfigRequest addRequestHeaderItem(RequestHeaderForUpdateCdnConfigInput requestHeaderItem) {
    if (this.requestHeader == null) {
      this.requestHeader = new ArrayList<RequestHeaderForUpdateCdnConfigInput>();
    }
    this.requestHeader.add(requestHeaderItem);
    return this;
  }

   /**
   * Get requestHeader
   * @return requestHeader
  **/
  @Valid
  @Schema(description = "")
  public List<RequestHeaderForUpdateCdnConfigInput> getRequestHeader() {
    return requestHeader;
  }

  public void setRequestHeader(List<RequestHeaderForUpdateCdnConfigInput> requestHeader) {
    this.requestHeader = requestHeader;
  }

  public UpdateCdnConfigRequest responseHeader(List<ResponseHeaderForUpdateCdnConfigInput> responseHeader) {
    this.responseHeader = responseHeader;
    return this;
  }

  public UpdateCdnConfigRequest addResponseHeaderItem(ResponseHeaderForUpdateCdnConfigInput responseHeaderItem) {
    if (this.responseHeader == null) {
      this.responseHeader = new ArrayList<ResponseHeaderForUpdateCdnConfigInput>();
    }
    this.responseHeader.add(responseHeaderItem);
    return this;
  }

   /**
   * Get responseHeader
   * @return responseHeader
  **/
  @Valid
  @Schema(description = "")
  public List<ResponseHeaderForUpdateCdnConfigInput> getResponseHeader() {
    return responseHeader;
  }

  public void setResponseHeader(List<ResponseHeaderForUpdateCdnConfigInput> responseHeader) {
    this.responseHeader = responseHeader;
  }

  public UpdateCdnConfigRequest serviceRegion(String serviceRegion) {
    this.serviceRegion = serviceRegion;
    return this;
  }

   /**
   * Get serviceRegion
   * @return serviceRegion
  **/
  @Schema(description = "")
  public String getServiceRegion() {
    return serviceRegion;
  }

  public void setServiceRegion(String serviceRegion) {
    this.serviceRegion = serviceRegion;
  }

  public UpdateCdnConfigRequest signedUrlAuth(SignedUrlAuthForUpdateCdnConfigInput signedUrlAuth) {
    this.signedUrlAuth = signedUrlAuth;
    return this;
  }

   /**
   * Get signedUrlAuth
   * @return signedUrlAuth
  **/
  @Valid
  @Schema(description = "")
  public SignedUrlAuthForUpdateCdnConfigInput getSignedUrlAuth() {
    return signedUrlAuth;
  }

  public void setSignedUrlAuth(SignedUrlAuthForUpdateCdnConfigInput signedUrlAuth) {
    this.signedUrlAuth = signedUrlAuth;
  }

  public UpdateCdnConfigRequest timeout(TimeoutForUpdateCdnConfigInput timeout) {
    this.timeout = timeout;
    return this;
  }

   /**
   * Get timeout
   * @return timeout
  **/
  @Valid
  @Schema(description = "")
  public TimeoutForUpdateCdnConfigInput getTimeout() {
    return timeout;
  }

  public void setTimeout(TimeoutForUpdateCdnConfigInput timeout) {
    this.timeout = timeout;
  }

  public UpdateCdnConfigRequest uaAccessRule(UaAccessRuleForUpdateCdnConfigInput uaAccessRule) {
    this.uaAccessRule = uaAccessRule;
    return this;
  }

   /**
   * Get uaAccessRule
   * @return uaAccessRule
  **/
  @Valid
  @Schema(description = "")
  public UaAccessRuleForUpdateCdnConfigInput getUaAccessRule() {
    return uaAccessRule;
  }

  public void setUaAccessRule(UaAccessRuleForUpdateCdnConfigInput uaAccessRule) {
    this.uaAccessRule = uaAccessRule;
  }

  public UpdateCdnConfigRequest urlNormalize(UrlNormalizeForUpdateCdnConfigInput urlNormalize) {
    this.urlNormalize = urlNormalize;
    return this;
  }

   /**
   * Get urlNormalize
   * @return urlNormalize
  **/
  @Valid
  @Schema(description = "")
  public UrlNormalizeForUpdateCdnConfigInput getUrlNormalize() {
    return urlNormalize;
  }

  public void setUrlNormalize(UrlNormalizeForUpdateCdnConfigInput urlNormalize) {
    this.urlNormalize = urlNormalize;
  }

  public UpdateCdnConfigRequest videoDrag(VideoDragForUpdateCdnConfigInput videoDrag) {
    this.videoDrag = videoDrag;
    return this;
  }

   /**
   * Get videoDrag
   * @return videoDrag
  **/
  @Valid
  @Schema(description = "")
  public VideoDragForUpdateCdnConfigInput getVideoDrag() {
    return videoDrag;
  }

  public void setVideoDrag(VideoDragForUpdateCdnConfigInput videoDrag) {
    this.videoDrag = videoDrag;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateCdnConfigRequest updateCdnConfigRequest = (UpdateCdnConfigRequest) o;
    return Objects.equals(this.areaAccessRule, updateCdnConfigRequest.areaAccessRule) &&
        Objects.equals(this.bandwidthLimit, updateCdnConfigRequest.bandwidthLimit) &&
        Objects.equals(this.browserCache, updateCdnConfigRequest.browserCache) &&
        Objects.equals(this.cache, updateCdnConfigRequest.cache) &&
        Objects.equals(this.cacheHost, updateCdnConfigRequest.cacheHost) &&
        Objects.equals(this.cacheKey, updateCdnConfigRequest.cacheKey) &&
        Objects.equals(this.compression, updateCdnConfigRequest.compression) &&
        Objects.equals(this.conditionalOrigin, updateCdnConfigRequest.conditionalOrigin) &&
        Objects.equals(this.customErrorPage, updateCdnConfigRequest.customErrorPage) &&
        Objects.equals(this.customizeAccessRule, updateCdnConfigRequest.customizeAccessRule) &&
        Objects.equals(this.domain, updateCdnConfigRequest.domain) &&
        Objects.equals(this.downloadSpeedLimit, updateCdnConfigRequest.downloadSpeedLimit) &&
        Objects.equals(this.followRedirect, updateCdnConfigRequest.followRedirect) &&
        Objects.equals(this.HTTPS, updateCdnConfigRequest.HTTPS) &&
        Objects.equals(this.httpForcedRedirect, updateCdnConfigRequest.httpForcedRedirect) &&
        Objects.equals(this.ipv6, updateCdnConfigRequest.ipv6) &&
        Objects.equals(this.ipAccessRule, updateCdnConfigRequest.ipAccessRule) &&
        Objects.equals(this.ipFreqLimit, updateCdnConfigRequest.ipFreqLimit) &&
        Objects.equals(this.methodDeniedRule, updateCdnConfigRequest.methodDeniedRule) &&
        Objects.equals(this.negativeCache, updateCdnConfigRequest.negativeCache) &&
        Objects.equals(this.origin, updateCdnConfigRequest.origin) &&
        Objects.equals(this.originAccessRule, updateCdnConfigRequest.originAccessRule) &&
        Objects.equals(this.originArg, updateCdnConfigRequest.originArg) &&
        Objects.equals(this.originCertCheck, updateCdnConfigRequest.originCertCheck) &&
        Objects.equals(this.originHost, updateCdnConfigRequest.originHost) &&
        Objects.equals(this.originIPv6, updateCdnConfigRequest.originIPv6) &&
        Objects.equals(this.originProtocol, updateCdnConfigRequest.originProtocol) &&
        Objects.equals(this.originRange, updateCdnConfigRequest.originRange) &&
        Objects.equals(this.originRetry, updateCdnConfigRequest.originRetry) &&
        Objects.equals(this.originRewrite, updateCdnConfigRequest.originRewrite) &&
        Objects.equals(this.originSni, updateCdnConfigRequest.originSni) &&
        Objects.equals(this.pageOptimization, updateCdnConfigRequest.pageOptimization) &&
        Objects.equals(this.quic, updateCdnConfigRequest.quic) &&
        Objects.equals(this.redirectionRewrite, updateCdnConfigRequest.redirectionRewrite) &&
        Objects.equals(this.refererAccessRule, updateCdnConfigRequest.refererAccessRule) &&
        Objects.equals(this.remoteAuth, updateCdnConfigRequest.remoteAuth) &&
        Objects.equals(this.requestBlockRule, updateCdnConfigRequest.requestBlockRule) &&
        Objects.equals(this.requestHeader, updateCdnConfigRequest.requestHeader) &&
        Objects.equals(this.responseHeader, updateCdnConfigRequest.responseHeader) &&
        Objects.equals(this.serviceRegion, updateCdnConfigRequest.serviceRegion) &&
        Objects.equals(this.signedUrlAuth, updateCdnConfigRequest.signedUrlAuth) &&
        Objects.equals(this.timeout, updateCdnConfigRequest.timeout) &&
        Objects.equals(this.uaAccessRule, updateCdnConfigRequest.uaAccessRule) &&
        Objects.equals(this.urlNormalize, updateCdnConfigRequest.urlNormalize) &&
        Objects.equals(this.videoDrag, updateCdnConfigRequest.videoDrag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(areaAccessRule, bandwidthLimit, browserCache, cache, cacheHost, cacheKey, compression, conditionalOrigin, customErrorPage, customizeAccessRule, domain, downloadSpeedLimit, followRedirect, HTTPS, httpForcedRedirect, ipv6, ipAccessRule, ipFreqLimit, methodDeniedRule, negativeCache, origin, originAccessRule, originArg, originCertCheck, originHost, originIPv6, originProtocol, originRange, originRetry, originRewrite, originSni, pageOptimization, quic, redirectionRewrite, refererAccessRule, remoteAuth, requestBlockRule, requestHeader, responseHeader, serviceRegion, signedUrlAuth, timeout, uaAccessRule, urlNormalize, videoDrag);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateCdnConfigRequest {\n");
    
    sb.append("    areaAccessRule: ").append(toIndentedString(areaAccessRule)).append("\n");
    sb.append("    bandwidthLimit: ").append(toIndentedString(bandwidthLimit)).append("\n");
    sb.append("    browserCache: ").append(toIndentedString(browserCache)).append("\n");
    sb.append("    cache: ").append(toIndentedString(cache)).append("\n");
    sb.append("    cacheHost: ").append(toIndentedString(cacheHost)).append("\n");
    sb.append("    cacheKey: ").append(toIndentedString(cacheKey)).append("\n");
    sb.append("    compression: ").append(toIndentedString(compression)).append("\n");
    sb.append("    conditionalOrigin: ").append(toIndentedString(conditionalOrigin)).append("\n");
    sb.append("    customErrorPage: ").append(toIndentedString(customErrorPage)).append("\n");
    sb.append("    customizeAccessRule: ").append(toIndentedString(customizeAccessRule)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    downloadSpeedLimit: ").append(toIndentedString(downloadSpeedLimit)).append("\n");
    sb.append("    followRedirect: ").append(toIndentedString(followRedirect)).append("\n");
    sb.append("    HTTPS: ").append(toIndentedString(HTTPS)).append("\n");
    sb.append("    httpForcedRedirect: ").append(toIndentedString(httpForcedRedirect)).append("\n");
    sb.append("    ipv6: ").append(toIndentedString(ipv6)).append("\n");
    sb.append("    ipAccessRule: ").append(toIndentedString(ipAccessRule)).append("\n");
    sb.append("    ipFreqLimit: ").append(toIndentedString(ipFreqLimit)).append("\n");
    sb.append("    methodDeniedRule: ").append(toIndentedString(methodDeniedRule)).append("\n");
    sb.append("    negativeCache: ").append(toIndentedString(negativeCache)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    originAccessRule: ").append(toIndentedString(originAccessRule)).append("\n");
    sb.append("    originArg: ").append(toIndentedString(originArg)).append("\n");
    sb.append("    originCertCheck: ").append(toIndentedString(originCertCheck)).append("\n");
    sb.append("    originHost: ").append(toIndentedString(originHost)).append("\n");
    sb.append("    originIPv6: ").append(toIndentedString(originIPv6)).append("\n");
    sb.append("    originProtocol: ").append(toIndentedString(originProtocol)).append("\n");
    sb.append("    originRange: ").append(toIndentedString(originRange)).append("\n");
    sb.append("    originRetry: ").append(toIndentedString(originRetry)).append("\n");
    sb.append("    originRewrite: ").append(toIndentedString(originRewrite)).append("\n");
    sb.append("    originSni: ").append(toIndentedString(originSni)).append("\n");
    sb.append("    pageOptimization: ").append(toIndentedString(pageOptimization)).append("\n");
    sb.append("    quic: ").append(toIndentedString(quic)).append("\n");
    sb.append("    redirectionRewrite: ").append(toIndentedString(redirectionRewrite)).append("\n");
    sb.append("    refererAccessRule: ").append(toIndentedString(refererAccessRule)).append("\n");
    sb.append("    remoteAuth: ").append(toIndentedString(remoteAuth)).append("\n");
    sb.append("    requestBlockRule: ").append(toIndentedString(requestBlockRule)).append("\n");
    sb.append("    requestHeader: ").append(toIndentedString(requestHeader)).append("\n");
    sb.append("    responseHeader: ").append(toIndentedString(responseHeader)).append("\n");
    sb.append("    serviceRegion: ").append(toIndentedString(serviceRegion)).append("\n");
    sb.append("    signedUrlAuth: ").append(toIndentedString(signedUrlAuth)).append("\n");
    sb.append("    timeout: ").append(toIndentedString(timeout)).append("\n");
    sb.append("    uaAccessRule: ").append(toIndentedString(uaAccessRule)).append("\n");
    sb.append("    urlNormalize: ").append(toIndentedString(urlNormalize)).append("\n");
    sb.append("    videoDrag: ").append(toIndentedString(videoDrag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
