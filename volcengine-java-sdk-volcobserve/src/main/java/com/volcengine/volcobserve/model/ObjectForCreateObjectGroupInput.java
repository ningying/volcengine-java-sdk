/*
 * volc_observe
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.volcobserve.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ObjectForCreateObjectGroupInput
 */


public class ObjectForCreateObjectGroupInput {
  @SerializedName("Dimensions")
  private Map<String, List<String>> dimensions = null;

  @SerializedName("Id")
  private String id = null;

  @SerializedName("Namespace")
  private String namespace = null;

  @SerializedName("Region")
  private String region = null;

  public ObjectForCreateObjectGroupInput dimensions(Map<String, List<String>> dimensions) {
    this.dimensions = dimensions;
    return this;
  }

  public ObjectForCreateObjectGroupInput putDimensionsItem(String key, List<String> dimensionsItem) {
    if (this.dimensions == null) {
      this.dimensions = new HashMap<String, List<String>>();
    }
    this.dimensions.put(key, dimensionsItem);
    return this;
  }

   /**
   * Get dimensions
   * @return dimensions
  **/
  @Valid
  @Schema(description = "")
  public Map<String, List<String>> getDimensions() {
    return dimensions;
  }

  public void setDimensions(Map<String, List<String>> dimensions) {
    this.dimensions = dimensions;
  }

  public ObjectForCreateObjectGroupInput id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ObjectForCreateObjectGroupInput namespace(String namespace) {
    this.namespace = namespace;
    return this;
  }

   /**
   * Get namespace
   * @return namespace
  **/
  @Schema(description = "")
  public String getNamespace() {
    return namespace;
  }

  public void setNamespace(String namespace) {
    this.namespace = namespace;
  }

  public ObjectForCreateObjectGroupInput region(String region) {
    this.region = region;
    return this;
  }

   /**
   * Get region
   * @return region
  **/
  @Schema(description = "")
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObjectForCreateObjectGroupInput objectForCreateObjectGroupInput = (ObjectForCreateObjectGroupInput) o;
    return Objects.equals(this.dimensions, objectForCreateObjectGroupInput.dimensions) &&
        Objects.equals(this.id, objectForCreateObjectGroupInput.id) &&
        Objects.equals(this.namespace, objectForCreateObjectGroupInput.namespace) &&
        Objects.equals(this.region, objectForCreateObjectGroupInput.region);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dimensions, id, namespace, region);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObjectForCreateObjectGroupInput {\n");
    
    sb.append("    dimensions: ").append(toIndentedString(dimensions)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
