/*
 * rds_mysql_v2
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.rdsmysqlv2.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * PlannedEventForDescribePlannedEventsOutput
 */



public class PlannedEventForDescribePlannedEventsOutput {
  @SerializedName("BusinessImpact")
  private String businessImpact = null;

  @SerializedName("DBEngine")
  private String dbEngine = null;

  @SerializedName("EventAction")
  private String eventAction = null;

  @SerializedName("EventID")
  private String eventID = null;

  @SerializedName("EventName")
  private String eventName = null;

  @SerializedName("EventType")
  private String eventType = null;

  @SerializedName("InstanceId")
  private String instanceId = null;

  @SerializedName("InstanceName")
  private String instanceName = null;

  @SerializedName("IsUrgent")
  private Boolean isUrgent = null;

  @SerializedName("MaxDelayTime")
  private String maxDelayTime = null;

  @SerializedName("OriginBeginTime")
  private String originBeginTime = null;

  @SerializedName("PlannedBeginTime")
  private String plannedBeginTime = null;

  @SerializedName("PlannedEndTime")
  private String plannedEndTime = null;

  @SerializedName("PlannedEventDescription")
  private String plannedEventDescription = null;

  @SerializedName("PlannedEventReason")
  private String plannedEventReason = null;

  @SerializedName("Region")
  private String region = null;

  @SerializedName("Status")
  private String status = null;

  public PlannedEventForDescribePlannedEventsOutput businessImpact(String businessImpact) {
    this.businessImpact = businessImpact;
    return this;
  }

   /**
   * Get businessImpact
   * @return businessImpact
  **/
  @Schema(description = "")
  public String getBusinessImpact() {
    return businessImpact;
  }

  public void setBusinessImpact(String businessImpact) {
    this.businessImpact = businessImpact;
  }

  public PlannedEventForDescribePlannedEventsOutput dbEngine(String dbEngine) {
    this.dbEngine = dbEngine;
    return this;
  }

   /**
   * Get dbEngine
   * @return dbEngine
  **/
  @Schema(description = "")
  public String getDbEngine() {
    return dbEngine;
  }

  public void setDbEngine(String dbEngine) {
    this.dbEngine = dbEngine;
  }

  public PlannedEventForDescribePlannedEventsOutput eventAction(String eventAction) {
    this.eventAction = eventAction;
    return this;
  }

   /**
   * Get eventAction
   * @return eventAction
  **/
  @Schema(description = "")
  public String getEventAction() {
    return eventAction;
  }

  public void setEventAction(String eventAction) {
    this.eventAction = eventAction;
  }

  public PlannedEventForDescribePlannedEventsOutput eventID(String eventID) {
    this.eventID = eventID;
    return this;
  }

   /**
   * Get eventID
   * @return eventID
  **/
  @Schema(description = "")
  public String getEventID() {
    return eventID;
  }

  public void setEventID(String eventID) {
    this.eventID = eventID;
  }

  public PlannedEventForDescribePlannedEventsOutput eventName(String eventName) {
    this.eventName = eventName;
    return this;
  }

   /**
   * Get eventName
   * @return eventName
  **/
  @Schema(description = "")
  public String getEventName() {
    return eventName;
  }

  public void setEventName(String eventName) {
    this.eventName = eventName;
  }

  public PlannedEventForDescribePlannedEventsOutput eventType(String eventType) {
    this.eventType = eventType;
    return this;
  }

   /**
   * Get eventType
   * @return eventType
  **/
  @Schema(description = "")
  public String getEventType() {
    return eventType;
  }

  public void setEventType(String eventType) {
    this.eventType = eventType;
  }

  public PlannedEventForDescribePlannedEventsOutput instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * Get instanceId
   * @return instanceId
  **/
  @Schema(description = "")
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }

  public PlannedEventForDescribePlannedEventsOutput instanceName(String instanceName) {
    this.instanceName = instanceName;
    return this;
  }

   /**
   * Get instanceName
   * @return instanceName
  **/
  @Schema(description = "")
  public String getInstanceName() {
    return instanceName;
  }

  public void setInstanceName(String instanceName) {
    this.instanceName = instanceName;
  }

  public PlannedEventForDescribePlannedEventsOutput isUrgent(Boolean isUrgent) {
    this.isUrgent = isUrgent;
    return this;
  }

   /**
   * Get isUrgent
   * @return isUrgent
  **/
  @Schema(description = "")
  public Boolean isIsUrgent() {
    return isUrgent;
  }

  public void setIsUrgent(Boolean isUrgent) {
    this.isUrgent = isUrgent;
  }

  public PlannedEventForDescribePlannedEventsOutput maxDelayTime(String maxDelayTime) {
    this.maxDelayTime = maxDelayTime;
    return this;
  }

   /**
   * Get maxDelayTime
   * @return maxDelayTime
  **/
  @Schema(description = "")
  public String getMaxDelayTime() {
    return maxDelayTime;
  }

  public void setMaxDelayTime(String maxDelayTime) {
    this.maxDelayTime = maxDelayTime;
  }

  public PlannedEventForDescribePlannedEventsOutput originBeginTime(String originBeginTime) {
    this.originBeginTime = originBeginTime;
    return this;
  }

   /**
   * Get originBeginTime
   * @return originBeginTime
  **/
  @Schema(description = "")
  public String getOriginBeginTime() {
    return originBeginTime;
  }

  public void setOriginBeginTime(String originBeginTime) {
    this.originBeginTime = originBeginTime;
  }

  public PlannedEventForDescribePlannedEventsOutput plannedBeginTime(String plannedBeginTime) {
    this.plannedBeginTime = plannedBeginTime;
    return this;
  }

   /**
   * Get plannedBeginTime
   * @return plannedBeginTime
  **/
  @Schema(description = "")
  public String getPlannedBeginTime() {
    return plannedBeginTime;
  }

  public void setPlannedBeginTime(String plannedBeginTime) {
    this.plannedBeginTime = plannedBeginTime;
  }

  public PlannedEventForDescribePlannedEventsOutput plannedEndTime(String plannedEndTime) {
    this.plannedEndTime = plannedEndTime;
    return this;
  }

   /**
   * Get plannedEndTime
   * @return plannedEndTime
  **/
  @Schema(description = "")
  public String getPlannedEndTime() {
    return plannedEndTime;
  }

  public void setPlannedEndTime(String plannedEndTime) {
    this.plannedEndTime = plannedEndTime;
  }

  public PlannedEventForDescribePlannedEventsOutput plannedEventDescription(String plannedEventDescription) {
    this.plannedEventDescription = plannedEventDescription;
    return this;
  }

   /**
   * Get plannedEventDescription
   * @return plannedEventDescription
  **/
  @Schema(description = "")
  public String getPlannedEventDescription() {
    return plannedEventDescription;
  }

  public void setPlannedEventDescription(String plannedEventDescription) {
    this.plannedEventDescription = plannedEventDescription;
  }

  public PlannedEventForDescribePlannedEventsOutput plannedEventReason(String plannedEventReason) {
    this.plannedEventReason = plannedEventReason;
    return this;
  }

   /**
   * Get plannedEventReason
   * @return plannedEventReason
  **/
  @Schema(description = "")
  public String getPlannedEventReason() {
    return plannedEventReason;
  }

  public void setPlannedEventReason(String plannedEventReason) {
    this.plannedEventReason = plannedEventReason;
  }

  public PlannedEventForDescribePlannedEventsOutput region(String region) {
    this.region = region;
    return this;
  }

   /**
   * Get region
   * @return region
  **/
  @Schema(description = "")
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }

  public PlannedEventForDescribePlannedEventsOutput status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlannedEventForDescribePlannedEventsOutput plannedEventForDescribePlannedEventsOutput = (PlannedEventForDescribePlannedEventsOutput) o;
    return Objects.equals(this.businessImpact, plannedEventForDescribePlannedEventsOutput.businessImpact) &&
        Objects.equals(this.dbEngine, plannedEventForDescribePlannedEventsOutput.dbEngine) &&
        Objects.equals(this.eventAction, plannedEventForDescribePlannedEventsOutput.eventAction) &&
        Objects.equals(this.eventID, plannedEventForDescribePlannedEventsOutput.eventID) &&
        Objects.equals(this.eventName, plannedEventForDescribePlannedEventsOutput.eventName) &&
        Objects.equals(this.eventType, plannedEventForDescribePlannedEventsOutput.eventType) &&
        Objects.equals(this.instanceId, plannedEventForDescribePlannedEventsOutput.instanceId) &&
        Objects.equals(this.instanceName, plannedEventForDescribePlannedEventsOutput.instanceName) &&
        Objects.equals(this.isUrgent, plannedEventForDescribePlannedEventsOutput.isUrgent) &&
        Objects.equals(this.maxDelayTime, plannedEventForDescribePlannedEventsOutput.maxDelayTime) &&
        Objects.equals(this.originBeginTime, plannedEventForDescribePlannedEventsOutput.originBeginTime) &&
        Objects.equals(this.plannedBeginTime, plannedEventForDescribePlannedEventsOutput.plannedBeginTime) &&
        Objects.equals(this.plannedEndTime, plannedEventForDescribePlannedEventsOutput.plannedEndTime) &&
        Objects.equals(this.plannedEventDescription, plannedEventForDescribePlannedEventsOutput.plannedEventDescription) &&
        Objects.equals(this.plannedEventReason, plannedEventForDescribePlannedEventsOutput.plannedEventReason) &&
        Objects.equals(this.region, plannedEventForDescribePlannedEventsOutput.region) &&
        Objects.equals(this.status, plannedEventForDescribePlannedEventsOutput.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(businessImpact, dbEngine, eventAction, eventID, eventName, eventType, instanceId, instanceName, isUrgent, maxDelayTime, originBeginTime, plannedBeginTime, plannedEndTime, plannedEventDescription, plannedEventReason, region, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlannedEventForDescribePlannedEventsOutput {\n");
    
    sb.append("    businessImpact: ").append(toIndentedString(businessImpact)).append("\n");
    sb.append("    dbEngine: ").append(toIndentedString(dbEngine)).append("\n");
    sb.append("    eventAction: ").append(toIndentedString(eventAction)).append("\n");
    sb.append("    eventID: ").append(toIndentedString(eventID)).append("\n");
    sb.append("    eventName: ").append(toIndentedString(eventName)).append("\n");
    sb.append("    eventType: ").append(toIndentedString(eventType)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    instanceName: ").append(toIndentedString(instanceName)).append("\n");
    sb.append("    isUrgent: ").append(toIndentedString(isUrgent)).append("\n");
    sb.append("    maxDelayTime: ").append(toIndentedString(maxDelayTime)).append("\n");
    sb.append("    originBeginTime: ").append(toIndentedString(originBeginTime)).append("\n");
    sb.append("    plannedBeginTime: ").append(toIndentedString(plannedBeginTime)).append("\n");
    sb.append("    plannedEndTime: ").append(toIndentedString(plannedEndTime)).append("\n");
    sb.append("    plannedEventDescription: ").append(toIndentedString(plannedEventDescription)).append("\n");
    sb.append("    plannedEventReason: ").append(toIndentedString(plannedEventReason)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
