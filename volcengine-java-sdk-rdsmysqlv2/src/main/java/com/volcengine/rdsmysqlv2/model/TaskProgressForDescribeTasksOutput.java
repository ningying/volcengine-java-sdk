/*
 * rds_mysql_v2
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.rdsmysqlv2.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.rdsmysqlv2.model.StepExtraInfoForDescribeTasksOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * TaskProgressForDescribeTasksOutput
 */


public class TaskProgressForDescribeTasksOutput {
  @SerializedName("Name")
  private String name = null;

  @SerializedName("StepExtraInfo")
  private List<StepExtraInfoForDescribeTasksOutput> stepExtraInfo = null;

  @SerializedName("StepStatus")
  private String stepStatus = null;

  public TaskProgressForDescribeTasksOutput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public TaskProgressForDescribeTasksOutput stepExtraInfo(List<StepExtraInfoForDescribeTasksOutput> stepExtraInfo) {
    this.stepExtraInfo = stepExtraInfo;
    return this;
  }

  public TaskProgressForDescribeTasksOutput addStepExtraInfoItem(StepExtraInfoForDescribeTasksOutput stepExtraInfoItem) {
    if (this.stepExtraInfo == null) {
      this.stepExtraInfo = new ArrayList<StepExtraInfoForDescribeTasksOutput>();
    }
    this.stepExtraInfo.add(stepExtraInfoItem);
    return this;
  }

   /**
   * Get stepExtraInfo
   * @return stepExtraInfo
  **/
  @Valid
  @Schema(description = "")
  public List<StepExtraInfoForDescribeTasksOutput> getStepExtraInfo() {
    return stepExtraInfo;
  }

  public void setStepExtraInfo(List<StepExtraInfoForDescribeTasksOutput> stepExtraInfo) {
    this.stepExtraInfo = stepExtraInfo;
  }

  public TaskProgressForDescribeTasksOutput stepStatus(String stepStatus) {
    this.stepStatus = stepStatus;
    return this;
  }

   /**
   * Get stepStatus
   * @return stepStatus
  **/
  @Schema(description = "")
  public String getStepStatus() {
    return stepStatus;
  }

  public void setStepStatus(String stepStatus) {
    this.stepStatus = stepStatus;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskProgressForDescribeTasksOutput taskProgressForDescribeTasksOutput = (TaskProgressForDescribeTasksOutput) o;
    return Objects.equals(this.name, taskProgressForDescribeTasksOutput.name) &&
        Objects.equals(this.stepExtraInfo, taskProgressForDescribeTasksOutput.stepExtraInfo) &&
        Objects.equals(this.stepStatus, taskProgressForDescribeTasksOutput.stepStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, stepExtraInfo, stepStatus);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskProgressForDescribeTasksOutput {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    stepExtraInfo: ").append(toIndentedString(stepExtraInfo)).append("\n");
    sb.append("    stepStatus: ").append(toIndentedString(stepStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
