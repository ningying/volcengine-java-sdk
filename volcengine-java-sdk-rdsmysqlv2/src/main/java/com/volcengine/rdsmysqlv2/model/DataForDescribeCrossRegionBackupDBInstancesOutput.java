/*
 * rds_mysql_v2
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.rdsmysqlv2.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DataForDescribeCrossRegionBackupDBInstancesOutput
 */



public class DataForDescribeCrossRegionBackupDBInstancesOutput {
  @SerializedName("BackupEnabled")
  private Boolean backupEnabled = null;

  @SerializedName("DBEngineVersion")
  private String dbEngineVersion = null;

  @SerializedName("InstanceId")
  private String instanceId = null;

  @SerializedName("InstanceName")
  private String instanceName = null;

  @SerializedName("InstanceStatus")
  private String instanceStatus = null;

  @SerializedName("LogBackupEnabled")
  private Boolean logBackupEnabled = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("RegionId")
  private String regionId = null;

  @SerializedName("Retention")
  private Integer retention = null;

  @SerializedName("ServiceEnableTime")
  private String serviceEnableTime = null;

  public DataForDescribeCrossRegionBackupDBInstancesOutput backupEnabled(Boolean backupEnabled) {
    this.backupEnabled = backupEnabled;
    return this;
  }

   /**
   * Get backupEnabled
   * @return backupEnabled
  **/
  @Schema(description = "")
  public Boolean isBackupEnabled() {
    return backupEnabled;
  }

  public void setBackupEnabled(Boolean backupEnabled) {
    this.backupEnabled = backupEnabled;
  }

  public DataForDescribeCrossRegionBackupDBInstancesOutput dbEngineVersion(String dbEngineVersion) {
    this.dbEngineVersion = dbEngineVersion;
    return this;
  }

   /**
   * Get dbEngineVersion
   * @return dbEngineVersion
  **/
  @Schema(description = "")
  public String getDbEngineVersion() {
    return dbEngineVersion;
  }

  public void setDbEngineVersion(String dbEngineVersion) {
    this.dbEngineVersion = dbEngineVersion;
  }

  public DataForDescribeCrossRegionBackupDBInstancesOutput instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * Get instanceId
   * @return instanceId
  **/
  @Schema(description = "")
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }

  public DataForDescribeCrossRegionBackupDBInstancesOutput instanceName(String instanceName) {
    this.instanceName = instanceName;
    return this;
  }

   /**
   * Get instanceName
   * @return instanceName
  **/
  @Schema(description = "")
  public String getInstanceName() {
    return instanceName;
  }

  public void setInstanceName(String instanceName) {
    this.instanceName = instanceName;
  }

  public DataForDescribeCrossRegionBackupDBInstancesOutput instanceStatus(String instanceStatus) {
    this.instanceStatus = instanceStatus;
    return this;
  }

   /**
   * Get instanceStatus
   * @return instanceStatus
  **/
  @Schema(description = "")
  public String getInstanceStatus() {
    return instanceStatus;
  }

  public void setInstanceStatus(String instanceStatus) {
    this.instanceStatus = instanceStatus;
  }

  public DataForDescribeCrossRegionBackupDBInstancesOutput logBackupEnabled(Boolean logBackupEnabled) {
    this.logBackupEnabled = logBackupEnabled;
    return this;
  }

   /**
   * Get logBackupEnabled
   * @return logBackupEnabled
  **/
  @Schema(description = "")
  public Boolean isLogBackupEnabled() {
    return logBackupEnabled;
  }

  public void setLogBackupEnabled(Boolean logBackupEnabled) {
    this.logBackupEnabled = logBackupEnabled;
  }

  public DataForDescribeCrossRegionBackupDBInstancesOutput projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public DataForDescribeCrossRegionBackupDBInstancesOutput regionId(String regionId) {
    this.regionId = regionId;
    return this;
  }

   /**
   * Get regionId
   * @return regionId
  **/
  @Schema(description = "")
  public String getRegionId() {
    return regionId;
  }

  public void setRegionId(String regionId) {
    this.regionId = regionId;
  }

  public DataForDescribeCrossRegionBackupDBInstancesOutput retention(Integer retention) {
    this.retention = retention;
    return this;
  }

   /**
   * Get retention
   * @return retention
  **/
  @Schema(description = "")
  public Integer getRetention() {
    return retention;
  }

  public void setRetention(Integer retention) {
    this.retention = retention;
  }

  public DataForDescribeCrossRegionBackupDBInstancesOutput serviceEnableTime(String serviceEnableTime) {
    this.serviceEnableTime = serviceEnableTime;
    return this;
  }

   /**
   * Get serviceEnableTime
   * @return serviceEnableTime
  **/
  @Schema(description = "")
  public String getServiceEnableTime() {
    return serviceEnableTime;
  }

  public void setServiceEnableTime(String serviceEnableTime) {
    this.serviceEnableTime = serviceEnableTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataForDescribeCrossRegionBackupDBInstancesOutput dataForDescribeCrossRegionBackupDBInstancesOutput = (DataForDescribeCrossRegionBackupDBInstancesOutput) o;
    return Objects.equals(this.backupEnabled, dataForDescribeCrossRegionBackupDBInstancesOutput.backupEnabled) &&
        Objects.equals(this.dbEngineVersion, dataForDescribeCrossRegionBackupDBInstancesOutput.dbEngineVersion) &&
        Objects.equals(this.instanceId, dataForDescribeCrossRegionBackupDBInstancesOutput.instanceId) &&
        Objects.equals(this.instanceName, dataForDescribeCrossRegionBackupDBInstancesOutput.instanceName) &&
        Objects.equals(this.instanceStatus, dataForDescribeCrossRegionBackupDBInstancesOutput.instanceStatus) &&
        Objects.equals(this.logBackupEnabled, dataForDescribeCrossRegionBackupDBInstancesOutput.logBackupEnabled) &&
        Objects.equals(this.projectName, dataForDescribeCrossRegionBackupDBInstancesOutput.projectName) &&
        Objects.equals(this.regionId, dataForDescribeCrossRegionBackupDBInstancesOutput.regionId) &&
        Objects.equals(this.retention, dataForDescribeCrossRegionBackupDBInstancesOutput.retention) &&
        Objects.equals(this.serviceEnableTime, dataForDescribeCrossRegionBackupDBInstancesOutput.serviceEnableTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backupEnabled, dbEngineVersion, instanceId, instanceName, instanceStatus, logBackupEnabled, projectName, regionId, retention, serviceEnableTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataForDescribeCrossRegionBackupDBInstancesOutput {\n");
    
    sb.append("    backupEnabled: ").append(toIndentedString(backupEnabled)).append("\n");
    sb.append("    dbEngineVersion: ").append(toIndentedString(dbEngineVersion)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    instanceName: ").append(toIndentedString(instanceName)).append("\n");
    sb.append("    instanceStatus: ").append(toIndentedString(instanceStatus)).append("\n");
    sb.append("    logBackupEnabled: ").append(toIndentedString(logBackupEnabled)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    regionId: ").append(toIndentedString(regionId)).append("\n");
    sb.append("    retention: ").append(toIndentedString(retention)).append("\n");
    sb.append("    serviceEnableTime: ").append(toIndentedString(serviceEnableTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
