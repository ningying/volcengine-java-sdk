/*
 * rds_mysql_v2
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.rdsmysqlv2.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.rdsmysqlv2.model.DiagnosticsInfoForDescribeDiagnosticsInfosOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeDiagnosticsInfosResponse
 */



public class DescribeDiagnosticsInfosResponse extends com.volcengine.model.AbstractResponse {
  @SerializedName("DiagnosticsInfos")
  private List<DiagnosticsInfoForDescribeDiagnosticsInfosOutput> diagnosticsInfos = null;

  @SerializedName("DiagnosticsTaskStatus")
  private String diagnosticsTaskStatus = null;

  @SerializedName("LastDiagnosticsTime")
  private String lastDiagnosticsTime = null;

  @SerializedName("Total")
  private Integer total = null;

  public DescribeDiagnosticsInfosResponse diagnosticsInfos(List<DiagnosticsInfoForDescribeDiagnosticsInfosOutput> diagnosticsInfos) {
    this.diagnosticsInfos = diagnosticsInfos;
    return this;
  }

  public DescribeDiagnosticsInfosResponse addDiagnosticsInfosItem(DiagnosticsInfoForDescribeDiagnosticsInfosOutput diagnosticsInfosItem) {
    if (this.diagnosticsInfos == null) {
      this.diagnosticsInfos = new ArrayList<DiagnosticsInfoForDescribeDiagnosticsInfosOutput>();
    }
    this.diagnosticsInfos.add(diagnosticsInfosItem);
    return this;
  }

   /**
   * Get diagnosticsInfos
   * @return diagnosticsInfos
  **/
  @Valid
  @Schema(description = "")
  public List<DiagnosticsInfoForDescribeDiagnosticsInfosOutput> getDiagnosticsInfos() {
    return diagnosticsInfos;
  }

  public void setDiagnosticsInfos(List<DiagnosticsInfoForDescribeDiagnosticsInfosOutput> diagnosticsInfos) {
    this.diagnosticsInfos = diagnosticsInfos;
  }

  public DescribeDiagnosticsInfosResponse diagnosticsTaskStatus(String diagnosticsTaskStatus) {
    this.diagnosticsTaskStatus = diagnosticsTaskStatus;
    return this;
  }

   /**
   * Get diagnosticsTaskStatus
   * @return diagnosticsTaskStatus
  **/
  @Schema(description = "")
  public String getDiagnosticsTaskStatus() {
    return diagnosticsTaskStatus;
  }

  public void setDiagnosticsTaskStatus(String diagnosticsTaskStatus) {
    this.diagnosticsTaskStatus = diagnosticsTaskStatus;
  }

  public DescribeDiagnosticsInfosResponse lastDiagnosticsTime(String lastDiagnosticsTime) {
    this.lastDiagnosticsTime = lastDiagnosticsTime;
    return this;
  }

   /**
   * Get lastDiagnosticsTime
   * @return lastDiagnosticsTime
  **/
  @Schema(description = "")
  public String getLastDiagnosticsTime() {
    return lastDiagnosticsTime;
  }

  public void setLastDiagnosticsTime(String lastDiagnosticsTime) {
    this.lastDiagnosticsTime = lastDiagnosticsTime;
  }

  public DescribeDiagnosticsInfosResponse total(Integer total) {
    this.total = total;
    return this;
  }

   /**
   * Get total
   * @return total
  **/
  @Schema(description = "")
  public Integer getTotal() {
    return total;
  }

  public void setTotal(Integer total) {
    this.total = total;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeDiagnosticsInfosResponse describeDiagnosticsInfosResponse = (DescribeDiagnosticsInfosResponse) o;
    return Objects.equals(this.diagnosticsInfos, describeDiagnosticsInfosResponse.diagnosticsInfos) &&
        Objects.equals(this.diagnosticsTaskStatus, describeDiagnosticsInfosResponse.diagnosticsTaskStatus) &&
        Objects.equals(this.lastDiagnosticsTime, describeDiagnosticsInfosResponse.lastDiagnosticsTime) &&
        Objects.equals(this.total, describeDiagnosticsInfosResponse.total);
  }

  @Override
  public int hashCode() {
    return Objects.hash(diagnosticsInfos, diagnosticsTaskStatus, lastDiagnosticsTime, total);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeDiagnosticsInfosResponse {\n");
    
    sb.append("    diagnosticsInfos: ").append(toIndentedString(diagnosticsInfos)).append("\n");
    sb.append("    diagnosticsTaskStatus: ").append(toIndentedString(diagnosticsTaskStatus)).append("\n");
    sb.append("    lastDiagnosticsTime: ").append(toIndentedString(lastDiagnosticsTime)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
