/*
 * mcs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.mcs.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.mcs.model.AssociatedCveForGetRiskOutput;
import com.volcengine.mcs.model.VulnCvssForGetRiskOutput;
import com.volcengine.mcs.model.VulnerableSoftPackageForGetRiskOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * VulnForGetRiskOutput
 */



public class VulnForGetRiskOutput {
  @SerializedName("AffectedAssetsCnt")
  private Long affectedAssetsCnt = null;

  @SerializedName("ApplicableVendors")
  private List<String> applicableVendors = null;

  @SerializedName("AssociatedCves")
  private List<AssociatedCveForGetRiskOutput> associatedCves = null;

  /**
   * Gets or Sets attachedResourceRiskStatus
   */
  @JsonAdapter(AttachedResourceRiskStatusEnum.Adapter.class)
  public enum AttachedResourceRiskStatusEnum {
    @SerializedName("not_detected")
    NOT_DETECTED("not_detected"),
    @SerializedName("passed")
    PASSED("passed"),
    @SerializedName("not_passed")
    NOT_PASSED("not_passed"),
    @SerializedName("exempted")
    EXEMPTED("exempted"),
    @SerializedName("verifying")
    VERIFYING("verifying"),
    @SerializedName("fixing")
    FIXING("fixing");

    private String value;

    AttachedResourceRiskStatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static AttachedResourceRiskStatusEnum fromValue(String input) {
      for (AttachedResourceRiskStatusEnum b : AttachedResourceRiskStatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<AttachedResourceRiskStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AttachedResourceRiskStatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public AttachedResourceRiskStatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return AttachedResourceRiskStatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("AttachedResourceRiskStatus")
  private AttachedResourceRiskStatusEnum attachedResourceRiskStatus = null;

  /**
   * Gets or Sets vulnCategory
   */
  @JsonAdapter(VulnCategoryEnum.Adapter.class)
  public enum VulnCategoryEnum {
    @SerializedName("vuln_type_linux")
    VULN_TYPE_LINUX("vuln_type_linux"),
    @SerializedName("vuln_type_windows")
    VULN_TYPE_WINDOWS("vuln_type_windows"),
    @SerializedName("vuln_type_app")
    VULN_TYPE_APP("vuln_type_app"),
    @SerializedName("vuln_type_web")
    VULN_TYPE_WEB("vuln_type_web"),
    @SerializedName("vuln_type_emg")
    VULN_TYPE_EMG("vuln_type_emg"),
    @SerializedName("vuln_type_unknown")
    VULN_TYPE_UNKNOWN("vuln_type_unknown");

    private String value;

    VulnCategoryEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static VulnCategoryEnum fromValue(String input) {
      for (VulnCategoryEnum b : VulnCategoryEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<VulnCategoryEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final VulnCategoryEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public VulnCategoryEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return VulnCategoryEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("VulnCategory")
  private VulnCategoryEnum vulnCategory = null;

  @SerializedName("VulnCvss")
  private VulnCvssForGetRiskOutput vulnCvss = null;

  @SerializedName("VulnDesc")
  private String vulnDesc = null;

  @SerializedName("VulnSolution")
  private String vulnSolution = null;

  @SerializedName("VulnTitle")
  private String vulnTitle = null;

  @SerializedName("VulnViewID")
  private String vulnViewID = null;

  @SerializedName("VulnerableSoftPackages")
  private List<VulnerableSoftPackageForGetRiskOutput> vulnerableSoftPackages = null;

  public VulnForGetRiskOutput affectedAssetsCnt(Long affectedAssetsCnt) {
    this.affectedAssetsCnt = affectedAssetsCnt;
    return this;
  }

   /**
   * Get affectedAssetsCnt
   * @return affectedAssetsCnt
  **/
  @Schema(description = "")
  public Long getAffectedAssetsCnt() {
    return affectedAssetsCnt;
  }

  public void setAffectedAssetsCnt(Long affectedAssetsCnt) {
    this.affectedAssetsCnt = affectedAssetsCnt;
  }

  public VulnForGetRiskOutput applicableVendors(List<String> applicableVendors) {
    this.applicableVendors = applicableVendors;
    return this;
  }

  public VulnForGetRiskOutput addApplicableVendorsItem(String applicableVendorsItem) {
    if (this.applicableVendors == null) {
      this.applicableVendors = new ArrayList<String>();
    }
    this.applicableVendors.add(applicableVendorsItem);
    return this;
  }

   /**
   * Get applicableVendors
   * @return applicableVendors
  **/
  @Schema(description = "")
  public List<String> getApplicableVendors() {
    return applicableVendors;
  }

  public void setApplicableVendors(List<String> applicableVendors) {
    this.applicableVendors = applicableVendors;
  }

  public VulnForGetRiskOutput associatedCves(List<AssociatedCveForGetRiskOutput> associatedCves) {
    this.associatedCves = associatedCves;
    return this;
  }

  public VulnForGetRiskOutput addAssociatedCvesItem(AssociatedCveForGetRiskOutput associatedCvesItem) {
    if (this.associatedCves == null) {
      this.associatedCves = new ArrayList<AssociatedCveForGetRiskOutput>();
    }
    this.associatedCves.add(associatedCvesItem);
    return this;
  }

   /**
   * Get associatedCves
   * @return associatedCves
  **/
  @Valid
  @Schema(description = "")
  public List<AssociatedCveForGetRiskOutput> getAssociatedCves() {
    return associatedCves;
  }

  public void setAssociatedCves(List<AssociatedCveForGetRiskOutput> associatedCves) {
    this.associatedCves = associatedCves;
  }

  public VulnForGetRiskOutput attachedResourceRiskStatus(AttachedResourceRiskStatusEnum attachedResourceRiskStatus) {
    this.attachedResourceRiskStatus = attachedResourceRiskStatus;
    return this;
  }

   /**
   * Get attachedResourceRiskStatus
   * @return attachedResourceRiskStatus
  **/
  @Schema(description = "")
  public AttachedResourceRiskStatusEnum getAttachedResourceRiskStatus() {
    return attachedResourceRiskStatus;
  }

  public void setAttachedResourceRiskStatus(AttachedResourceRiskStatusEnum attachedResourceRiskStatus) {
    this.attachedResourceRiskStatus = attachedResourceRiskStatus;
  }

  public VulnForGetRiskOutput vulnCategory(VulnCategoryEnum vulnCategory) {
    this.vulnCategory = vulnCategory;
    return this;
  }

   /**
   * Get vulnCategory
   * @return vulnCategory
  **/
  @Schema(description = "")
  public VulnCategoryEnum getVulnCategory() {
    return vulnCategory;
  }

  public void setVulnCategory(VulnCategoryEnum vulnCategory) {
    this.vulnCategory = vulnCategory;
  }

  public VulnForGetRiskOutput vulnCvss(VulnCvssForGetRiskOutput vulnCvss) {
    this.vulnCvss = vulnCvss;
    return this;
  }

   /**
   * Get vulnCvss
   * @return vulnCvss
  **/
  @Valid
  @Schema(description = "")
  public VulnCvssForGetRiskOutput getVulnCvss() {
    return vulnCvss;
  }

  public void setVulnCvss(VulnCvssForGetRiskOutput vulnCvss) {
    this.vulnCvss = vulnCvss;
  }

  public VulnForGetRiskOutput vulnDesc(String vulnDesc) {
    this.vulnDesc = vulnDesc;
    return this;
  }

   /**
   * Get vulnDesc
   * @return vulnDesc
  **/
  @Schema(description = "")
  public String getVulnDesc() {
    return vulnDesc;
  }

  public void setVulnDesc(String vulnDesc) {
    this.vulnDesc = vulnDesc;
  }

  public VulnForGetRiskOutput vulnSolution(String vulnSolution) {
    this.vulnSolution = vulnSolution;
    return this;
  }

   /**
   * Get vulnSolution
   * @return vulnSolution
  **/
  @Schema(description = "")
  public String getVulnSolution() {
    return vulnSolution;
  }

  public void setVulnSolution(String vulnSolution) {
    this.vulnSolution = vulnSolution;
  }

  public VulnForGetRiskOutput vulnTitle(String vulnTitle) {
    this.vulnTitle = vulnTitle;
    return this;
  }

   /**
   * Get vulnTitle
   * @return vulnTitle
  **/
  @Schema(description = "")
  public String getVulnTitle() {
    return vulnTitle;
  }

  public void setVulnTitle(String vulnTitle) {
    this.vulnTitle = vulnTitle;
  }

  public VulnForGetRiskOutput vulnViewID(String vulnViewID) {
    this.vulnViewID = vulnViewID;
    return this;
  }

   /**
   * Get vulnViewID
   * @return vulnViewID
  **/
  @Schema(description = "")
  public String getVulnViewID() {
    return vulnViewID;
  }

  public void setVulnViewID(String vulnViewID) {
    this.vulnViewID = vulnViewID;
  }

  public VulnForGetRiskOutput vulnerableSoftPackages(List<VulnerableSoftPackageForGetRiskOutput> vulnerableSoftPackages) {
    this.vulnerableSoftPackages = vulnerableSoftPackages;
    return this;
  }

  public VulnForGetRiskOutput addVulnerableSoftPackagesItem(VulnerableSoftPackageForGetRiskOutput vulnerableSoftPackagesItem) {
    if (this.vulnerableSoftPackages == null) {
      this.vulnerableSoftPackages = new ArrayList<VulnerableSoftPackageForGetRiskOutput>();
    }
    this.vulnerableSoftPackages.add(vulnerableSoftPackagesItem);
    return this;
  }

   /**
   * Get vulnerableSoftPackages
   * @return vulnerableSoftPackages
  **/
  @Valid
  @Schema(description = "")
  public List<VulnerableSoftPackageForGetRiskOutput> getVulnerableSoftPackages() {
    return vulnerableSoftPackages;
  }

  public void setVulnerableSoftPackages(List<VulnerableSoftPackageForGetRiskOutput> vulnerableSoftPackages) {
    this.vulnerableSoftPackages = vulnerableSoftPackages;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VulnForGetRiskOutput vulnForGetRiskOutput = (VulnForGetRiskOutput) o;
    return Objects.equals(this.affectedAssetsCnt, vulnForGetRiskOutput.affectedAssetsCnt) &&
        Objects.equals(this.applicableVendors, vulnForGetRiskOutput.applicableVendors) &&
        Objects.equals(this.associatedCves, vulnForGetRiskOutput.associatedCves) &&
        Objects.equals(this.attachedResourceRiskStatus, vulnForGetRiskOutput.attachedResourceRiskStatus) &&
        Objects.equals(this.vulnCategory, vulnForGetRiskOutput.vulnCategory) &&
        Objects.equals(this.vulnCvss, vulnForGetRiskOutput.vulnCvss) &&
        Objects.equals(this.vulnDesc, vulnForGetRiskOutput.vulnDesc) &&
        Objects.equals(this.vulnSolution, vulnForGetRiskOutput.vulnSolution) &&
        Objects.equals(this.vulnTitle, vulnForGetRiskOutput.vulnTitle) &&
        Objects.equals(this.vulnViewID, vulnForGetRiskOutput.vulnViewID) &&
        Objects.equals(this.vulnerableSoftPackages, vulnForGetRiskOutput.vulnerableSoftPackages);
  }

  @Override
  public int hashCode() {
    return Objects.hash(affectedAssetsCnt, applicableVendors, associatedCves, attachedResourceRiskStatus, vulnCategory, vulnCvss, vulnDesc, vulnSolution, vulnTitle, vulnViewID, vulnerableSoftPackages);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VulnForGetRiskOutput {\n");
    
    sb.append("    affectedAssetsCnt: ").append(toIndentedString(affectedAssetsCnt)).append("\n");
    sb.append("    applicableVendors: ").append(toIndentedString(applicableVendors)).append("\n");
    sb.append("    associatedCves: ").append(toIndentedString(associatedCves)).append("\n");
    sb.append("    attachedResourceRiskStatus: ").append(toIndentedString(attachedResourceRiskStatus)).append("\n");
    sb.append("    vulnCategory: ").append(toIndentedString(vulnCategory)).append("\n");
    sb.append("    vulnCvss: ").append(toIndentedString(vulnCvss)).append("\n");
    sb.append("    vulnDesc: ").append(toIndentedString(vulnDesc)).append("\n");
    sb.append("    vulnSolution: ").append(toIndentedString(vulnSolution)).append("\n");
    sb.append("    vulnTitle: ").append(toIndentedString(vulnTitle)).append("\n");
    sb.append("    vulnViewID: ").append(toIndentedString(vulnViewID)).append("\n");
    sb.append("    vulnerableSoftPackages: ").append(toIndentedString(vulnerableSoftPackages)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
