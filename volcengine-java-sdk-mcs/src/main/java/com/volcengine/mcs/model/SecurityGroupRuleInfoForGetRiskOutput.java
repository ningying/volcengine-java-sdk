/*
 * mcs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.mcs.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.mcs.model.PortRangeInfoForGetRiskOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * SecurityGroupRuleInfoForGetRiskOutput
 */



public class SecurityGroupRuleInfoForGetRiskOutput {
  /**
   * Gets or Sets policy
   */
  @JsonAdapter(PolicyEnum.Adapter.class)
  public enum PolicyEnum {
    @SerializedName("allow")
    ALLOW("allow"),
    @SerializedName("deny")
    DENY("deny");

    private String value;

    PolicyEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static PolicyEnum fromValue(String input) {
      for (PolicyEnum b : PolicyEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<PolicyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PolicyEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public PolicyEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return PolicyEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("Policy")
  private PolicyEnum policy = null;

  @SerializedName("PortRangeInfos")
  private List<PortRangeInfoForGetRiskOutput> portRangeInfos = null;

  @SerializedName("Priority")
  private Long priority = null;

  @SerializedName("ProtocolType")
  private String protocolType = null;

  @SerializedName("SecurityGroupName")
  private String securityGroupName = null;

  @SerializedName("SecurityGroupRuleUID")
  private String securityGroupRuleUID = null;

  @SerializedName("SecurityGroupUID")
  private String securityGroupUID = null;

  @SerializedName("SerivceNameCN")
  private String serivceNameCN = null;

  @SerializedName("SerivceNameEN")
  private String serivceNameEN = null;

  @SerializedName("SrouceCidrIP")
  private String srouceCidrIP = null;

  @SerializedName("SrouceIPType")
  private String srouceIPType = null;

  public SecurityGroupRuleInfoForGetRiskOutput policy(PolicyEnum policy) {
    this.policy = policy;
    return this;
  }

   /**
   * Get policy
   * @return policy
  **/
  @Schema(description = "")
  public PolicyEnum getPolicy() {
    return policy;
  }

  public void setPolicy(PolicyEnum policy) {
    this.policy = policy;
  }

  public SecurityGroupRuleInfoForGetRiskOutput portRangeInfos(List<PortRangeInfoForGetRiskOutput> portRangeInfos) {
    this.portRangeInfos = portRangeInfos;
    return this;
  }

  public SecurityGroupRuleInfoForGetRiskOutput addPortRangeInfosItem(PortRangeInfoForGetRiskOutput portRangeInfosItem) {
    if (this.portRangeInfos == null) {
      this.portRangeInfos = new ArrayList<PortRangeInfoForGetRiskOutput>();
    }
    this.portRangeInfos.add(portRangeInfosItem);
    return this;
  }

   /**
   * Get portRangeInfos
   * @return portRangeInfos
  **/
  @Valid
  @Schema(description = "")
  public List<PortRangeInfoForGetRiskOutput> getPortRangeInfos() {
    return portRangeInfos;
  }

  public void setPortRangeInfos(List<PortRangeInfoForGetRiskOutput> portRangeInfos) {
    this.portRangeInfos = portRangeInfos;
  }

  public SecurityGroupRuleInfoForGetRiskOutput priority(Long priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Get priority
   * @return priority
  **/
  @Schema(description = "")
  public Long getPriority() {
    return priority;
  }

  public void setPriority(Long priority) {
    this.priority = priority;
  }

  public SecurityGroupRuleInfoForGetRiskOutput protocolType(String protocolType) {
    this.protocolType = protocolType;
    return this;
  }

   /**
   * Get protocolType
   * @return protocolType
  **/
  @Schema(description = "")
  public String getProtocolType() {
    return protocolType;
  }

  public void setProtocolType(String protocolType) {
    this.protocolType = protocolType;
  }

  public SecurityGroupRuleInfoForGetRiskOutput securityGroupName(String securityGroupName) {
    this.securityGroupName = securityGroupName;
    return this;
  }

   /**
   * Get securityGroupName
   * @return securityGroupName
  **/
  @Schema(description = "")
  public String getSecurityGroupName() {
    return securityGroupName;
  }

  public void setSecurityGroupName(String securityGroupName) {
    this.securityGroupName = securityGroupName;
  }

  public SecurityGroupRuleInfoForGetRiskOutput securityGroupRuleUID(String securityGroupRuleUID) {
    this.securityGroupRuleUID = securityGroupRuleUID;
    return this;
  }

   /**
   * Get securityGroupRuleUID
   * @return securityGroupRuleUID
  **/
  @Schema(description = "")
  public String getSecurityGroupRuleUID() {
    return securityGroupRuleUID;
  }

  public void setSecurityGroupRuleUID(String securityGroupRuleUID) {
    this.securityGroupRuleUID = securityGroupRuleUID;
  }

  public SecurityGroupRuleInfoForGetRiskOutput securityGroupUID(String securityGroupUID) {
    this.securityGroupUID = securityGroupUID;
    return this;
  }

   /**
   * Get securityGroupUID
   * @return securityGroupUID
  **/
  @Schema(description = "")
  public String getSecurityGroupUID() {
    return securityGroupUID;
  }

  public void setSecurityGroupUID(String securityGroupUID) {
    this.securityGroupUID = securityGroupUID;
  }

  public SecurityGroupRuleInfoForGetRiskOutput serivceNameCN(String serivceNameCN) {
    this.serivceNameCN = serivceNameCN;
    return this;
  }

   /**
   * Get serivceNameCN
   * @return serivceNameCN
  **/
  @Schema(description = "")
  public String getSerivceNameCN() {
    return serivceNameCN;
  }

  public void setSerivceNameCN(String serivceNameCN) {
    this.serivceNameCN = serivceNameCN;
  }

  public SecurityGroupRuleInfoForGetRiskOutput serivceNameEN(String serivceNameEN) {
    this.serivceNameEN = serivceNameEN;
    return this;
  }

   /**
   * Get serivceNameEN
   * @return serivceNameEN
  **/
  @Schema(description = "")
  public String getSerivceNameEN() {
    return serivceNameEN;
  }

  public void setSerivceNameEN(String serivceNameEN) {
    this.serivceNameEN = serivceNameEN;
  }

  public SecurityGroupRuleInfoForGetRiskOutput srouceCidrIP(String srouceCidrIP) {
    this.srouceCidrIP = srouceCidrIP;
    return this;
  }

   /**
   * Get srouceCidrIP
   * @return srouceCidrIP
  **/
  @Schema(description = "")
  public String getSrouceCidrIP() {
    return srouceCidrIP;
  }

  public void setSrouceCidrIP(String srouceCidrIP) {
    this.srouceCidrIP = srouceCidrIP;
  }

  public SecurityGroupRuleInfoForGetRiskOutput srouceIPType(String srouceIPType) {
    this.srouceIPType = srouceIPType;
    return this;
  }

   /**
   * Get srouceIPType
   * @return srouceIPType
  **/
  @Schema(description = "")
  public String getSrouceIPType() {
    return srouceIPType;
  }

  public void setSrouceIPType(String srouceIPType) {
    this.srouceIPType = srouceIPType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SecurityGroupRuleInfoForGetRiskOutput securityGroupRuleInfoForGetRiskOutput = (SecurityGroupRuleInfoForGetRiskOutput) o;
    return Objects.equals(this.policy, securityGroupRuleInfoForGetRiskOutput.policy) &&
        Objects.equals(this.portRangeInfos, securityGroupRuleInfoForGetRiskOutput.portRangeInfos) &&
        Objects.equals(this.priority, securityGroupRuleInfoForGetRiskOutput.priority) &&
        Objects.equals(this.protocolType, securityGroupRuleInfoForGetRiskOutput.protocolType) &&
        Objects.equals(this.securityGroupName, securityGroupRuleInfoForGetRiskOutput.securityGroupName) &&
        Objects.equals(this.securityGroupRuleUID, securityGroupRuleInfoForGetRiskOutput.securityGroupRuleUID) &&
        Objects.equals(this.securityGroupUID, securityGroupRuleInfoForGetRiskOutput.securityGroupUID) &&
        Objects.equals(this.serivceNameCN, securityGroupRuleInfoForGetRiskOutput.serivceNameCN) &&
        Objects.equals(this.serivceNameEN, securityGroupRuleInfoForGetRiskOutput.serivceNameEN) &&
        Objects.equals(this.srouceCidrIP, securityGroupRuleInfoForGetRiskOutput.srouceCidrIP) &&
        Objects.equals(this.srouceIPType, securityGroupRuleInfoForGetRiskOutput.srouceIPType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(policy, portRangeInfos, priority, protocolType, securityGroupName, securityGroupRuleUID, securityGroupUID, serivceNameCN, serivceNameEN, srouceCidrIP, srouceIPType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SecurityGroupRuleInfoForGetRiskOutput {\n");
    
    sb.append("    policy: ").append(toIndentedString(policy)).append("\n");
    sb.append("    portRangeInfos: ").append(toIndentedString(portRangeInfos)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    protocolType: ").append(toIndentedString(protocolType)).append("\n");
    sb.append("    securityGroupName: ").append(toIndentedString(securityGroupName)).append("\n");
    sb.append("    securityGroupRuleUID: ").append(toIndentedString(securityGroupRuleUID)).append("\n");
    sb.append("    securityGroupUID: ").append(toIndentedString(securityGroupUID)).append("\n");
    sb.append("    serivceNameCN: ").append(toIndentedString(serivceNameCN)).append("\n");
    sb.append("    serivceNameEN: ").append(toIndentedString(serivceNameEN)).append("\n");
    sb.append("    srouceCidrIP: ").append(toIndentedString(srouceCidrIP)).append("\n");
    sb.append("    srouceIPType: ").append(toIndentedString(srouceIPType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
