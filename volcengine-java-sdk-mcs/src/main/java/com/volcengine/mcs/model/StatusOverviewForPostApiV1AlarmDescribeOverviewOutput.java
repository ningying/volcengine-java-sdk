/*
 * mcs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.mcs.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * StatusOverviewForPostApiV1AlarmDescribeOverviewOutput
 */



public class StatusOverviewForPostApiV1AlarmDescribeOverviewOutput {
  @SerializedName("handled")
  private Long handled = null;

  @SerializedName("ignored")
  private Long ignored = null;

  @SerializedName("total")
  private Long total = null;

  @SerializedName("unhandled")
  private Long unhandled = null;

  @SerializedName("whitened")
  private Long whitened = null;

  public StatusOverviewForPostApiV1AlarmDescribeOverviewOutput handled(Long handled) {
    this.handled = handled;
    return this;
  }

   /**
   * Get handled
   * @return handled
  **/
  @Schema(description = "")
  public Long getHandled() {
    return handled;
  }

  public void setHandled(Long handled) {
    this.handled = handled;
  }

  public StatusOverviewForPostApiV1AlarmDescribeOverviewOutput ignored(Long ignored) {
    this.ignored = ignored;
    return this;
  }

   /**
   * Get ignored
   * @return ignored
  **/
  @Schema(description = "")
  public Long getIgnored() {
    return ignored;
  }

  public void setIgnored(Long ignored) {
    this.ignored = ignored;
  }

  public StatusOverviewForPostApiV1AlarmDescribeOverviewOutput total(Long total) {
    this.total = total;
    return this;
  }

   /**
   * Get total
   * @return total
  **/
  @Schema(description = "")
  public Long getTotal() {
    return total;
  }

  public void setTotal(Long total) {
    this.total = total;
  }

  public StatusOverviewForPostApiV1AlarmDescribeOverviewOutput unhandled(Long unhandled) {
    this.unhandled = unhandled;
    return this;
  }

   /**
   * Get unhandled
   * @return unhandled
  **/
  @Schema(description = "")
  public Long getUnhandled() {
    return unhandled;
  }

  public void setUnhandled(Long unhandled) {
    this.unhandled = unhandled;
  }

  public StatusOverviewForPostApiV1AlarmDescribeOverviewOutput whitened(Long whitened) {
    this.whitened = whitened;
    return this;
  }

   /**
   * Get whitened
   * @return whitened
  **/
  @Schema(description = "")
  public Long getWhitened() {
    return whitened;
  }

  public void setWhitened(Long whitened) {
    this.whitened = whitened;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StatusOverviewForPostApiV1AlarmDescribeOverviewOutput statusOverviewForPostApiV1AlarmDescribeOverviewOutput = (StatusOverviewForPostApiV1AlarmDescribeOverviewOutput) o;
    return Objects.equals(this.handled, statusOverviewForPostApiV1AlarmDescribeOverviewOutput.handled) &&
        Objects.equals(this.ignored, statusOverviewForPostApiV1AlarmDescribeOverviewOutput.ignored) &&
        Objects.equals(this.total, statusOverviewForPostApiV1AlarmDescribeOverviewOutput.total) &&
        Objects.equals(this.unhandled, statusOverviewForPostApiV1AlarmDescribeOverviewOutput.unhandled) &&
        Objects.equals(this.whitened, statusOverviewForPostApiV1AlarmDescribeOverviewOutput.whitened);
  }

  @Override
  public int hashCode() {
    return Objects.hash(handled, ignored, total, unhandled, whitened);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StatusOverviewForPostApiV1AlarmDescribeOverviewOutput {\n");
    
    sb.append("    handled: ").append(toIndentedString(handled)).append("\n");
    sb.append("    ignored: ").append(toIndentedString(ignored)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    unhandled: ").append(toIndentedString(unhandled)).append("\n");
    sb.append("    whitened: ").append(toIndentedString(whitened)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
