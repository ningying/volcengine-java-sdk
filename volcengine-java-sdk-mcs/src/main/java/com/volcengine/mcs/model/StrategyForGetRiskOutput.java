/*
 * mcs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.mcs.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * StrategyForGetRiskOutput
 */



public class StrategyForGetRiskOutput {
  /**
   * Gets or Sets affectedResourceType
   */
  @JsonAdapter(AffectedResourceTypeEnum.Adapter.class)
  public enum AffectedResourceTypeEnum {
    @SerializedName("ComputeVm")
    COMPUTEVM("ComputeVm"),
    @SerializedName("K8SCluster")
    K8SCLUSTER("K8SCluster"),
    @SerializedName("K8SPOD")
    K8SPOD("K8SPOD"),
    @SerializedName("K8SContainer")
    K8SCONTAINER("K8SContainer"),
    @SerializedName("K8SApp")
    K8SAPP("K8SApp"),
    @SerializedName("ComputeCR")
    COMPUTECR("ComputeCR"),
    @SerializedName("NetworkSecurityGroup")
    NETWORKSECURITYGROUP("NetworkSecurityGroup"),
    @SerializedName("NetworkSlb")
    NETWORKSLB("NetworkSlb"),
    @SerializedName("NetworkVpc")
    NETWORKVPC("NetworkVpc"),
    @SerializedName("NetworkSubnet")
    NETWORKSUBNET("NetworkSubnet"),
    @SerializedName("NetworkNatGateway")
    NETWORKNATGATEWAY("NetworkNatGateway"),
    @SerializedName("NetworkAPIGateway")
    NETWORKAPIGATEWAY("NetworkAPIGateway"),
    @SerializedName("NetworkEip")
    NETWORKEIP("NetworkEip"),
    @SerializedName("NetworkInterface")
    NETWORKINTERFACE("NetworkInterface"),
    @SerializedName("NetworkRouteTable")
    NETWORKROUTETABLE("NetworkRouteTable"),
    @SerializedName("NetworkIPSecVPN")
    NETWORKIPSECVPN("NetworkIPSecVPN"),
    @SerializedName("NetworkSSLVPN")
    NETWORKSSLVPN("NetworkSSLVPN"),
    @SerializedName("NetworkDirectConnectGateway")
    NETWORKDIRECTCONNECTGATEWAY("NetworkDirectConnectGateway"),
    @SerializedName("NetworkCEN")
    NETWORKCEN("NetworkCEN"),
    @SerializedName("StorageOssBucket")
    STORAGEOSSBUCKET("StorageOssBucket"),
    @SerializedName("StorageDB")
    STORAGEDB("StorageDB"),
    @SerializedName("StorageVolume")
    STORAGEVOLUME("StorageVolume"),
    @SerializedName("IdentityIamAccount")
    IDENTITYIAMACCOUNT("IdentityIamAccount"),
    @SerializedName("ComputeMSERegistryCenter")
    COMPUTEMSEREGISTRYCENTER("ComputeMSERegistryCenter"),
    @SerializedName("ComputeMSEGateway")
    COMPUTEMSEGATEWAY("ComputeMSEGateway"),
    @SerializedName("MQInstance")
    MQINSTANCE("MQInstance");

    private String value;

    AffectedResourceTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static AffectedResourceTypeEnum fromValue(String input) {
      for (AffectedResourceTypeEnum b : AffectedResourceTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<AffectedResourceTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AffectedResourceTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public AffectedResourceTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return AffectedResourceTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("AffectedResourceType")
  private AffectedResourceTypeEnum affectedResourceType = null;

  @SerializedName("ForceRepairActionName")
  private String forceRepairActionName = null;

  @SerializedName("ForceRepairActionUID")
  private String forceRepairActionUID = null;

  @SerializedName("RepairAdvice")
  private String repairAdvice = null;

  /**
   * Gets or Sets repairSupportAutomation
   */
  @JsonAdapter(RepairSupportAutomationEnum.Adapter.class)
  public enum RepairSupportAutomationEnum {
    @SerializedName("manual_repair")
    MANUAL_REPAIR("manual_repair"),
    @SerializedName("semi_auto_repair")
    SEMI_AUTO_REPAIR("semi_auto_repair"),
    @SerializedName("auto_repair")
    AUTO_REPAIR("auto_repair");

    private String value;

    RepairSupportAutomationEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static RepairSupportAutomationEnum fromValue(String input) {
      for (RepairSupportAutomationEnum b : RepairSupportAutomationEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<RepairSupportAutomationEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RepairSupportAutomationEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public RepairSupportAutomationEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return RepairSupportAutomationEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("RepairSupportAutomation")
  private RepairSupportAutomationEnum repairSupportAutomation = null;

  /**
   * Gets or Sets resourceRiskStatus
   */
  @JsonAdapter(ResourceRiskStatusEnum.Adapter.class)
  public enum ResourceRiskStatusEnum {
    @SerializedName("passed")
    PASSED("passed"),
    @SerializedName("not_passed")
    NOT_PASSED("not_passed"),
    @SerializedName("exempted")
    EXEMPTED("exempted");

    private String value;

    ResourceRiskStatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ResourceRiskStatusEnum fromValue(String input) {
      for (ResourceRiskStatusEnum b : ResourceRiskStatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ResourceRiskStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ResourceRiskStatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public ResourceRiskStatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return ResourceRiskStatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("ResourceRiskStatus")
  private ResourceRiskStatusEnum resourceRiskStatus = null;

  @SerializedName("StrategyCategories")
  private List<String> strategyCategories = null;

  @SerializedName("StrategyDesc")
  private String strategyDesc = null;

  @SerializedName("StrategyID")
  private String strategyID = null;

  @SerializedName("StrategyImpactType")
  private String strategyImpactType = null;

  @SerializedName("StrategyTitle")
  private String strategyTitle = null;

  /**
   * Gets or Sets strategyType
   */
  @JsonAdapter(StrategyTypeEnum.Adapter.class)
  public enum StrategyTypeEnum {
    @SerializedName("normal_strategy")
    NORMAL_STRATEGY("normal_strategy"),
    @SerializedName("vuln_strategy")
    VULN_STRATEGY("vuln_strategy");

    private String value;

    StrategyTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StrategyTypeEnum fromValue(String input) {
      for (StrategyTypeEnum b : StrategyTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StrategyTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StrategyTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public StrategyTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return StrategyTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("StrategyType")
  private StrategyTypeEnum strategyType = null;

  @SerializedName("SupportForceRepair")
  private Boolean supportForceRepair = null;

  @SerializedName("TaskRunning")
  private Boolean taskRunning = null;

  public StrategyForGetRiskOutput affectedResourceType(AffectedResourceTypeEnum affectedResourceType) {
    this.affectedResourceType = affectedResourceType;
    return this;
  }

   /**
   * Get affectedResourceType
   * @return affectedResourceType
  **/
  @Schema(description = "")
  public AffectedResourceTypeEnum getAffectedResourceType() {
    return affectedResourceType;
  }

  public void setAffectedResourceType(AffectedResourceTypeEnum affectedResourceType) {
    this.affectedResourceType = affectedResourceType;
  }

  public StrategyForGetRiskOutput forceRepairActionName(String forceRepairActionName) {
    this.forceRepairActionName = forceRepairActionName;
    return this;
  }

   /**
   * Get forceRepairActionName
   * @return forceRepairActionName
  **/
  @Schema(description = "")
  public String getForceRepairActionName() {
    return forceRepairActionName;
  }

  public void setForceRepairActionName(String forceRepairActionName) {
    this.forceRepairActionName = forceRepairActionName;
  }

  public StrategyForGetRiskOutput forceRepairActionUID(String forceRepairActionUID) {
    this.forceRepairActionUID = forceRepairActionUID;
    return this;
  }

   /**
   * Get forceRepairActionUID
   * @return forceRepairActionUID
  **/
  @Schema(description = "")
  public String getForceRepairActionUID() {
    return forceRepairActionUID;
  }

  public void setForceRepairActionUID(String forceRepairActionUID) {
    this.forceRepairActionUID = forceRepairActionUID;
  }

  public StrategyForGetRiskOutput repairAdvice(String repairAdvice) {
    this.repairAdvice = repairAdvice;
    return this;
  }

   /**
   * Get repairAdvice
   * @return repairAdvice
  **/
  @Schema(description = "")
  public String getRepairAdvice() {
    return repairAdvice;
  }

  public void setRepairAdvice(String repairAdvice) {
    this.repairAdvice = repairAdvice;
  }

  public StrategyForGetRiskOutput repairSupportAutomation(RepairSupportAutomationEnum repairSupportAutomation) {
    this.repairSupportAutomation = repairSupportAutomation;
    return this;
  }

   /**
   * Get repairSupportAutomation
   * @return repairSupportAutomation
  **/
  @Schema(description = "")
  public RepairSupportAutomationEnum getRepairSupportAutomation() {
    return repairSupportAutomation;
  }

  public void setRepairSupportAutomation(RepairSupportAutomationEnum repairSupportAutomation) {
    this.repairSupportAutomation = repairSupportAutomation;
  }

  public StrategyForGetRiskOutput resourceRiskStatus(ResourceRiskStatusEnum resourceRiskStatus) {
    this.resourceRiskStatus = resourceRiskStatus;
    return this;
  }

   /**
   * Get resourceRiskStatus
   * @return resourceRiskStatus
  **/
  @Schema(description = "")
  public ResourceRiskStatusEnum getResourceRiskStatus() {
    return resourceRiskStatus;
  }

  public void setResourceRiskStatus(ResourceRiskStatusEnum resourceRiskStatus) {
    this.resourceRiskStatus = resourceRiskStatus;
  }

  public StrategyForGetRiskOutput strategyCategories(List<String> strategyCategories) {
    this.strategyCategories = strategyCategories;
    return this;
  }

  public StrategyForGetRiskOutput addStrategyCategoriesItem(String strategyCategoriesItem) {
    if (this.strategyCategories == null) {
      this.strategyCategories = new ArrayList<String>();
    }
    this.strategyCategories.add(strategyCategoriesItem);
    return this;
  }

   /**
   * Get strategyCategories
   * @return strategyCategories
  **/
  @Schema(description = "")
  public List<String> getStrategyCategories() {
    return strategyCategories;
  }

  public void setStrategyCategories(List<String> strategyCategories) {
    this.strategyCategories = strategyCategories;
  }

  public StrategyForGetRiskOutput strategyDesc(String strategyDesc) {
    this.strategyDesc = strategyDesc;
    return this;
  }

   /**
   * Get strategyDesc
   * @return strategyDesc
  **/
  @Schema(description = "")
  public String getStrategyDesc() {
    return strategyDesc;
  }

  public void setStrategyDesc(String strategyDesc) {
    this.strategyDesc = strategyDesc;
  }

  public StrategyForGetRiskOutput strategyID(String strategyID) {
    this.strategyID = strategyID;
    return this;
  }

   /**
   * Get strategyID
   * @return strategyID
  **/
  @Schema(description = "")
  public String getStrategyID() {
    return strategyID;
  }

  public void setStrategyID(String strategyID) {
    this.strategyID = strategyID;
  }

  public StrategyForGetRiskOutput strategyImpactType(String strategyImpactType) {
    this.strategyImpactType = strategyImpactType;
    return this;
  }

   /**
   * Get strategyImpactType
   * @return strategyImpactType
  **/
  @Schema(description = "")
  public String getStrategyImpactType() {
    return strategyImpactType;
  }

  public void setStrategyImpactType(String strategyImpactType) {
    this.strategyImpactType = strategyImpactType;
  }

  public StrategyForGetRiskOutput strategyTitle(String strategyTitle) {
    this.strategyTitle = strategyTitle;
    return this;
  }

   /**
   * Get strategyTitle
   * @return strategyTitle
  **/
  @Schema(description = "")
  public String getStrategyTitle() {
    return strategyTitle;
  }

  public void setStrategyTitle(String strategyTitle) {
    this.strategyTitle = strategyTitle;
  }

  public StrategyForGetRiskOutput strategyType(StrategyTypeEnum strategyType) {
    this.strategyType = strategyType;
    return this;
  }

   /**
   * Get strategyType
   * @return strategyType
  **/
  @Schema(description = "")
  public StrategyTypeEnum getStrategyType() {
    return strategyType;
  }

  public void setStrategyType(StrategyTypeEnum strategyType) {
    this.strategyType = strategyType;
  }

  public StrategyForGetRiskOutput supportForceRepair(Boolean supportForceRepair) {
    this.supportForceRepair = supportForceRepair;
    return this;
  }

   /**
   * Get supportForceRepair
   * @return supportForceRepair
  **/
  @Schema(description = "")
  public Boolean isSupportForceRepair() {
    return supportForceRepair;
  }

  public void setSupportForceRepair(Boolean supportForceRepair) {
    this.supportForceRepair = supportForceRepair;
  }

  public StrategyForGetRiskOutput taskRunning(Boolean taskRunning) {
    this.taskRunning = taskRunning;
    return this;
  }

   /**
   * Get taskRunning
   * @return taskRunning
  **/
  @Schema(description = "")
  public Boolean isTaskRunning() {
    return taskRunning;
  }

  public void setTaskRunning(Boolean taskRunning) {
    this.taskRunning = taskRunning;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StrategyForGetRiskOutput strategyForGetRiskOutput = (StrategyForGetRiskOutput) o;
    return Objects.equals(this.affectedResourceType, strategyForGetRiskOutput.affectedResourceType) &&
        Objects.equals(this.forceRepairActionName, strategyForGetRiskOutput.forceRepairActionName) &&
        Objects.equals(this.forceRepairActionUID, strategyForGetRiskOutput.forceRepairActionUID) &&
        Objects.equals(this.repairAdvice, strategyForGetRiskOutput.repairAdvice) &&
        Objects.equals(this.repairSupportAutomation, strategyForGetRiskOutput.repairSupportAutomation) &&
        Objects.equals(this.resourceRiskStatus, strategyForGetRiskOutput.resourceRiskStatus) &&
        Objects.equals(this.strategyCategories, strategyForGetRiskOutput.strategyCategories) &&
        Objects.equals(this.strategyDesc, strategyForGetRiskOutput.strategyDesc) &&
        Objects.equals(this.strategyID, strategyForGetRiskOutput.strategyID) &&
        Objects.equals(this.strategyImpactType, strategyForGetRiskOutput.strategyImpactType) &&
        Objects.equals(this.strategyTitle, strategyForGetRiskOutput.strategyTitle) &&
        Objects.equals(this.strategyType, strategyForGetRiskOutput.strategyType) &&
        Objects.equals(this.supportForceRepair, strategyForGetRiskOutput.supportForceRepair) &&
        Objects.equals(this.taskRunning, strategyForGetRiskOutput.taskRunning);
  }

  @Override
  public int hashCode() {
    return Objects.hash(affectedResourceType, forceRepairActionName, forceRepairActionUID, repairAdvice, repairSupportAutomation, resourceRiskStatus, strategyCategories, strategyDesc, strategyID, strategyImpactType, strategyTitle, strategyType, supportForceRepair, taskRunning);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StrategyForGetRiskOutput {\n");
    
    sb.append("    affectedResourceType: ").append(toIndentedString(affectedResourceType)).append("\n");
    sb.append("    forceRepairActionName: ").append(toIndentedString(forceRepairActionName)).append("\n");
    sb.append("    forceRepairActionUID: ").append(toIndentedString(forceRepairActionUID)).append("\n");
    sb.append("    repairAdvice: ").append(toIndentedString(repairAdvice)).append("\n");
    sb.append("    repairSupportAutomation: ").append(toIndentedString(repairSupportAutomation)).append("\n");
    sb.append("    resourceRiskStatus: ").append(toIndentedString(resourceRiskStatus)).append("\n");
    sb.append("    strategyCategories: ").append(toIndentedString(strategyCategories)).append("\n");
    sb.append("    strategyDesc: ").append(toIndentedString(strategyDesc)).append("\n");
    sb.append("    strategyID: ").append(toIndentedString(strategyID)).append("\n");
    sb.append("    strategyImpactType: ").append(toIndentedString(strategyImpactType)).append("\n");
    sb.append("    strategyTitle: ").append(toIndentedString(strategyTitle)).append("\n");
    sb.append("    strategyType: ").append(toIndentedString(strategyType)).append("\n");
    sb.append("    supportForceRepair: ").append(toIndentedString(supportForceRepair)).append("\n");
    sb.append("    taskRunning: ").append(toIndentedString(taskRunning)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
