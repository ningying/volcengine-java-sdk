/*
 * mcs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.mcs.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * BaseInfoForGetAssetSyncTaskOutput
 */



public class BaseInfoForGetAssetSyncTaskOutput {
  @SerializedName("EndTimeMilli")
  private Long endTimeMilli = null;

  @SerializedName("ErrCode")
  private String errCode = null;

  @SerializedName("ErrMsg")
  private String errMsg = null;

  @SerializedName("StartTimeMilli")
  private Long startTimeMilli = null;

  @SerializedName("TaskID")
  private String taskID = null;

  /**
   * Gets or Sets taskStatus
   */
  @JsonAdapter(TaskStatusEnum.Adapter.class)
  public enum TaskStatusEnum {
    @SerializedName("waiting")
    WAITING("waiting"),
    @SerializedName("processing")
    PROCESSING("processing"),
    @SerializedName("succeeded")
    SUCCEEDED("succeeded"),
    @SerializedName("canceled")
    CANCELED("canceled"),
    @SerializedName("failed")
    FAILED("failed"),
    @SerializedName("timeouted")
    TIMEOUTED("timeouted");

    private String value;

    TaskStatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TaskStatusEnum fromValue(String input) {
      for (TaskStatusEnum b : TaskStatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TaskStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TaskStatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public TaskStatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return TaskStatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("TaskStatus")
  private TaskStatusEnum taskStatus = null;

  /**
   * Gets or Sets triggerType
   */
  @JsonAdapter(TriggerTypeEnum.Adapter.class)
  public enum TriggerTypeEnum {
    @SerializedName("by_user")
    BY_USER("by_user"),
    @SerializedName("by_timer")
    BY_TIMER("by_timer");

    private String value;

    TriggerTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TriggerTypeEnum fromValue(String input) {
      for (TriggerTypeEnum b : TriggerTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TriggerTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TriggerTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public TriggerTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return TriggerTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("TriggerType")
  private TriggerTypeEnum triggerType = null;

  public BaseInfoForGetAssetSyncTaskOutput endTimeMilli(Long endTimeMilli) {
    this.endTimeMilli = endTimeMilli;
    return this;
  }

   /**
   * Get endTimeMilli
   * @return endTimeMilli
  **/
  @Schema(description = "")
  public Long getEndTimeMilli() {
    return endTimeMilli;
  }

  public void setEndTimeMilli(Long endTimeMilli) {
    this.endTimeMilli = endTimeMilli;
  }

  public BaseInfoForGetAssetSyncTaskOutput errCode(String errCode) {
    this.errCode = errCode;
    return this;
  }

   /**
   * Get errCode
   * @return errCode
  **/
  @Schema(description = "")
  public String getErrCode() {
    return errCode;
  }

  public void setErrCode(String errCode) {
    this.errCode = errCode;
  }

  public BaseInfoForGetAssetSyncTaskOutput errMsg(String errMsg) {
    this.errMsg = errMsg;
    return this;
  }

   /**
   * Get errMsg
   * @return errMsg
  **/
  @Schema(description = "")
  public String getErrMsg() {
    return errMsg;
  }

  public void setErrMsg(String errMsg) {
    this.errMsg = errMsg;
  }

  public BaseInfoForGetAssetSyncTaskOutput startTimeMilli(Long startTimeMilli) {
    this.startTimeMilli = startTimeMilli;
    return this;
  }

   /**
   * Get startTimeMilli
   * @return startTimeMilli
  **/
  @Schema(description = "")
  public Long getStartTimeMilli() {
    return startTimeMilli;
  }

  public void setStartTimeMilli(Long startTimeMilli) {
    this.startTimeMilli = startTimeMilli;
  }

  public BaseInfoForGetAssetSyncTaskOutput taskID(String taskID) {
    this.taskID = taskID;
    return this;
  }

   /**
   * Get taskID
   * @return taskID
  **/
  @Schema(description = "")
  public String getTaskID() {
    return taskID;
  }

  public void setTaskID(String taskID) {
    this.taskID = taskID;
  }

  public BaseInfoForGetAssetSyncTaskOutput taskStatus(TaskStatusEnum taskStatus) {
    this.taskStatus = taskStatus;
    return this;
  }

   /**
   * Get taskStatus
   * @return taskStatus
  **/
  @Schema(description = "")
  public TaskStatusEnum getTaskStatus() {
    return taskStatus;
  }

  public void setTaskStatus(TaskStatusEnum taskStatus) {
    this.taskStatus = taskStatus;
  }

  public BaseInfoForGetAssetSyncTaskOutput triggerType(TriggerTypeEnum triggerType) {
    this.triggerType = triggerType;
    return this;
  }

   /**
   * Get triggerType
   * @return triggerType
  **/
  @Schema(description = "")
  public TriggerTypeEnum getTriggerType() {
    return triggerType;
  }

  public void setTriggerType(TriggerTypeEnum triggerType) {
    this.triggerType = triggerType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BaseInfoForGetAssetSyncTaskOutput baseInfoForGetAssetSyncTaskOutput = (BaseInfoForGetAssetSyncTaskOutput) o;
    return Objects.equals(this.endTimeMilli, baseInfoForGetAssetSyncTaskOutput.endTimeMilli) &&
        Objects.equals(this.errCode, baseInfoForGetAssetSyncTaskOutput.errCode) &&
        Objects.equals(this.errMsg, baseInfoForGetAssetSyncTaskOutput.errMsg) &&
        Objects.equals(this.startTimeMilli, baseInfoForGetAssetSyncTaskOutput.startTimeMilli) &&
        Objects.equals(this.taskID, baseInfoForGetAssetSyncTaskOutput.taskID) &&
        Objects.equals(this.taskStatus, baseInfoForGetAssetSyncTaskOutput.taskStatus) &&
        Objects.equals(this.triggerType, baseInfoForGetAssetSyncTaskOutput.triggerType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endTimeMilli, errCode, errMsg, startTimeMilli, taskID, taskStatus, triggerType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BaseInfoForGetAssetSyncTaskOutput {\n");
    
    sb.append("    endTimeMilli: ").append(toIndentedString(endTimeMilli)).append("\n");
    sb.append("    errCode: ").append(toIndentedString(errCode)).append("\n");
    sb.append("    errMsg: ").append(toIndentedString(errMsg)).append("\n");
    sb.append("    startTimeMilli: ").append(toIndentedString(startTimeMilli)).append("\n");
    sb.append("    taskID: ").append(toIndentedString(taskID)).append("\n");
    sb.append("    taskStatus: ").append(toIndentedString(taskStatus)).append("\n");
    sb.append("    triggerType: ").append(toIndentedString(triggerType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
