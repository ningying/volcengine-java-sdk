/*
 * mcs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.mcs.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.mcs.model.CloudAccountForGetRiskStatInput;
import com.volcengine.mcs.model.TimeRangeForGetRiskStatInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * GetRiskStatRequest
 */



public class GetRiskStatRequest {
  @SerializedName("CloudAccounts")
  private List<CloudAccountForGetRiskStatInput> cloudAccounts = null;

  /**
   * Gets or Sets cloudVendors
   */
  @JsonAdapter(CloudVendorsEnum.Adapter.class)
  public enum CloudVendorsEnum {
    @SerializedName("volcengine")
    VOLCENGINE("volcengine"),
    @SerializedName("aliyun")
    ALIYUN("aliyun"),
    @SerializedName("huaweicloud")
    HUAWEICLOUD("huaweicloud"),
    @SerializedName("tencent")
    TENCENT("tencent");

    private String value;

    CloudVendorsEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static CloudVendorsEnum fromValue(String input) {
      for (CloudVendorsEnum b : CloudVendorsEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<CloudVendorsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CloudVendorsEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public CloudVendorsEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return CloudVendorsEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("CloudVendors")
  private List<CloudVendorsEnum> cloudVendors = null;

  /**
   * Gets or Sets displayMode
   */
  @JsonAdapter(DisplayModeEnum.Adapter.class)
  public enum DisplayModeEnum {
    @SerializedName("date")
    DATE("date"),
    @SerializedName("date-hour")
    DATE_HOUR("date-hour");

    private String value;

    DisplayModeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static DisplayModeEnum fromValue(String input) {
      for (DisplayModeEnum b : DisplayModeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<DisplayModeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DisplayModeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public DisplayModeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return DisplayModeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("DisplayMode")
  private DisplayModeEnum displayMode = null;

  /**
   * Gets or Sets riskType
   */
  @JsonAdapter(RiskTypeEnum.Adapter.class)
  public enum RiskTypeEnum {
    @SerializedName("risk_model_vulnerability")
    RISK_MODEL_VULNERABILITY("risk_model_vulnerability"),
    @SerializedName("risk_model_mc_strategy")
    RISK_MODEL_MC_STRATEGY("risk_model_mc_strategy"),
    @SerializedName("risk_model_attack_chain_analysis")
    RISK_MODEL_ATTACK_CHAIN_ANALYSIS("risk_model_attack_chain_analysis");

    private String value;

    RiskTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static RiskTypeEnum fromValue(String input) {
      for (RiskTypeEnum b : RiskTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<RiskTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RiskTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public RiskTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return RiskTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("RiskType")
  private RiskTypeEnum riskType = null;

  @SerializedName("TimeRange")
  private TimeRangeForGetRiskStatInput timeRange = null;

  public GetRiskStatRequest cloudAccounts(List<CloudAccountForGetRiskStatInput> cloudAccounts) {
    this.cloudAccounts = cloudAccounts;
    return this;
  }

  public GetRiskStatRequest addCloudAccountsItem(CloudAccountForGetRiskStatInput cloudAccountsItem) {
    if (this.cloudAccounts == null) {
      this.cloudAccounts = new ArrayList<CloudAccountForGetRiskStatInput>();
    }
    this.cloudAccounts.add(cloudAccountsItem);
    return this;
  }

   /**
   * Get cloudAccounts
   * @return cloudAccounts
  **/
  @Valid
  @Schema(description = "")
  public List<CloudAccountForGetRiskStatInput> getCloudAccounts() {
    return cloudAccounts;
  }

  public void setCloudAccounts(List<CloudAccountForGetRiskStatInput> cloudAccounts) {
    this.cloudAccounts = cloudAccounts;
  }

  public GetRiskStatRequest cloudVendors(List<CloudVendorsEnum> cloudVendors) {
    this.cloudVendors = cloudVendors;
    return this;
  }

  public GetRiskStatRequest addCloudVendorsItem(CloudVendorsEnum cloudVendorsItem) {
    if (this.cloudVendors == null) {
      this.cloudVendors = new ArrayList<CloudVendorsEnum>();
    }
    this.cloudVendors.add(cloudVendorsItem);
    return this;
  }

   /**
   * Get cloudVendors
   * @return cloudVendors
  **/
  @Schema(description = "")
  public List<CloudVendorsEnum> getCloudVendors() {
    return cloudVendors;
  }

  public void setCloudVendors(List<CloudVendorsEnum> cloudVendors) {
    this.cloudVendors = cloudVendors;
  }

  public GetRiskStatRequest displayMode(DisplayModeEnum displayMode) {
    this.displayMode = displayMode;
    return this;
  }

   /**
   * Get displayMode
   * @return displayMode
  **/
  @Schema(description = "")
  public DisplayModeEnum getDisplayMode() {
    return displayMode;
  }

  public void setDisplayMode(DisplayModeEnum displayMode) {
    this.displayMode = displayMode;
  }

  public GetRiskStatRequest riskType(RiskTypeEnum riskType) {
    this.riskType = riskType;
    return this;
  }

   /**
   * Get riskType
   * @return riskType
  **/
  @Schema(description = "")
  public RiskTypeEnum getRiskType() {
    return riskType;
  }

  public void setRiskType(RiskTypeEnum riskType) {
    this.riskType = riskType;
  }

  public GetRiskStatRequest timeRange(TimeRangeForGetRiskStatInput timeRange) {
    this.timeRange = timeRange;
    return this;
  }

   /**
   * Get timeRange
   * @return timeRange
  **/
  @Valid
  @Schema(description = "")
  public TimeRangeForGetRiskStatInput getTimeRange() {
    return timeRange;
  }

  public void setTimeRange(TimeRangeForGetRiskStatInput timeRange) {
    this.timeRange = timeRange;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetRiskStatRequest getRiskStatRequest = (GetRiskStatRequest) o;
    return Objects.equals(this.cloudAccounts, getRiskStatRequest.cloudAccounts) &&
        Objects.equals(this.cloudVendors, getRiskStatRequest.cloudVendors) &&
        Objects.equals(this.displayMode, getRiskStatRequest.displayMode) &&
        Objects.equals(this.riskType, getRiskStatRequest.riskType) &&
        Objects.equals(this.timeRange, getRiskStatRequest.timeRange);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cloudAccounts, cloudVendors, displayMode, riskType, timeRange);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetRiskStatRequest {\n");
    
    sb.append("    cloudAccounts: ").append(toIndentedString(cloudAccounts)).append("\n");
    sb.append("    cloudVendors: ").append(toIndentedString(cloudVendors)).append("\n");
    sb.append("    displayMode: ").append(toIndentedString(displayMode)).append("\n");
    sb.append("    riskType: ").append(toIndentedString(riskType)).append("\n");
    sb.append("    timeRange: ").append(toIndentedString(timeRange)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
