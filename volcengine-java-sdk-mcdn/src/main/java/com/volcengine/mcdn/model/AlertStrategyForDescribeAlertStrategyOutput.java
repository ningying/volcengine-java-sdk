/*
 * mcdn
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.mcdn.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.mcdn.model.AlertRuleForDescribeAlertStrategyOutput;
import com.volcengine.mcdn.model.DomainForDescribeAlertStrategyOutput;
import com.volcengine.mcdn.model.ProbeTaskForDescribeAlertStrategyOutput;
import com.volcengine.mcdn.model.SubscribeRuleForDescribeAlertStrategyOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * AlertStrategyForDescribeAlertStrategyOutput
 */



public class AlertStrategyForDescribeAlertStrategyOutput {
  @SerializedName("AlertRule")
  private AlertRuleForDescribeAlertStrategyOutput alertRule = null;

  @SerializedName("Domains")
  private List<DomainForDescribeAlertStrategyOutput> domains = null;

  @SerializedName("Id")
  private String id = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("ProbeTasks")
  private List<ProbeTaskForDescribeAlertStrategyOutput> probeTasks = null;

  @SerializedName("ResourceScope")
  private String resourceScope = null;

  @SerializedName("ResourceTypes")
  private List<String> resourceTypes = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("SubscribeRule")
  private SubscribeRuleForDescribeAlertStrategyOutput subscribeRule = null;

  @SerializedName("TriggerType")
  private String triggerType = null;

  public AlertStrategyForDescribeAlertStrategyOutput alertRule(AlertRuleForDescribeAlertStrategyOutput alertRule) {
    this.alertRule = alertRule;
    return this;
  }

   /**
   * Get alertRule
   * @return alertRule
  **/
  @Valid
  @Schema(description = "")
  public AlertRuleForDescribeAlertStrategyOutput getAlertRule() {
    return alertRule;
  }

  public void setAlertRule(AlertRuleForDescribeAlertStrategyOutput alertRule) {
    this.alertRule = alertRule;
  }

  public AlertStrategyForDescribeAlertStrategyOutput domains(List<DomainForDescribeAlertStrategyOutput> domains) {
    this.domains = domains;
    return this;
  }

  public AlertStrategyForDescribeAlertStrategyOutput addDomainsItem(DomainForDescribeAlertStrategyOutput domainsItem) {
    if (this.domains == null) {
      this.domains = new ArrayList<DomainForDescribeAlertStrategyOutput>();
    }
    this.domains.add(domainsItem);
    return this;
  }

   /**
   * Get domains
   * @return domains
  **/
  @Valid
  @Schema(description = "")
  public List<DomainForDescribeAlertStrategyOutput> getDomains() {
    return domains;
  }

  public void setDomains(List<DomainForDescribeAlertStrategyOutput> domains) {
    this.domains = domains;
  }

  public AlertStrategyForDescribeAlertStrategyOutput id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public AlertStrategyForDescribeAlertStrategyOutput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public AlertStrategyForDescribeAlertStrategyOutput probeTasks(List<ProbeTaskForDescribeAlertStrategyOutput> probeTasks) {
    this.probeTasks = probeTasks;
    return this;
  }

  public AlertStrategyForDescribeAlertStrategyOutput addProbeTasksItem(ProbeTaskForDescribeAlertStrategyOutput probeTasksItem) {
    if (this.probeTasks == null) {
      this.probeTasks = new ArrayList<ProbeTaskForDescribeAlertStrategyOutput>();
    }
    this.probeTasks.add(probeTasksItem);
    return this;
  }

   /**
   * Get probeTasks
   * @return probeTasks
  **/
  @Valid
  @Schema(description = "")
  public List<ProbeTaskForDescribeAlertStrategyOutput> getProbeTasks() {
    return probeTasks;
  }

  public void setProbeTasks(List<ProbeTaskForDescribeAlertStrategyOutput> probeTasks) {
    this.probeTasks = probeTasks;
  }

  public AlertStrategyForDescribeAlertStrategyOutput resourceScope(String resourceScope) {
    this.resourceScope = resourceScope;
    return this;
  }

   /**
   * Get resourceScope
   * @return resourceScope
  **/
  @Schema(description = "")
  public String getResourceScope() {
    return resourceScope;
  }

  public void setResourceScope(String resourceScope) {
    this.resourceScope = resourceScope;
  }

  public AlertStrategyForDescribeAlertStrategyOutput resourceTypes(List<String> resourceTypes) {
    this.resourceTypes = resourceTypes;
    return this;
  }

  public AlertStrategyForDescribeAlertStrategyOutput addResourceTypesItem(String resourceTypesItem) {
    if (this.resourceTypes == null) {
      this.resourceTypes = new ArrayList<String>();
    }
    this.resourceTypes.add(resourceTypesItem);
    return this;
  }

   /**
   * Get resourceTypes
   * @return resourceTypes
  **/
  @Schema(description = "")
  public List<String> getResourceTypes() {
    return resourceTypes;
  }

  public void setResourceTypes(List<String> resourceTypes) {
    this.resourceTypes = resourceTypes;
  }

  public AlertStrategyForDescribeAlertStrategyOutput status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public AlertStrategyForDescribeAlertStrategyOutput subscribeRule(SubscribeRuleForDescribeAlertStrategyOutput subscribeRule) {
    this.subscribeRule = subscribeRule;
    return this;
  }

   /**
   * Get subscribeRule
   * @return subscribeRule
  **/
  @Valid
  @Schema(description = "")
  public SubscribeRuleForDescribeAlertStrategyOutput getSubscribeRule() {
    return subscribeRule;
  }

  public void setSubscribeRule(SubscribeRuleForDescribeAlertStrategyOutput subscribeRule) {
    this.subscribeRule = subscribeRule;
  }

  public AlertStrategyForDescribeAlertStrategyOutput triggerType(String triggerType) {
    this.triggerType = triggerType;
    return this;
  }

   /**
   * Get triggerType
   * @return triggerType
  **/
  @Schema(description = "")
  public String getTriggerType() {
    return triggerType;
  }

  public void setTriggerType(String triggerType) {
    this.triggerType = triggerType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlertStrategyForDescribeAlertStrategyOutput alertStrategyForDescribeAlertStrategyOutput = (AlertStrategyForDescribeAlertStrategyOutput) o;
    return Objects.equals(this.alertRule, alertStrategyForDescribeAlertStrategyOutput.alertRule) &&
        Objects.equals(this.domains, alertStrategyForDescribeAlertStrategyOutput.domains) &&
        Objects.equals(this.id, alertStrategyForDescribeAlertStrategyOutput.id) &&
        Objects.equals(this.name, alertStrategyForDescribeAlertStrategyOutput.name) &&
        Objects.equals(this.probeTasks, alertStrategyForDescribeAlertStrategyOutput.probeTasks) &&
        Objects.equals(this.resourceScope, alertStrategyForDescribeAlertStrategyOutput.resourceScope) &&
        Objects.equals(this.resourceTypes, alertStrategyForDescribeAlertStrategyOutput.resourceTypes) &&
        Objects.equals(this.status, alertStrategyForDescribeAlertStrategyOutput.status) &&
        Objects.equals(this.subscribeRule, alertStrategyForDescribeAlertStrategyOutput.subscribeRule) &&
        Objects.equals(this.triggerType, alertStrategyForDescribeAlertStrategyOutput.triggerType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alertRule, domains, id, name, probeTasks, resourceScope, resourceTypes, status, subscribeRule, triggerType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlertStrategyForDescribeAlertStrategyOutput {\n");
    
    sb.append("    alertRule: ").append(toIndentedString(alertRule)).append("\n");
    sb.append("    domains: ").append(toIndentedString(domains)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    probeTasks: ").append(toIndentedString(probeTasks)).append("\n");
    sb.append("    resourceScope: ").append(toIndentedString(resourceScope)).append("\n");
    sb.append("    resourceTypes: ").append(toIndentedString(resourceTypes)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    subscribeRule: ").append(toIndentedString(subscribeRule)).append("\n");
    sb.append("    triggerType: ").append(toIndentedString(triggerType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
