/*
 * mcdn
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.mcdn.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ConditionForDescribeAlertStrategyOutput
 */



public class ConditionForDescribeAlertStrategyOutput {
  @SerializedName("Format")
  private String format = null;

  @SerializedName("MetricId")
  private String metricId = null;

  @SerializedName("Operator")
  private String operator = null;

  @SerializedName("Period")
  private Long period = null;

  @SerializedName("Sensitivity")
  private String sensitivity = null;

  @SerializedName("ThresholdType")
  private String thresholdType = null;

  @SerializedName("Value")
  private Double value = null;

  public ConditionForDescribeAlertStrategyOutput format(String format) {
    this.format = format;
    return this;
  }

   /**
   * Get format
   * @return format
  **/
  @Schema(description = "")
  public String getFormat() {
    return format;
  }

  public void setFormat(String format) {
    this.format = format;
  }

  public ConditionForDescribeAlertStrategyOutput metricId(String metricId) {
    this.metricId = metricId;
    return this;
  }

   /**
   * Get metricId
   * @return metricId
  **/
  @Schema(description = "")
  public String getMetricId() {
    return metricId;
  }

  public void setMetricId(String metricId) {
    this.metricId = metricId;
  }

  public ConditionForDescribeAlertStrategyOutput operator(String operator) {
    this.operator = operator;
    return this;
  }

   /**
   * Get operator
   * @return operator
  **/
  @Schema(description = "")
  public String getOperator() {
    return operator;
  }

  public void setOperator(String operator) {
    this.operator = operator;
  }

  public ConditionForDescribeAlertStrategyOutput period(Long period) {
    this.period = period;
    return this;
  }

   /**
   * Get period
   * @return period
  **/
  @Schema(description = "")
  public Long getPeriod() {
    return period;
  }

  public void setPeriod(Long period) {
    this.period = period;
  }

  public ConditionForDescribeAlertStrategyOutput sensitivity(String sensitivity) {
    this.sensitivity = sensitivity;
    return this;
  }

   /**
   * Get sensitivity
   * @return sensitivity
  **/
  @Schema(description = "")
  public String getSensitivity() {
    return sensitivity;
  }

  public void setSensitivity(String sensitivity) {
    this.sensitivity = sensitivity;
  }

  public ConditionForDescribeAlertStrategyOutput thresholdType(String thresholdType) {
    this.thresholdType = thresholdType;
    return this;
  }

   /**
   * Get thresholdType
   * @return thresholdType
  **/
  @Schema(description = "")
  public String getThresholdType() {
    return thresholdType;
  }

  public void setThresholdType(String thresholdType) {
    this.thresholdType = thresholdType;
  }

  public ConditionForDescribeAlertStrategyOutput value(Double value) {
    this.value = value;
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @Schema(description = "")
  public Double getValue() {
    return value;
  }

  public void setValue(Double value) {
    this.value = value;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConditionForDescribeAlertStrategyOutput conditionForDescribeAlertStrategyOutput = (ConditionForDescribeAlertStrategyOutput) o;
    return Objects.equals(this.format, conditionForDescribeAlertStrategyOutput.format) &&
        Objects.equals(this.metricId, conditionForDescribeAlertStrategyOutput.metricId) &&
        Objects.equals(this.operator, conditionForDescribeAlertStrategyOutput.operator) &&
        Objects.equals(this.period, conditionForDescribeAlertStrategyOutput.period) &&
        Objects.equals(this.sensitivity, conditionForDescribeAlertStrategyOutput.sensitivity) &&
        Objects.equals(this.thresholdType, conditionForDescribeAlertStrategyOutput.thresholdType) &&
        Objects.equals(this.value, conditionForDescribeAlertStrategyOutput.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(format, metricId, operator, period, sensitivity, thresholdType, value);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConditionForDescribeAlertStrategyOutput {\n");
    
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    metricId: ").append(toIndentedString(metricId)).append("\n");
    sb.append("    operator: ").append(toIndentedString(operator)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    sensitivity: ").append(toIndentedString(sensitivity)).append("\n");
    sb.append("    thresholdType: ").append(toIndentedString(thresholdType)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
