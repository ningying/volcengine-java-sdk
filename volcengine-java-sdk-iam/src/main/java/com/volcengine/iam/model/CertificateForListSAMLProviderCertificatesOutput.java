/*
 * iam
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.iam.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CertificateForListSAMLProviderCertificatesOutput
 */



public class CertificateForListSAMLProviderCertificatesOutput {
  @SerializedName("CertificateId")
  private String certificateId = null;

  @SerializedName("CreateDate")
  private String createDate = null;

  @SerializedName("Issuer")
  private String issuer = null;

  @SerializedName("NotAfter")
  private String notAfter = null;

  @SerializedName("NotBefore")
  private String notBefore = null;

  @SerializedName("SerialNumber")
  private String serialNumber = null;

  @SerializedName("SignatureAlgorithm")
  private String signatureAlgorithm = null;

  @SerializedName("Subject")
  private String subject = null;

  @SerializedName("UpdateDate")
  private String updateDate = null;

  @SerializedName("Version")
  private String version = null;

  public CertificateForListSAMLProviderCertificatesOutput certificateId(String certificateId) {
    this.certificateId = certificateId;
    return this;
  }

   /**
   * Get certificateId
   * @return certificateId
  **/
  @Schema(description = "")
  public String getCertificateId() {
    return certificateId;
  }

  public void setCertificateId(String certificateId) {
    this.certificateId = certificateId;
  }

  public CertificateForListSAMLProviderCertificatesOutput createDate(String createDate) {
    this.createDate = createDate;
    return this;
  }

   /**
   * Get createDate
   * @return createDate
  **/
  @Schema(description = "")
  public String getCreateDate() {
    return createDate;
  }

  public void setCreateDate(String createDate) {
    this.createDate = createDate;
  }

  public CertificateForListSAMLProviderCertificatesOutput issuer(String issuer) {
    this.issuer = issuer;
    return this;
  }

   /**
   * Get issuer
   * @return issuer
  **/
  @Schema(description = "")
  public String getIssuer() {
    return issuer;
  }

  public void setIssuer(String issuer) {
    this.issuer = issuer;
  }

  public CertificateForListSAMLProviderCertificatesOutput notAfter(String notAfter) {
    this.notAfter = notAfter;
    return this;
  }

   /**
   * Get notAfter
   * @return notAfter
  **/
  @Schema(description = "")
  public String getNotAfter() {
    return notAfter;
  }

  public void setNotAfter(String notAfter) {
    this.notAfter = notAfter;
  }

  public CertificateForListSAMLProviderCertificatesOutput notBefore(String notBefore) {
    this.notBefore = notBefore;
    return this;
  }

   /**
   * Get notBefore
   * @return notBefore
  **/
  @Schema(description = "")
  public String getNotBefore() {
    return notBefore;
  }

  public void setNotBefore(String notBefore) {
    this.notBefore = notBefore;
  }

  public CertificateForListSAMLProviderCertificatesOutput serialNumber(String serialNumber) {
    this.serialNumber = serialNumber;
    return this;
  }

   /**
   * Get serialNumber
   * @return serialNumber
  **/
  @Schema(description = "")
  public String getSerialNumber() {
    return serialNumber;
  }

  public void setSerialNumber(String serialNumber) {
    this.serialNumber = serialNumber;
  }

  public CertificateForListSAMLProviderCertificatesOutput signatureAlgorithm(String signatureAlgorithm) {
    this.signatureAlgorithm = signatureAlgorithm;
    return this;
  }

   /**
   * Get signatureAlgorithm
   * @return signatureAlgorithm
  **/
  @Schema(description = "")
  public String getSignatureAlgorithm() {
    return signatureAlgorithm;
  }

  public void setSignatureAlgorithm(String signatureAlgorithm) {
    this.signatureAlgorithm = signatureAlgorithm;
  }

  public CertificateForListSAMLProviderCertificatesOutput subject(String subject) {
    this.subject = subject;
    return this;
  }

   /**
   * Get subject
   * @return subject
  **/
  @Schema(description = "")
  public String getSubject() {
    return subject;
  }

  public void setSubject(String subject) {
    this.subject = subject;
  }

  public CertificateForListSAMLProviderCertificatesOutput updateDate(String updateDate) {
    this.updateDate = updateDate;
    return this;
  }

   /**
   * Get updateDate
   * @return updateDate
  **/
  @Schema(description = "")
  public String getUpdateDate() {
    return updateDate;
  }

  public void setUpdateDate(String updateDate) {
    this.updateDate = updateDate;
  }

  public CertificateForListSAMLProviderCertificatesOutput version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @Schema(description = "")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CertificateForListSAMLProviderCertificatesOutput certificateForListSAMLProviderCertificatesOutput = (CertificateForListSAMLProviderCertificatesOutput) o;
    return Objects.equals(this.certificateId, certificateForListSAMLProviderCertificatesOutput.certificateId) &&
        Objects.equals(this.createDate, certificateForListSAMLProviderCertificatesOutput.createDate) &&
        Objects.equals(this.issuer, certificateForListSAMLProviderCertificatesOutput.issuer) &&
        Objects.equals(this.notAfter, certificateForListSAMLProviderCertificatesOutput.notAfter) &&
        Objects.equals(this.notBefore, certificateForListSAMLProviderCertificatesOutput.notBefore) &&
        Objects.equals(this.serialNumber, certificateForListSAMLProviderCertificatesOutput.serialNumber) &&
        Objects.equals(this.signatureAlgorithm, certificateForListSAMLProviderCertificatesOutput.signatureAlgorithm) &&
        Objects.equals(this.subject, certificateForListSAMLProviderCertificatesOutput.subject) &&
        Objects.equals(this.updateDate, certificateForListSAMLProviderCertificatesOutput.updateDate) &&
        Objects.equals(this.version, certificateForListSAMLProviderCertificatesOutput.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(certificateId, createDate, issuer, notAfter, notBefore, serialNumber, signatureAlgorithm, subject, updateDate, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CertificateForListSAMLProviderCertificatesOutput {\n");
    
    sb.append("    certificateId: ").append(toIndentedString(certificateId)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    issuer: ").append(toIndentedString(issuer)).append("\n");
    sb.append("    notAfter: ").append(toIndentedString(notAfter)).append("\n");
    sb.append("    notBefore: ").append(toIndentedString(notBefore)).append("\n");
    sb.append("    serialNumber: ").append(toIndentedString(serialNumber)).append("\n");
    sb.append("    signatureAlgorithm: ").append(toIndentedString(signatureAlgorithm)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    updateDate: ").append(toIndentedString(updateDate)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
