/*
 * iam
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.iam.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.iam.model.PolicyRoleForListEntitiesForPolicyOutput;
import com.volcengine.iam.model.PolicyUserForListEntitiesForPolicyOutput;
import com.volcengine.iam.model.PolicyUserGroupForListEntitiesForPolicyOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ListEntitiesForPolicyResponse
 */



public class ListEntitiesForPolicyResponse extends com.volcengine.model.AbstractResponse {
  @SerializedName("Limit")
  private Integer limit = null;

  @SerializedName("Offset")
  private Integer offset = null;

  @SerializedName("PolicyRoles")
  private List<PolicyRoleForListEntitiesForPolicyOutput> policyRoles = null;

  @SerializedName("PolicyUserGroups")
  private List<PolicyUserGroupForListEntitiesForPolicyOutput> policyUserGroups = null;

  @SerializedName("PolicyUsers")
  private List<PolicyUserForListEntitiesForPolicyOutput> policyUsers = null;

  @SerializedName("Total")
  private Integer total = null;

  public ListEntitiesForPolicyResponse limit(Integer limit) {
    this.limit = limit;
    return this;
  }

   /**
   * Get limit
   * @return limit
  **/
  @Schema(description = "")
  public Integer getLimit() {
    return limit;
  }

  public void setLimit(Integer limit) {
    this.limit = limit;
  }

  public ListEntitiesForPolicyResponse offset(Integer offset) {
    this.offset = offset;
    return this;
  }

   /**
   * Get offset
   * @return offset
  **/
  @Schema(description = "")
  public Integer getOffset() {
    return offset;
  }

  public void setOffset(Integer offset) {
    this.offset = offset;
  }

  public ListEntitiesForPolicyResponse policyRoles(List<PolicyRoleForListEntitiesForPolicyOutput> policyRoles) {
    this.policyRoles = policyRoles;
    return this;
  }

  public ListEntitiesForPolicyResponse addPolicyRolesItem(PolicyRoleForListEntitiesForPolicyOutput policyRolesItem) {
    if (this.policyRoles == null) {
      this.policyRoles = new ArrayList<PolicyRoleForListEntitiesForPolicyOutput>();
    }
    this.policyRoles.add(policyRolesItem);
    return this;
  }

   /**
   * Get policyRoles
   * @return policyRoles
  **/
  @Valid
  @Schema(description = "")
  public List<PolicyRoleForListEntitiesForPolicyOutput> getPolicyRoles() {
    return policyRoles;
  }

  public void setPolicyRoles(List<PolicyRoleForListEntitiesForPolicyOutput> policyRoles) {
    this.policyRoles = policyRoles;
  }

  public ListEntitiesForPolicyResponse policyUserGroups(List<PolicyUserGroupForListEntitiesForPolicyOutput> policyUserGroups) {
    this.policyUserGroups = policyUserGroups;
    return this;
  }

  public ListEntitiesForPolicyResponse addPolicyUserGroupsItem(PolicyUserGroupForListEntitiesForPolicyOutput policyUserGroupsItem) {
    if (this.policyUserGroups == null) {
      this.policyUserGroups = new ArrayList<PolicyUserGroupForListEntitiesForPolicyOutput>();
    }
    this.policyUserGroups.add(policyUserGroupsItem);
    return this;
  }

   /**
   * Get policyUserGroups
   * @return policyUserGroups
  **/
  @Valid
  @Schema(description = "")
  public List<PolicyUserGroupForListEntitiesForPolicyOutput> getPolicyUserGroups() {
    return policyUserGroups;
  }

  public void setPolicyUserGroups(List<PolicyUserGroupForListEntitiesForPolicyOutput> policyUserGroups) {
    this.policyUserGroups = policyUserGroups;
  }

  public ListEntitiesForPolicyResponse policyUsers(List<PolicyUserForListEntitiesForPolicyOutput> policyUsers) {
    this.policyUsers = policyUsers;
    return this;
  }

  public ListEntitiesForPolicyResponse addPolicyUsersItem(PolicyUserForListEntitiesForPolicyOutput policyUsersItem) {
    if (this.policyUsers == null) {
      this.policyUsers = new ArrayList<PolicyUserForListEntitiesForPolicyOutput>();
    }
    this.policyUsers.add(policyUsersItem);
    return this;
  }

   /**
   * Get policyUsers
   * @return policyUsers
  **/
  @Valid
  @Schema(description = "")
  public List<PolicyUserForListEntitiesForPolicyOutput> getPolicyUsers() {
    return policyUsers;
  }

  public void setPolicyUsers(List<PolicyUserForListEntitiesForPolicyOutput> policyUsers) {
    this.policyUsers = policyUsers;
  }

  public ListEntitiesForPolicyResponse total(Integer total) {
    this.total = total;
    return this;
  }

   /**
   * Get total
   * @return total
  **/
  @Schema(description = "")
  public Integer getTotal() {
    return total;
  }

  public void setTotal(Integer total) {
    this.total = total;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListEntitiesForPolicyResponse listEntitiesForPolicyResponse = (ListEntitiesForPolicyResponse) o;
    return Objects.equals(this.limit, listEntitiesForPolicyResponse.limit) &&
        Objects.equals(this.offset, listEntitiesForPolicyResponse.offset) &&
        Objects.equals(this.policyRoles, listEntitiesForPolicyResponse.policyRoles) &&
        Objects.equals(this.policyUserGroups, listEntitiesForPolicyResponse.policyUserGroups) &&
        Objects.equals(this.policyUsers, listEntitiesForPolicyResponse.policyUsers) &&
        Objects.equals(this.total, listEntitiesForPolicyResponse.total);
  }

  @Override
  public int hashCode() {
    return Objects.hash(limit, offset, policyRoles, policyUserGroups, policyUsers, total);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListEntitiesForPolicyResponse {\n");
    
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    policyRoles: ").append(toIndentedString(policyRoles)).append("\n");
    sb.append("    policyUserGroups: ").append(toIndentedString(policyUserGroups)).append("\n");
    sb.append("    policyUsers: ").append(toIndentedString(policyUsers)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
