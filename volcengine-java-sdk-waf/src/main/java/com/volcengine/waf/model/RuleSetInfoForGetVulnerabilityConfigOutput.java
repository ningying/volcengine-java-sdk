/*
 * waf
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.waf.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.waf.model.CommonDetectionForGetVulnerabilityConfigOutput;
import com.volcengine.waf.model.LogicalVulnerabilityForGetVulnerabilityConfigOutput;
import com.volcengine.waf.model.WebBackdoorForGetVulnerabilityConfigOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * RuleSetInfoForGetVulnerabilityConfigOutput
 */



public class RuleSetInfoForGetVulnerabilityConfigOutput {
  @SerializedName("CommonDetection")
  private CommonDetectionForGetVulnerabilityConfigOutput commonDetection = null;

  @SerializedName("LogicalVulnerability")
  private LogicalVulnerabilityForGetVulnerabilityConfigOutput logicalVulnerability = null;

  @SerializedName("WebBackdoor")
  private WebBackdoorForGetVulnerabilityConfigOutput webBackdoor = null;

  public RuleSetInfoForGetVulnerabilityConfigOutput commonDetection(CommonDetectionForGetVulnerabilityConfigOutput commonDetection) {
    this.commonDetection = commonDetection;
    return this;
  }

   /**
   * Get commonDetection
   * @return commonDetection
  **/
  @Valid
  @Schema(description = "")
  public CommonDetectionForGetVulnerabilityConfigOutput getCommonDetection() {
    return commonDetection;
  }

  public void setCommonDetection(CommonDetectionForGetVulnerabilityConfigOutput commonDetection) {
    this.commonDetection = commonDetection;
  }

  public RuleSetInfoForGetVulnerabilityConfigOutput logicalVulnerability(LogicalVulnerabilityForGetVulnerabilityConfigOutput logicalVulnerability) {
    this.logicalVulnerability = logicalVulnerability;
    return this;
  }

   /**
   * Get logicalVulnerability
   * @return logicalVulnerability
  **/
  @Valid
  @Schema(description = "")
  public LogicalVulnerabilityForGetVulnerabilityConfigOutput getLogicalVulnerability() {
    return logicalVulnerability;
  }

  public void setLogicalVulnerability(LogicalVulnerabilityForGetVulnerabilityConfigOutput logicalVulnerability) {
    this.logicalVulnerability = logicalVulnerability;
  }

  public RuleSetInfoForGetVulnerabilityConfigOutput webBackdoor(WebBackdoorForGetVulnerabilityConfigOutput webBackdoor) {
    this.webBackdoor = webBackdoor;
    return this;
  }

   /**
   * Get webBackdoor
   * @return webBackdoor
  **/
  @Valid
  @Schema(description = "")
  public WebBackdoorForGetVulnerabilityConfigOutput getWebBackdoor() {
    return webBackdoor;
  }

  public void setWebBackdoor(WebBackdoorForGetVulnerabilityConfigOutput webBackdoor) {
    this.webBackdoor = webBackdoor;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RuleSetInfoForGetVulnerabilityConfigOutput ruleSetInfoForGetVulnerabilityConfigOutput = (RuleSetInfoForGetVulnerabilityConfigOutput) o;
    return Objects.equals(this.commonDetection, ruleSetInfoForGetVulnerabilityConfigOutput.commonDetection) &&
        Objects.equals(this.logicalVulnerability, ruleSetInfoForGetVulnerabilityConfigOutput.logicalVulnerability) &&
        Objects.equals(this.webBackdoor, ruleSetInfoForGetVulnerabilityConfigOutput.webBackdoor);
  }

  @Override
  public int hashCode() {
    return Objects.hash(commonDetection, logicalVulnerability, webBackdoor);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RuleSetInfoForGetVulnerabilityConfigOutput {\n");
    
    sb.append("    commonDetection: ").append(toIndentedString(commonDetection)).append("\n");
    sb.append("    logicalVulnerability: ").append(toIndentedString(logicalVulnerability)).append("\n");
    sb.append("    webBackdoor: ").append(toIndentedString(webBackdoor)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
