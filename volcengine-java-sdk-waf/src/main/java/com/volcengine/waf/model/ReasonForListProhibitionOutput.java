/*
 * waf
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.waf.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ReasonForListProhibitionOutput
 */



public class ReasonForListProhibitionOutput {
  @SerializedName("black")
  private Integer black = null;

  @SerializedName("bot")
  private Integer bot = null;

  @SerializedName("geo_black")
  private Integer geoBlack = null;

  @SerializedName("httpflood")
  private Integer httpflood = null;

  @SerializedName("param_abnormal")
  private Integer paramAbnormal = null;

  @SerializedName("route_abnormal")
  private Integer routeAbnormal = null;

  @SerializedName("sensitive_info")
  private Integer sensitiveInfo = null;

  @SerializedName("web_vulnerability")
  private Integer webVulnerability = null;

  public ReasonForListProhibitionOutput black(Integer black) {
    this.black = black;
    return this;
  }

   /**
   * Get black
   * @return black
  **/
  @Schema(description = "")
  public Integer getBlack() {
    return black;
  }

  public void setBlack(Integer black) {
    this.black = black;
  }

  public ReasonForListProhibitionOutput bot(Integer bot) {
    this.bot = bot;
    return this;
  }

   /**
   * Get bot
   * @return bot
  **/
  @Schema(description = "")
  public Integer getBot() {
    return bot;
  }

  public void setBot(Integer bot) {
    this.bot = bot;
  }

  public ReasonForListProhibitionOutput geoBlack(Integer geoBlack) {
    this.geoBlack = geoBlack;
    return this;
  }

   /**
   * Get geoBlack
   * @return geoBlack
  **/
  @Schema(description = "")
  public Integer getGeoBlack() {
    return geoBlack;
  }

  public void setGeoBlack(Integer geoBlack) {
    this.geoBlack = geoBlack;
  }

  public ReasonForListProhibitionOutput httpflood(Integer httpflood) {
    this.httpflood = httpflood;
    return this;
  }

   /**
   * Get httpflood
   * @return httpflood
  **/
  @Schema(description = "")
  public Integer getHttpflood() {
    return httpflood;
  }

  public void setHttpflood(Integer httpflood) {
    this.httpflood = httpflood;
  }

  public ReasonForListProhibitionOutput paramAbnormal(Integer paramAbnormal) {
    this.paramAbnormal = paramAbnormal;
    return this;
  }

   /**
   * Get paramAbnormal
   * @return paramAbnormal
  **/
  @Schema(description = "")
  public Integer getParamAbnormal() {
    return paramAbnormal;
  }

  public void setParamAbnormal(Integer paramAbnormal) {
    this.paramAbnormal = paramAbnormal;
  }

  public ReasonForListProhibitionOutput routeAbnormal(Integer routeAbnormal) {
    this.routeAbnormal = routeAbnormal;
    return this;
  }

   /**
   * Get routeAbnormal
   * @return routeAbnormal
  **/
  @Schema(description = "")
  public Integer getRouteAbnormal() {
    return routeAbnormal;
  }

  public void setRouteAbnormal(Integer routeAbnormal) {
    this.routeAbnormal = routeAbnormal;
  }

  public ReasonForListProhibitionOutput sensitiveInfo(Integer sensitiveInfo) {
    this.sensitiveInfo = sensitiveInfo;
    return this;
  }

   /**
   * Get sensitiveInfo
   * @return sensitiveInfo
  **/
  @Schema(description = "")
  public Integer getSensitiveInfo() {
    return sensitiveInfo;
  }

  public void setSensitiveInfo(Integer sensitiveInfo) {
    this.sensitiveInfo = sensitiveInfo;
  }

  public ReasonForListProhibitionOutput webVulnerability(Integer webVulnerability) {
    this.webVulnerability = webVulnerability;
    return this;
  }

   /**
   * Get webVulnerability
   * @return webVulnerability
  **/
  @Schema(description = "")
  public Integer getWebVulnerability() {
    return webVulnerability;
  }

  public void setWebVulnerability(Integer webVulnerability) {
    this.webVulnerability = webVulnerability;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReasonForListProhibitionOutput reasonForListProhibitionOutput = (ReasonForListProhibitionOutput) o;
    return Objects.equals(this.black, reasonForListProhibitionOutput.black) &&
        Objects.equals(this.bot, reasonForListProhibitionOutput.bot) &&
        Objects.equals(this.geoBlack, reasonForListProhibitionOutput.geoBlack) &&
        Objects.equals(this.httpflood, reasonForListProhibitionOutput.httpflood) &&
        Objects.equals(this.paramAbnormal, reasonForListProhibitionOutput.paramAbnormal) &&
        Objects.equals(this.routeAbnormal, reasonForListProhibitionOutput.routeAbnormal) &&
        Objects.equals(this.sensitiveInfo, reasonForListProhibitionOutput.sensitiveInfo) &&
        Objects.equals(this.webVulnerability, reasonForListProhibitionOutput.webVulnerability);
  }

  @Override
  public int hashCode() {
    return Objects.hash(black, bot, geoBlack, httpflood, paramAbnormal, routeAbnormal, sensitiveInfo, webVulnerability);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReasonForListProhibitionOutput {\n");
    
    sb.append("    black: ").append(toIndentedString(black)).append("\n");
    sb.append("    bot: ").append(toIndentedString(bot)).append("\n");
    sb.append("    geoBlack: ").append(toIndentedString(geoBlack)).append("\n");
    sb.append("    httpflood: ").append(toIndentedString(httpflood)).append("\n");
    sb.append("    paramAbnormal: ").append(toIndentedString(paramAbnormal)).append("\n");
    sb.append("    routeAbnormal: ").append(toIndentedString(routeAbnormal)).append("\n");
    sb.append("    sensitiveInfo: ").append(toIndentedString(sensitiveInfo)).append("\n");
    sb.append("    webVulnerability: ").append(toIndentedString(webVulnerability)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
