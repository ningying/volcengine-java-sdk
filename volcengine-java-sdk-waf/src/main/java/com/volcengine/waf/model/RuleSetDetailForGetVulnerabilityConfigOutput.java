/*
 * waf
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.waf.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * RuleSetDetailForGetVulnerabilityConfigOutput
 */



public class RuleSetDetailForGetVulnerabilityConfigOutput {
  @SerializedName("Description")
  private String description = null;

  @SerializedName("EnableRuleCount")
  private Integer enableRuleCount = null;

  @SerializedName("RuleCount")
  private Integer ruleCount = null;

  @SerializedName("Subcategory")
  private String subcategory = null;

  public RuleSetDetailForGetVulnerabilityConfigOutput description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public RuleSetDetailForGetVulnerabilityConfigOutput enableRuleCount(Integer enableRuleCount) {
    this.enableRuleCount = enableRuleCount;
    return this;
  }

   /**
   * Get enableRuleCount
   * @return enableRuleCount
  **/
  @Schema(description = "")
  public Integer getEnableRuleCount() {
    return enableRuleCount;
  }

  public void setEnableRuleCount(Integer enableRuleCount) {
    this.enableRuleCount = enableRuleCount;
  }

  public RuleSetDetailForGetVulnerabilityConfigOutput ruleCount(Integer ruleCount) {
    this.ruleCount = ruleCount;
    return this;
  }

   /**
   * Get ruleCount
   * @return ruleCount
  **/
  @Schema(description = "")
  public Integer getRuleCount() {
    return ruleCount;
  }

  public void setRuleCount(Integer ruleCount) {
    this.ruleCount = ruleCount;
  }

  public RuleSetDetailForGetVulnerabilityConfigOutput subcategory(String subcategory) {
    this.subcategory = subcategory;
    return this;
  }

   /**
   * Get subcategory
   * @return subcategory
  **/
  @Schema(description = "")
  public String getSubcategory() {
    return subcategory;
  }

  public void setSubcategory(String subcategory) {
    this.subcategory = subcategory;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RuleSetDetailForGetVulnerabilityConfigOutput ruleSetDetailForGetVulnerabilityConfigOutput = (RuleSetDetailForGetVulnerabilityConfigOutput) o;
    return Objects.equals(this.description, ruleSetDetailForGetVulnerabilityConfigOutput.description) &&
        Objects.equals(this.enableRuleCount, ruleSetDetailForGetVulnerabilityConfigOutput.enableRuleCount) &&
        Objects.equals(this.ruleCount, ruleSetDetailForGetVulnerabilityConfigOutput.ruleCount) &&
        Objects.equals(this.subcategory, ruleSetDetailForGetVulnerabilityConfigOutput.subcategory);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, enableRuleCount, ruleCount, subcategory);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RuleSetDetailForGetVulnerabilityConfigOutput {\n");
    
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    enableRuleCount: ").append(toIndentedString(enableRuleCount)).append("\n");
    sb.append("    ruleCount: ").append(toIndentedString(ruleCount)).append("\n");
    sb.append("    subcategory: ").append(toIndentedString(subcategory)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
