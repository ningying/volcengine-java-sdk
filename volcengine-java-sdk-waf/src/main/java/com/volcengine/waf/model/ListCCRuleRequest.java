/*
 * waf
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.waf.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ListCCRuleRequest
 */



public class ListCCRuleRequest {
  @SerializedName("CCType")
  private List<Integer> ccType = null;

  @SerializedName("Host")
  private String host = null;

  @SerializedName("Page")
  private Integer page = null;

  @SerializedName("PageSize")
  private Integer pageSize = null;

  @SerializedName("PathOrderBy")
  private String pathOrderBy = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("RuleName")
  private String ruleName = null;

  @SerializedName("RuleTag")
  private String ruleTag = null;

  @SerializedName("Url")
  private String url = null;

  public ListCCRuleRequest ccType(List<Integer> ccType) {
    this.ccType = ccType;
    return this;
  }

  public ListCCRuleRequest addCcTypeItem(Integer ccTypeItem) {
    if (this.ccType == null) {
      this.ccType = new ArrayList<Integer>();
    }
    this.ccType.add(ccTypeItem);
    return this;
  }

   /**
   * Get ccType
   * @return ccType
  **/
  @Schema(description = "")
  public List<Integer> getCcType() {
    return ccType;
  }

  public void setCcType(List<Integer> ccType) {
    this.ccType = ccType;
  }

  public ListCCRuleRequest host(String host) {
    this.host = host;
    return this;
  }

   /**
   * Get host
   * @return host
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getHost() {
    return host;
  }

  public void setHost(String host) {
    this.host = host;
  }

  public ListCCRuleRequest page(Integer page) {
    this.page = page;
    return this;
  }

   /**
   * Get page
   * @return page
  **/
  @Schema(description = "")
  public Integer getPage() {
    return page;
  }

  public void setPage(Integer page) {
    this.page = page;
  }

  public ListCCRuleRequest pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @Schema(description = "")
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  public ListCCRuleRequest pathOrderBy(String pathOrderBy) {
    this.pathOrderBy = pathOrderBy;
    return this;
  }

   /**
   * Get pathOrderBy
   * @return pathOrderBy
  **/
  @Schema(description = "")
  public String getPathOrderBy() {
    return pathOrderBy;
  }

  public void setPathOrderBy(String pathOrderBy) {
    this.pathOrderBy = pathOrderBy;
  }

  public ListCCRuleRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public ListCCRuleRequest ruleName(String ruleName) {
    this.ruleName = ruleName;
    return this;
  }

   /**
   * Get ruleName
   * @return ruleName
  **/
  @Schema(description = "")
  public String getRuleName() {
    return ruleName;
  }

  public void setRuleName(String ruleName) {
    this.ruleName = ruleName;
  }

  public ListCCRuleRequest ruleTag(String ruleTag) {
    this.ruleTag = ruleTag;
    return this;
  }

   /**
   * Get ruleTag
   * @return ruleTag
  **/
  @Schema(description = "")
  public String getRuleTag() {
    return ruleTag;
  }

  public void setRuleTag(String ruleTag) {
    this.ruleTag = ruleTag;
  }

  public ListCCRuleRequest url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @Schema(description = "")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListCCRuleRequest listCCRuleRequest = (ListCCRuleRequest) o;
    return Objects.equals(this.ccType, listCCRuleRequest.ccType) &&
        Objects.equals(this.host, listCCRuleRequest.host) &&
        Objects.equals(this.page, listCCRuleRequest.page) &&
        Objects.equals(this.pageSize, listCCRuleRequest.pageSize) &&
        Objects.equals(this.pathOrderBy, listCCRuleRequest.pathOrderBy) &&
        Objects.equals(this.projectName, listCCRuleRequest.projectName) &&
        Objects.equals(this.ruleName, listCCRuleRequest.ruleName) &&
        Objects.equals(this.ruleTag, listCCRuleRequest.ruleTag) &&
        Objects.equals(this.url, listCCRuleRequest.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ccType, host, page, pageSize, pathOrderBy, projectName, ruleName, ruleTag, url);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListCCRuleRequest {\n");
    
    sb.append("    ccType: ").append(toIndentedString(ccType)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    page: ").append(toIndentedString(page)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    pathOrderBy: ").append(toIndentedString(pathOrderBy)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    ruleName: ").append(toIndentedString(ruleName)).append("\n");
    sb.append("    ruleTag: ").append(toIndentedString(ruleTag)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
