/*
 * fwcenter
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.fwcenter.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DataForDescribeControlPolicyOutput
 */



public class DataForDescribeControlPolicyOutput {
  @SerializedName("AccountId")
  private String accountId = null;

  @SerializedName("Action")
  private String action = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("DestPort")
  private String destPort = null;

  @SerializedName("DestPortGroupType")
  private String destPortGroupType = null;

  @SerializedName("DestPortList")
  private List<String> destPortList = null;

  @SerializedName("DestPortType")
  private String destPortType = null;

  @SerializedName("Destination")
  private String destination = null;

  @SerializedName("DestinationCidrList")
  private List<String> destinationCidrList = null;

  @SerializedName("DestinationGroupType")
  private String destinationGroupType = null;

  @SerializedName("DestinationType")
  private String destinationType = null;

  @SerializedName("Direction")
  private String direction = null;

  @SerializedName("EffectStatus")
  private Integer effectStatus = null;

  @SerializedName("EndTime")
  private Integer endTime = null;

  @SerializedName("HitCnt")
  private Integer hitCnt = null;

  @SerializedName("IsEffected")
  private Boolean isEffected = null;

  @SerializedName("Prio")
  private Integer prio = null;

  @SerializedName("Proto")
  private String proto = null;

  @SerializedName("RepeatDays")
  private List<Integer> repeatDays = null;

  @SerializedName("RepeatEndTime")
  private String repeatEndTime = null;

  @SerializedName("RepeatStartTime")
  private String repeatStartTime = null;

  @SerializedName("RepeatType")
  private String repeatType = null;

  @SerializedName("RuleId")
  private String ruleId = null;

  @SerializedName("Source")
  private String source = null;

  @SerializedName("SourceCidrList")
  private List<String> sourceCidrList = null;

  @SerializedName("SourceGroupType")
  private String sourceGroupType = null;

  @SerializedName("SourceType")
  private String sourceType = null;

  @SerializedName("StartTime")
  private Integer startTime = null;

  @SerializedName("Status")
  private Boolean status = null;

  @SerializedName("UpdateTime")
  private Integer updateTime = null;

  @SerializedName("UseCount")
  private Integer useCount = null;

  public DataForDescribeControlPolicyOutput accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @Schema(description = "")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public DataForDescribeControlPolicyOutput action(String action) {
    this.action = action;
    return this;
  }

   /**
   * Get action
   * @return action
  **/
  @Schema(description = "")
  public String getAction() {
    return action;
  }

  public void setAction(String action) {
    this.action = action;
  }

  public DataForDescribeControlPolicyOutput description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public DataForDescribeControlPolicyOutput destPort(String destPort) {
    this.destPort = destPort;
    return this;
  }

   /**
   * Get destPort
   * @return destPort
  **/
  @Schema(description = "")
  public String getDestPort() {
    return destPort;
  }

  public void setDestPort(String destPort) {
    this.destPort = destPort;
  }

  public DataForDescribeControlPolicyOutput destPortGroupType(String destPortGroupType) {
    this.destPortGroupType = destPortGroupType;
    return this;
  }

   /**
   * Get destPortGroupType
   * @return destPortGroupType
  **/
  @Schema(description = "")
  public String getDestPortGroupType() {
    return destPortGroupType;
  }

  public void setDestPortGroupType(String destPortGroupType) {
    this.destPortGroupType = destPortGroupType;
  }

  public DataForDescribeControlPolicyOutput destPortList(List<String> destPortList) {
    this.destPortList = destPortList;
    return this;
  }

  public DataForDescribeControlPolicyOutput addDestPortListItem(String destPortListItem) {
    if (this.destPortList == null) {
      this.destPortList = new ArrayList<String>();
    }
    this.destPortList.add(destPortListItem);
    return this;
  }

   /**
   * Get destPortList
   * @return destPortList
  **/
  @Schema(description = "")
  public List<String> getDestPortList() {
    return destPortList;
  }

  public void setDestPortList(List<String> destPortList) {
    this.destPortList = destPortList;
  }

  public DataForDescribeControlPolicyOutput destPortType(String destPortType) {
    this.destPortType = destPortType;
    return this;
  }

   /**
   * Get destPortType
   * @return destPortType
  **/
  @Schema(description = "")
  public String getDestPortType() {
    return destPortType;
  }

  public void setDestPortType(String destPortType) {
    this.destPortType = destPortType;
  }

  public DataForDescribeControlPolicyOutput destination(String destination) {
    this.destination = destination;
    return this;
  }

   /**
   * Get destination
   * @return destination
  **/
  @Schema(description = "")
  public String getDestination() {
    return destination;
  }

  public void setDestination(String destination) {
    this.destination = destination;
  }

  public DataForDescribeControlPolicyOutput destinationCidrList(List<String> destinationCidrList) {
    this.destinationCidrList = destinationCidrList;
    return this;
  }

  public DataForDescribeControlPolicyOutput addDestinationCidrListItem(String destinationCidrListItem) {
    if (this.destinationCidrList == null) {
      this.destinationCidrList = new ArrayList<String>();
    }
    this.destinationCidrList.add(destinationCidrListItem);
    return this;
  }

   /**
   * Get destinationCidrList
   * @return destinationCidrList
  **/
  @Schema(description = "")
  public List<String> getDestinationCidrList() {
    return destinationCidrList;
  }

  public void setDestinationCidrList(List<String> destinationCidrList) {
    this.destinationCidrList = destinationCidrList;
  }

  public DataForDescribeControlPolicyOutput destinationGroupType(String destinationGroupType) {
    this.destinationGroupType = destinationGroupType;
    return this;
  }

   /**
   * Get destinationGroupType
   * @return destinationGroupType
  **/
  @Schema(description = "")
  public String getDestinationGroupType() {
    return destinationGroupType;
  }

  public void setDestinationGroupType(String destinationGroupType) {
    this.destinationGroupType = destinationGroupType;
  }

  public DataForDescribeControlPolicyOutput destinationType(String destinationType) {
    this.destinationType = destinationType;
    return this;
  }

   /**
   * Get destinationType
   * @return destinationType
  **/
  @Schema(description = "")
  public String getDestinationType() {
    return destinationType;
  }

  public void setDestinationType(String destinationType) {
    this.destinationType = destinationType;
  }

  public DataForDescribeControlPolicyOutput direction(String direction) {
    this.direction = direction;
    return this;
  }

   /**
   * Get direction
   * @return direction
  **/
  @Schema(description = "")
  public String getDirection() {
    return direction;
  }

  public void setDirection(String direction) {
    this.direction = direction;
  }

  public DataForDescribeControlPolicyOutput effectStatus(Integer effectStatus) {
    this.effectStatus = effectStatus;
    return this;
  }

   /**
   * Get effectStatus
   * @return effectStatus
  **/
  @Schema(description = "")
  public Integer getEffectStatus() {
    return effectStatus;
  }

  public void setEffectStatus(Integer effectStatus) {
    this.effectStatus = effectStatus;
  }

  public DataForDescribeControlPolicyOutput endTime(Integer endTime) {
    this.endTime = endTime;
    return this;
  }

   /**
   * Get endTime
   * @return endTime
  **/
  @Schema(description = "")
  public Integer getEndTime() {
    return endTime;
  }

  public void setEndTime(Integer endTime) {
    this.endTime = endTime;
  }

  public DataForDescribeControlPolicyOutput hitCnt(Integer hitCnt) {
    this.hitCnt = hitCnt;
    return this;
  }

   /**
   * Get hitCnt
   * @return hitCnt
  **/
  @Schema(description = "")
  public Integer getHitCnt() {
    return hitCnt;
  }

  public void setHitCnt(Integer hitCnt) {
    this.hitCnt = hitCnt;
  }

  public DataForDescribeControlPolicyOutput isEffected(Boolean isEffected) {
    this.isEffected = isEffected;
    return this;
  }

   /**
   * Get isEffected
   * @return isEffected
  **/
  @Schema(description = "")
  public Boolean isIsEffected() {
    return isEffected;
  }

  public void setIsEffected(Boolean isEffected) {
    this.isEffected = isEffected;
  }

  public DataForDescribeControlPolicyOutput prio(Integer prio) {
    this.prio = prio;
    return this;
  }

   /**
   * Get prio
   * @return prio
  **/
  @Schema(description = "")
  public Integer getPrio() {
    return prio;
  }

  public void setPrio(Integer prio) {
    this.prio = prio;
  }

  public DataForDescribeControlPolicyOutput proto(String proto) {
    this.proto = proto;
    return this;
  }

   /**
   * Get proto
   * @return proto
  **/
  @Schema(description = "")
  public String getProto() {
    return proto;
  }

  public void setProto(String proto) {
    this.proto = proto;
  }

  public DataForDescribeControlPolicyOutput repeatDays(List<Integer> repeatDays) {
    this.repeatDays = repeatDays;
    return this;
  }

  public DataForDescribeControlPolicyOutput addRepeatDaysItem(Integer repeatDaysItem) {
    if (this.repeatDays == null) {
      this.repeatDays = new ArrayList<Integer>();
    }
    this.repeatDays.add(repeatDaysItem);
    return this;
  }

   /**
   * Get repeatDays
   * @return repeatDays
  **/
  @Schema(description = "")
  public List<Integer> getRepeatDays() {
    return repeatDays;
  }

  public void setRepeatDays(List<Integer> repeatDays) {
    this.repeatDays = repeatDays;
  }

  public DataForDescribeControlPolicyOutput repeatEndTime(String repeatEndTime) {
    this.repeatEndTime = repeatEndTime;
    return this;
  }

   /**
   * Get repeatEndTime
   * @return repeatEndTime
  **/
  @Schema(description = "")
  public String getRepeatEndTime() {
    return repeatEndTime;
  }

  public void setRepeatEndTime(String repeatEndTime) {
    this.repeatEndTime = repeatEndTime;
  }

  public DataForDescribeControlPolicyOutput repeatStartTime(String repeatStartTime) {
    this.repeatStartTime = repeatStartTime;
    return this;
  }

   /**
   * Get repeatStartTime
   * @return repeatStartTime
  **/
  @Schema(description = "")
  public String getRepeatStartTime() {
    return repeatStartTime;
  }

  public void setRepeatStartTime(String repeatStartTime) {
    this.repeatStartTime = repeatStartTime;
  }

  public DataForDescribeControlPolicyOutput repeatType(String repeatType) {
    this.repeatType = repeatType;
    return this;
  }

   /**
   * Get repeatType
   * @return repeatType
  **/
  @Schema(description = "")
  public String getRepeatType() {
    return repeatType;
  }

  public void setRepeatType(String repeatType) {
    this.repeatType = repeatType;
  }

  public DataForDescribeControlPolicyOutput ruleId(String ruleId) {
    this.ruleId = ruleId;
    return this;
  }

   /**
   * Get ruleId
   * @return ruleId
  **/
  @Schema(description = "")
  public String getRuleId() {
    return ruleId;
  }

  public void setRuleId(String ruleId) {
    this.ruleId = ruleId;
  }

  public DataForDescribeControlPolicyOutput source(String source) {
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @Schema(description = "")
  public String getSource() {
    return source;
  }

  public void setSource(String source) {
    this.source = source;
  }

  public DataForDescribeControlPolicyOutput sourceCidrList(List<String> sourceCidrList) {
    this.sourceCidrList = sourceCidrList;
    return this;
  }

  public DataForDescribeControlPolicyOutput addSourceCidrListItem(String sourceCidrListItem) {
    if (this.sourceCidrList == null) {
      this.sourceCidrList = new ArrayList<String>();
    }
    this.sourceCidrList.add(sourceCidrListItem);
    return this;
  }

   /**
   * Get sourceCidrList
   * @return sourceCidrList
  **/
  @Schema(description = "")
  public List<String> getSourceCidrList() {
    return sourceCidrList;
  }

  public void setSourceCidrList(List<String> sourceCidrList) {
    this.sourceCidrList = sourceCidrList;
  }

  public DataForDescribeControlPolicyOutput sourceGroupType(String sourceGroupType) {
    this.sourceGroupType = sourceGroupType;
    return this;
  }

   /**
   * Get sourceGroupType
   * @return sourceGroupType
  **/
  @Schema(description = "")
  public String getSourceGroupType() {
    return sourceGroupType;
  }

  public void setSourceGroupType(String sourceGroupType) {
    this.sourceGroupType = sourceGroupType;
  }

  public DataForDescribeControlPolicyOutput sourceType(String sourceType) {
    this.sourceType = sourceType;
    return this;
  }

   /**
   * Get sourceType
   * @return sourceType
  **/
  @Schema(description = "")
  public String getSourceType() {
    return sourceType;
  }

  public void setSourceType(String sourceType) {
    this.sourceType = sourceType;
  }

  public DataForDescribeControlPolicyOutput startTime(Integer startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @Schema(description = "")
  public Integer getStartTime() {
    return startTime;
  }

  public void setStartTime(Integer startTime) {
    this.startTime = startTime;
  }

  public DataForDescribeControlPolicyOutput status(Boolean status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public Boolean isStatus() {
    return status;
  }

  public void setStatus(Boolean status) {
    this.status = status;
  }

  public DataForDescribeControlPolicyOutput updateTime(Integer updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @Schema(description = "")
  public Integer getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(Integer updateTime) {
    this.updateTime = updateTime;
  }

  public DataForDescribeControlPolicyOutput useCount(Integer useCount) {
    this.useCount = useCount;
    return this;
  }

   /**
   * Get useCount
   * @return useCount
  **/
  @Schema(description = "")
  public Integer getUseCount() {
    return useCount;
  }

  public void setUseCount(Integer useCount) {
    this.useCount = useCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataForDescribeControlPolicyOutput dataForDescribeControlPolicyOutput = (DataForDescribeControlPolicyOutput) o;
    return Objects.equals(this.accountId, dataForDescribeControlPolicyOutput.accountId) &&
        Objects.equals(this.action, dataForDescribeControlPolicyOutput.action) &&
        Objects.equals(this.description, dataForDescribeControlPolicyOutput.description) &&
        Objects.equals(this.destPort, dataForDescribeControlPolicyOutput.destPort) &&
        Objects.equals(this.destPortGroupType, dataForDescribeControlPolicyOutput.destPortGroupType) &&
        Objects.equals(this.destPortList, dataForDescribeControlPolicyOutput.destPortList) &&
        Objects.equals(this.destPortType, dataForDescribeControlPolicyOutput.destPortType) &&
        Objects.equals(this.destination, dataForDescribeControlPolicyOutput.destination) &&
        Objects.equals(this.destinationCidrList, dataForDescribeControlPolicyOutput.destinationCidrList) &&
        Objects.equals(this.destinationGroupType, dataForDescribeControlPolicyOutput.destinationGroupType) &&
        Objects.equals(this.destinationType, dataForDescribeControlPolicyOutput.destinationType) &&
        Objects.equals(this.direction, dataForDescribeControlPolicyOutput.direction) &&
        Objects.equals(this.effectStatus, dataForDescribeControlPolicyOutput.effectStatus) &&
        Objects.equals(this.endTime, dataForDescribeControlPolicyOutput.endTime) &&
        Objects.equals(this.hitCnt, dataForDescribeControlPolicyOutput.hitCnt) &&
        Objects.equals(this.isEffected, dataForDescribeControlPolicyOutput.isEffected) &&
        Objects.equals(this.prio, dataForDescribeControlPolicyOutput.prio) &&
        Objects.equals(this.proto, dataForDescribeControlPolicyOutput.proto) &&
        Objects.equals(this.repeatDays, dataForDescribeControlPolicyOutput.repeatDays) &&
        Objects.equals(this.repeatEndTime, dataForDescribeControlPolicyOutput.repeatEndTime) &&
        Objects.equals(this.repeatStartTime, dataForDescribeControlPolicyOutput.repeatStartTime) &&
        Objects.equals(this.repeatType, dataForDescribeControlPolicyOutput.repeatType) &&
        Objects.equals(this.ruleId, dataForDescribeControlPolicyOutput.ruleId) &&
        Objects.equals(this.source, dataForDescribeControlPolicyOutput.source) &&
        Objects.equals(this.sourceCidrList, dataForDescribeControlPolicyOutput.sourceCidrList) &&
        Objects.equals(this.sourceGroupType, dataForDescribeControlPolicyOutput.sourceGroupType) &&
        Objects.equals(this.sourceType, dataForDescribeControlPolicyOutput.sourceType) &&
        Objects.equals(this.startTime, dataForDescribeControlPolicyOutput.startTime) &&
        Objects.equals(this.status, dataForDescribeControlPolicyOutput.status) &&
        Objects.equals(this.updateTime, dataForDescribeControlPolicyOutput.updateTime) &&
        Objects.equals(this.useCount, dataForDescribeControlPolicyOutput.useCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, action, description, destPort, destPortGroupType, destPortList, destPortType, destination, destinationCidrList, destinationGroupType, destinationType, direction, effectStatus, endTime, hitCnt, isEffected, prio, proto, repeatDays, repeatEndTime, repeatStartTime, repeatType, ruleId, source, sourceCidrList, sourceGroupType, sourceType, startTime, status, updateTime, useCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataForDescribeControlPolicyOutput {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    destPort: ").append(toIndentedString(destPort)).append("\n");
    sb.append("    destPortGroupType: ").append(toIndentedString(destPortGroupType)).append("\n");
    sb.append("    destPortList: ").append(toIndentedString(destPortList)).append("\n");
    sb.append("    destPortType: ").append(toIndentedString(destPortType)).append("\n");
    sb.append("    destination: ").append(toIndentedString(destination)).append("\n");
    sb.append("    destinationCidrList: ").append(toIndentedString(destinationCidrList)).append("\n");
    sb.append("    destinationGroupType: ").append(toIndentedString(destinationGroupType)).append("\n");
    sb.append("    destinationType: ").append(toIndentedString(destinationType)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    effectStatus: ").append(toIndentedString(effectStatus)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    hitCnt: ").append(toIndentedString(hitCnt)).append("\n");
    sb.append("    isEffected: ").append(toIndentedString(isEffected)).append("\n");
    sb.append("    prio: ").append(toIndentedString(prio)).append("\n");
    sb.append("    proto: ").append(toIndentedString(proto)).append("\n");
    sb.append("    repeatDays: ").append(toIndentedString(repeatDays)).append("\n");
    sb.append("    repeatEndTime: ").append(toIndentedString(repeatEndTime)).append("\n");
    sb.append("    repeatStartTime: ").append(toIndentedString(repeatStartTime)).append("\n");
    sb.append("    repeatType: ").append(toIndentedString(repeatType)).append("\n");
    sb.append("    ruleId: ").append(toIndentedString(ruleId)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    sourceCidrList: ").append(toIndentedString(sourceCidrList)).append("\n");
    sb.append("    sourceGroupType: ").append(toIndentedString(sourceGroupType)).append("\n");
    sb.append("    sourceType: ").append(toIndentedString(sourceType)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    useCount: ").append(toIndentedString(useCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
