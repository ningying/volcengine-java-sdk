/*
 * vpn
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vpn.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CreateSslVpnClientCertRequest
 */



public class CreateSslVpnClientCertRequest {
  @SerializedName("ClientToken")
  private String clientToken = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("SslVpnClientCertName")
  private String sslVpnClientCertName = null;

  @SerializedName("SslVpnServerId")
  private String sslVpnServerId = null;

  public CreateSslVpnClientCertRequest clientToken(String clientToken) {
    this.clientToken = clientToken;
    return this;
  }

   /**
   * Get clientToken
   * @return clientToken
  **/
  @Schema(description = "")
  public String getClientToken() {
    return clientToken;
  }

  public void setClientToken(String clientToken) {
    this.clientToken = clientToken;
  }

  public CreateSslVpnClientCertRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CreateSslVpnClientCertRequest sslVpnClientCertName(String sslVpnClientCertName) {
    this.sslVpnClientCertName = sslVpnClientCertName;
    return this;
  }

   /**
   * Get sslVpnClientCertName
   * @return sslVpnClientCertName
  **/
  @Schema(description = "")
  public String getSslVpnClientCertName() {
    return sslVpnClientCertName;
  }

  public void setSslVpnClientCertName(String sslVpnClientCertName) {
    this.sslVpnClientCertName = sslVpnClientCertName;
  }

  public CreateSslVpnClientCertRequest sslVpnServerId(String sslVpnServerId) {
    this.sslVpnServerId = sslVpnServerId;
    return this;
  }

   /**
   * Get sslVpnServerId
   * @return sslVpnServerId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getSslVpnServerId() {
    return sslVpnServerId;
  }

  public void setSslVpnServerId(String sslVpnServerId) {
    this.sslVpnServerId = sslVpnServerId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateSslVpnClientCertRequest createSslVpnClientCertRequest = (CreateSslVpnClientCertRequest) o;
    return Objects.equals(this.clientToken, createSslVpnClientCertRequest.clientToken) &&
        Objects.equals(this.description, createSslVpnClientCertRequest.description) &&
        Objects.equals(this.sslVpnClientCertName, createSslVpnClientCertRequest.sslVpnClientCertName) &&
        Objects.equals(this.sslVpnServerId, createSslVpnClientCertRequest.sslVpnServerId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientToken, description, sslVpnClientCertName, sslVpnServerId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateSslVpnClientCertRequest {\n");
    
    sb.append("    clientToken: ").append(toIndentedString(clientToken)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    sslVpnClientCertName: ").append(toIndentedString(sslVpnClientCertName)).append("\n");
    sb.append("    sslVpnServerId: ").append(toIndentedString(sslVpnServerId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
