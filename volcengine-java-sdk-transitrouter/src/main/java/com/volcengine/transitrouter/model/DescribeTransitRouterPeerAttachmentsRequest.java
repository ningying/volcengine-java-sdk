/*
 * transitrouter
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.transitrouter.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.transitrouter.model.TagFilterForDescribeTransitRouterPeerAttachmentsInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeTransitRouterPeerAttachmentsRequest
 */



public class DescribeTransitRouterPeerAttachmentsRequest {
  @SerializedName("PageNumber")
  private Integer pageNumber = null;

  @SerializedName("PageSize")
  private Integer pageSize = null;

  @SerializedName("PeerTransitRouterId")
  private String peerTransitRouterId = null;

  @SerializedName("PeerTransitRouterRegionId")
  private String peerTransitRouterRegionId = null;

  @SerializedName("TagFilters")
  private List<TagFilterForDescribeTransitRouterPeerAttachmentsInput> tagFilters = null;

  @SerializedName("TransitRouterAttachmentIds")
  private List<String> transitRouterAttachmentIds = null;

  @SerializedName("TransitRouterAttachmentName")
  private String transitRouterAttachmentName = null;

  @SerializedName("TransitRouterId")
  private String transitRouterId = null;

  public DescribeTransitRouterPeerAttachmentsRequest pageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

   /**
   * Get pageNumber
   * @return pageNumber
  **/
  @Schema(description = "")
  public Integer getPageNumber() {
    return pageNumber;
  }

  public void setPageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
  }

  public DescribeTransitRouterPeerAttachmentsRequest pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @Schema(description = "")
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  public DescribeTransitRouterPeerAttachmentsRequest peerTransitRouterId(String peerTransitRouterId) {
    this.peerTransitRouterId = peerTransitRouterId;
    return this;
  }

   /**
   * Get peerTransitRouterId
   * @return peerTransitRouterId
  **/
  @Schema(description = "")
  public String getPeerTransitRouterId() {
    return peerTransitRouterId;
  }

  public void setPeerTransitRouterId(String peerTransitRouterId) {
    this.peerTransitRouterId = peerTransitRouterId;
  }

  public DescribeTransitRouterPeerAttachmentsRequest peerTransitRouterRegionId(String peerTransitRouterRegionId) {
    this.peerTransitRouterRegionId = peerTransitRouterRegionId;
    return this;
  }

   /**
   * Get peerTransitRouterRegionId
   * @return peerTransitRouterRegionId
  **/
  @Schema(description = "")
  public String getPeerTransitRouterRegionId() {
    return peerTransitRouterRegionId;
  }

  public void setPeerTransitRouterRegionId(String peerTransitRouterRegionId) {
    this.peerTransitRouterRegionId = peerTransitRouterRegionId;
  }

  public DescribeTransitRouterPeerAttachmentsRequest tagFilters(List<TagFilterForDescribeTransitRouterPeerAttachmentsInput> tagFilters) {
    this.tagFilters = tagFilters;
    return this;
  }

  public DescribeTransitRouterPeerAttachmentsRequest addTagFiltersItem(TagFilterForDescribeTransitRouterPeerAttachmentsInput tagFiltersItem) {
    if (this.tagFilters == null) {
      this.tagFilters = new ArrayList<TagFilterForDescribeTransitRouterPeerAttachmentsInput>();
    }
    this.tagFilters.add(tagFiltersItem);
    return this;
  }

   /**
   * Get tagFilters
   * @return tagFilters
  **/
  @Valid
  @Schema(description = "")
  public List<TagFilterForDescribeTransitRouterPeerAttachmentsInput> getTagFilters() {
    return tagFilters;
  }

  public void setTagFilters(List<TagFilterForDescribeTransitRouterPeerAttachmentsInput> tagFilters) {
    this.tagFilters = tagFilters;
  }

  public DescribeTransitRouterPeerAttachmentsRequest transitRouterAttachmentIds(List<String> transitRouterAttachmentIds) {
    this.transitRouterAttachmentIds = transitRouterAttachmentIds;
    return this;
  }

  public DescribeTransitRouterPeerAttachmentsRequest addTransitRouterAttachmentIdsItem(String transitRouterAttachmentIdsItem) {
    if (this.transitRouterAttachmentIds == null) {
      this.transitRouterAttachmentIds = new ArrayList<String>();
    }
    this.transitRouterAttachmentIds.add(transitRouterAttachmentIdsItem);
    return this;
  }

   /**
   * Get transitRouterAttachmentIds
   * @return transitRouterAttachmentIds
  **/
  @Schema(description = "")
  public List<String> getTransitRouterAttachmentIds() {
    return transitRouterAttachmentIds;
  }

  public void setTransitRouterAttachmentIds(List<String> transitRouterAttachmentIds) {
    this.transitRouterAttachmentIds = transitRouterAttachmentIds;
  }

  public DescribeTransitRouterPeerAttachmentsRequest transitRouterAttachmentName(String transitRouterAttachmentName) {
    this.transitRouterAttachmentName = transitRouterAttachmentName;
    return this;
  }

   /**
   * Get transitRouterAttachmentName
   * @return transitRouterAttachmentName
  **/
  @Schema(description = "")
  public String getTransitRouterAttachmentName() {
    return transitRouterAttachmentName;
  }

  public void setTransitRouterAttachmentName(String transitRouterAttachmentName) {
    this.transitRouterAttachmentName = transitRouterAttachmentName;
  }

  public DescribeTransitRouterPeerAttachmentsRequest transitRouterId(String transitRouterId) {
    this.transitRouterId = transitRouterId;
    return this;
  }

   /**
   * Get transitRouterId
   * @return transitRouterId
  **/
  @Schema(description = "")
  public String getTransitRouterId() {
    return transitRouterId;
  }

  public void setTransitRouterId(String transitRouterId) {
    this.transitRouterId = transitRouterId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeTransitRouterPeerAttachmentsRequest describeTransitRouterPeerAttachmentsRequest = (DescribeTransitRouterPeerAttachmentsRequest) o;
    return Objects.equals(this.pageNumber, describeTransitRouterPeerAttachmentsRequest.pageNumber) &&
        Objects.equals(this.pageSize, describeTransitRouterPeerAttachmentsRequest.pageSize) &&
        Objects.equals(this.peerTransitRouterId, describeTransitRouterPeerAttachmentsRequest.peerTransitRouterId) &&
        Objects.equals(this.peerTransitRouterRegionId, describeTransitRouterPeerAttachmentsRequest.peerTransitRouterRegionId) &&
        Objects.equals(this.tagFilters, describeTransitRouterPeerAttachmentsRequest.tagFilters) &&
        Objects.equals(this.transitRouterAttachmentIds, describeTransitRouterPeerAttachmentsRequest.transitRouterAttachmentIds) &&
        Objects.equals(this.transitRouterAttachmentName, describeTransitRouterPeerAttachmentsRequest.transitRouterAttachmentName) &&
        Objects.equals(this.transitRouterId, describeTransitRouterPeerAttachmentsRequest.transitRouterId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pageNumber, pageSize, peerTransitRouterId, peerTransitRouterRegionId, tagFilters, transitRouterAttachmentIds, transitRouterAttachmentName, transitRouterId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeTransitRouterPeerAttachmentsRequest {\n");
    
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    peerTransitRouterId: ").append(toIndentedString(peerTransitRouterId)).append("\n");
    sb.append("    peerTransitRouterRegionId: ").append(toIndentedString(peerTransitRouterRegionId)).append("\n");
    sb.append("    tagFilters: ").append(toIndentedString(tagFilters)).append("\n");
    sb.append("    transitRouterAttachmentIds: ").append(toIndentedString(transitRouterAttachmentIds)).append("\n");
    sb.append("    transitRouterAttachmentName: ").append(toIndentedString(transitRouterAttachmentName)).append("\n");
    sb.append("    transitRouterId: ").append(toIndentedString(transitRouterId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
