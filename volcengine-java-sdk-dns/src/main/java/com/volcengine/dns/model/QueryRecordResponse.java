/*
 * dns
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.dns.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * QueryRecordResponse
 */



public class QueryRecordResponse extends com.volcengine.model.AbstractResponse {
  @SerializedName("CreatedAt")
  private String createdAt = null;

  @SerializedName("Enable")
  private Boolean enable = null;

  @SerializedName("FQDN")
  private String FQDN = null;

  @SerializedName("Host")
  private String host = null;

  @SerializedName("Line")
  private String line = null;

  @SerializedName("Operators")
  private List<String> operators = null;

  @SerializedName("PQDN")
  private String PQDN = null;

  @SerializedName("RecordID")
  private String recordID = null;

  @SerializedName("RecordSetID")
  private String recordSetID = null;

  @SerializedName("Remark")
  private String remark = null;

  @SerializedName("TTL")
  private Integer TTL = null;

  @SerializedName("Tags")
  private List<String> tags = null;

  @SerializedName("Type")
  private String type = null;

  @SerializedName("UpdatedAt")
  private String updatedAt = null;

  @SerializedName("Value")
  private String value = null;

  @SerializedName("Weight")
  private Integer weight = null;

  public QueryRecordResponse createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(description = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public QueryRecordResponse enable(Boolean enable) {
    this.enable = enable;
    return this;
  }

   /**
   * Get enable
   * @return enable
  **/
  @Schema(description = "")
  public Boolean isEnable() {
    return enable;
  }

  public void setEnable(Boolean enable) {
    this.enable = enable;
  }

  public QueryRecordResponse FQDN(String FQDN) {
    this.FQDN = FQDN;
    return this;
  }

   /**
   * Get FQDN
   * @return FQDN
  **/
  @Schema(description = "")
  public String getFQDN() {
    return FQDN;
  }

  public void setFQDN(String FQDN) {
    this.FQDN = FQDN;
  }

  public QueryRecordResponse host(String host) {
    this.host = host;
    return this;
  }

   /**
   * Get host
   * @return host
  **/
  @Schema(description = "")
  public String getHost() {
    return host;
  }

  public void setHost(String host) {
    this.host = host;
  }

  public QueryRecordResponse line(String line) {
    this.line = line;
    return this;
  }

   /**
   * Get line
   * @return line
  **/
  @Schema(description = "")
  public String getLine() {
    return line;
  }

  public void setLine(String line) {
    this.line = line;
  }

  public QueryRecordResponse operators(List<String> operators) {
    this.operators = operators;
    return this;
  }

  public QueryRecordResponse addOperatorsItem(String operatorsItem) {
    if (this.operators == null) {
      this.operators = new ArrayList<String>();
    }
    this.operators.add(operatorsItem);
    return this;
  }

   /**
   * Get operators
   * @return operators
  **/
  @Schema(description = "")
  public List<String> getOperators() {
    return operators;
  }

  public void setOperators(List<String> operators) {
    this.operators = operators;
  }

  public QueryRecordResponse PQDN(String PQDN) {
    this.PQDN = PQDN;
    return this;
  }

   /**
   * Get PQDN
   * @return PQDN
  **/
  @Schema(description = "")
  public String getPQDN() {
    return PQDN;
  }

  public void setPQDN(String PQDN) {
    this.PQDN = PQDN;
  }

  public QueryRecordResponse recordID(String recordID) {
    this.recordID = recordID;
    return this;
  }

   /**
   * Get recordID
   * @return recordID
  **/
  @Schema(description = "")
  public String getRecordID() {
    return recordID;
  }

  public void setRecordID(String recordID) {
    this.recordID = recordID;
  }

  public QueryRecordResponse recordSetID(String recordSetID) {
    this.recordSetID = recordSetID;
    return this;
  }

   /**
   * Get recordSetID
   * @return recordSetID
  **/
  @Schema(description = "")
  public String getRecordSetID() {
    return recordSetID;
  }

  public void setRecordSetID(String recordSetID) {
    this.recordSetID = recordSetID;
  }

  public QueryRecordResponse remark(String remark) {
    this.remark = remark;
    return this;
  }

   /**
   * Get remark
   * @return remark
  **/
  @Schema(description = "")
  public String getRemark() {
    return remark;
  }

  public void setRemark(String remark) {
    this.remark = remark;
  }

  public QueryRecordResponse TTL(Integer TTL) {
    this.TTL = TTL;
    return this;
  }

   /**
   * Get TTL
   * @return TTL
  **/
  @Schema(description = "")
  public Integer getTTL() {
    return TTL;
  }

  public void setTTL(Integer TTL) {
    this.TTL = TTL;
  }

  public QueryRecordResponse tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public QueryRecordResponse addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Schema(description = "")
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }

  public QueryRecordResponse type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public QueryRecordResponse updatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @Schema(description = "")
  public String getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }

  public QueryRecordResponse value(String value) {
    this.value = value;
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @Schema(description = "")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }

  public QueryRecordResponse weight(Integer weight) {
    this.weight = weight;
    return this;
  }

   /**
   * Get weight
   * @return weight
  **/
  @Schema(description = "")
  public Integer getWeight() {
    return weight;
  }

  public void setWeight(Integer weight) {
    this.weight = weight;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QueryRecordResponse queryRecordResponse = (QueryRecordResponse) o;
    return Objects.equals(this.createdAt, queryRecordResponse.createdAt) &&
        Objects.equals(this.enable, queryRecordResponse.enable) &&
        Objects.equals(this.FQDN, queryRecordResponse.FQDN) &&
        Objects.equals(this.host, queryRecordResponse.host) &&
        Objects.equals(this.line, queryRecordResponse.line) &&
        Objects.equals(this.operators, queryRecordResponse.operators) &&
        Objects.equals(this.PQDN, queryRecordResponse.PQDN) &&
        Objects.equals(this.recordID, queryRecordResponse.recordID) &&
        Objects.equals(this.recordSetID, queryRecordResponse.recordSetID) &&
        Objects.equals(this.remark, queryRecordResponse.remark) &&
        Objects.equals(this.TTL, queryRecordResponse.TTL) &&
        Objects.equals(this.tags, queryRecordResponse.tags) &&
        Objects.equals(this.type, queryRecordResponse.type) &&
        Objects.equals(this.updatedAt, queryRecordResponse.updatedAt) &&
        Objects.equals(this.value, queryRecordResponse.value) &&
        Objects.equals(this.weight, queryRecordResponse.weight);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, enable, FQDN, host, line, operators, PQDN, recordID, recordSetID, remark, TTL, tags, type, updatedAt, value, weight);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QueryRecordResponse {\n");
    
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    enable: ").append(toIndentedString(enable)).append("\n");
    sb.append("    FQDN: ").append(toIndentedString(FQDN)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    line: ").append(toIndentedString(line)).append("\n");
    sb.append("    operators: ").append(toIndentedString(operators)).append("\n");
    sb.append("    PQDN: ").append(toIndentedString(PQDN)).append("\n");
    sb.append("    recordID: ").append(toIndentedString(recordID)).append("\n");
    sb.append("    recordSetID: ").append(toIndentedString(recordSetID)).append("\n");
    sb.append("    remark: ").append(toIndentedString(remark)).append("\n");
    sb.append("    TTL: ").append(toIndentedString(TTL)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
