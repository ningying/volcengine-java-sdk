/*
 * dns
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.dns.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.dns.model.TagForCreateZoneInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CreateZoneRequest
 */



public class CreateZoneRequest {
  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("Remark")
  private String remark = null;

  @SerializedName("Tags")
  private List<TagForCreateZoneInput> tags = null;

  @SerializedName("ZoneName")
  private String zoneName = null;

  public CreateZoneRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public CreateZoneRequest remark(String remark) {
    this.remark = remark;
    return this;
  }

   /**
   * Get remark
   * @return remark
  **/
  @Schema(description = "")
  public String getRemark() {
    return remark;
  }

  public void setRemark(String remark) {
    this.remark = remark;
  }

  public CreateZoneRequest tags(List<TagForCreateZoneInput> tags) {
    this.tags = tags;
    return this;
  }

  public CreateZoneRequest addTagsItem(TagForCreateZoneInput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForCreateZoneInput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForCreateZoneInput> getTags() {
    return tags;
  }

  public void setTags(List<TagForCreateZoneInput> tags) {
    this.tags = tags;
  }

  public CreateZoneRequest zoneName(String zoneName) {
    this.zoneName = zoneName;
    return this;
  }

   /**
   * Get zoneName
   * @return zoneName
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getZoneName() {
    return zoneName;
  }

  public void setZoneName(String zoneName) {
    this.zoneName = zoneName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateZoneRequest createZoneRequest = (CreateZoneRequest) o;
    return Objects.equals(this.projectName, createZoneRequest.projectName) &&
        Objects.equals(this.remark, createZoneRequest.remark) &&
        Objects.equals(this.tags, createZoneRequest.tags) &&
        Objects.equals(this.zoneName, createZoneRequest.zoneName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(projectName, remark, tags, zoneName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateZoneRequest {\n");
    
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    remark: ").append(toIndentedString(remark)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    zoneName: ").append(toIndentedString(zoneName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
