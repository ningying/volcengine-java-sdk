/*
 * dns
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.dns.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * LineForListLinesOutput
 */



public class LineForListLinesOutput {
  @SerializedName("FatherValue")
  private String fatherValue = null;

  @SerializedName("ID")
  private String ID = null;

  @SerializedName("Level")
  private Integer level = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("PartName")
  private String partName = null;

  @SerializedName("Type")
  private Integer type = null;

  @SerializedName("Value")
  private String value = null;

  public LineForListLinesOutput fatherValue(String fatherValue) {
    this.fatherValue = fatherValue;
    return this;
  }

   /**
   * Get fatherValue
   * @return fatherValue
  **/
  @Schema(description = "")
  public String getFatherValue() {
    return fatherValue;
  }

  public void setFatherValue(String fatherValue) {
    this.fatherValue = fatherValue;
  }

  public LineForListLinesOutput ID(String ID) {
    this.ID = ID;
    return this;
  }

   /**
   * Get ID
   * @return ID
  **/
  @Schema(description = "")
  public String getID() {
    return ID;
  }

  public void setID(String ID) {
    this.ID = ID;
  }

  public LineForListLinesOutput level(Integer level) {
    this.level = level;
    return this;
  }

   /**
   * Get level
   * @return level
  **/
  @Schema(description = "")
  public Integer getLevel() {
    return level;
  }

  public void setLevel(Integer level) {
    this.level = level;
  }

  public LineForListLinesOutput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public LineForListLinesOutput partName(String partName) {
    this.partName = partName;
    return this;
  }

   /**
   * Get partName
   * @return partName
  **/
  @Schema(description = "")
  public String getPartName() {
    return partName;
  }

  public void setPartName(String partName) {
    this.partName = partName;
  }

  public LineForListLinesOutput type(Integer type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public Integer getType() {
    return type;
  }

  public void setType(Integer type) {
    this.type = type;
  }

  public LineForListLinesOutput value(String value) {
    this.value = value;
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @Schema(description = "")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LineForListLinesOutput lineForListLinesOutput = (LineForListLinesOutput) o;
    return Objects.equals(this.fatherValue, lineForListLinesOutput.fatherValue) &&
        Objects.equals(this.ID, lineForListLinesOutput.ID) &&
        Objects.equals(this.level, lineForListLinesOutput.level) &&
        Objects.equals(this.name, lineForListLinesOutput.name) &&
        Objects.equals(this.partName, lineForListLinesOutput.partName) &&
        Objects.equals(this.type, lineForListLinesOutput.type) &&
        Objects.equals(this.value, lineForListLinesOutput.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fatherValue, ID, level, name, partName, type, value);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LineForListLinesOutput {\n");
    
    sb.append("    fatherValue: ").append(toIndentedString(fatherValue)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    level: ").append(toIndentedString(level)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    partName: ").append(toIndentedString(partName)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
