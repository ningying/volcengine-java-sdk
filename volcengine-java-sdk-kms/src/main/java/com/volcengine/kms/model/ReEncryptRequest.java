/*
 * kms
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.kms.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ReEncryptRequest
 */



public class ReEncryptRequest {
  @SerializedName("CiphertextBlob")
  private String ciphertextBlob = null;

  @SerializedName("NewEncryptionContext")
  private String newEncryptionContext = null;

  @SerializedName("NewKeyName")
  private String newKeyName = null;

  @SerializedName("NewKeyringName")
  private String newKeyringName = null;

  @SerializedName("OldEncryptionContext")
  private String oldEncryptionContext = null;

  public ReEncryptRequest ciphertextBlob(String ciphertextBlob) {
    this.ciphertextBlob = ciphertextBlob;
    return this;
  }

   /**
   * Get ciphertextBlob
   * @return ciphertextBlob
  **/
  @NotNull
 @Size(min=19)  @Schema(required = true, description = "")
  public String getCiphertextBlob() {
    return ciphertextBlob;
  }

  public void setCiphertextBlob(String ciphertextBlob) {
    this.ciphertextBlob = ciphertextBlob;
  }

  public ReEncryptRequest newEncryptionContext(String newEncryptionContext) {
    this.newEncryptionContext = newEncryptionContext;
    return this;
  }

   /**
   * Get newEncryptionContext
   * @return newEncryptionContext
  **/
  @Schema(description = "")
  public String getNewEncryptionContext() {
    return newEncryptionContext;
  }

  public void setNewEncryptionContext(String newEncryptionContext) {
    this.newEncryptionContext = newEncryptionContext;
  }

  public ReEncryptRequest newKeyName(String newKeyName) {
    this.newKeyName = newKeyName;
    return this;
  }

   /**
   * Get newKeyName
   * @return newKeyName
  **/
  @NotNull
 @Size(min=2,max=31)  @Schema(required = true, description = "")
  public String getNewKeyName() {
    return newKeyName;
  }

  public void setNewKeyName(String newKeyName) {
    this.newKeyName = newKeyName;
  }

  public ReEncryptRequest newKeyringName(String newKeyringName) {
    this.newKeyringName = newKeyringName;
    return this;
  }

   /**
   * Get newKeyringName
   * @return newKeyringName
  **/
  @NotNull
 @Size(min=2,max=31)  @Schema(required = true, description = "")
  public String getNewKeyringName() {
    return newKeyringName;
  }

  public void setNewKeyringName(String newKeyringName) {
    this.newKeyringName = newKeyringName;
  }

  public ReEncryptRequest oldEncryptionContext(String oldEncryptionContext) {
    this.oldEncryptionContext = oldEncryptionContext;
    return this;
  }

   /**
   * Get oldEncryptionContext
   * @return oldEncryptionContext
  **/
  @Schema(description = "")
  public String getOldEncryptionContext() {
    return oldEncryptionContext;
  }

  public void setOldEncryptionContext(String oldEncryptionContext) {
    this.oldEncryptionContext = oldEncryptionContext;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReEncryptRequest reEncryptRequest = (ReEncryptRequest) o;
    return Objects.equals(this.ciphertextBlob, reEncryptRequest.ciphertextBlob) &&
        Objects.equals(this.newEncryptionContext, reEncryptRequest.newEncryptionContext) &&
        Objects.equals(this.newKeyName, reEncryptRequest.newKeyName) &&
        Objects.equals(this.newKeyringName, reEncryptRequest.newKeyringName) &&
        Objects.equals(this.oldEncryptionContext, reEncryptRequest.oldEncryptionContext);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ciphertextBlob, newEncryptionContext, newKeyName, newKeyringName, oldEncryptionContext);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReEncryptRequest {\n");
    
    sb.append("    ciphertextBlob: ").append(toIndentedString(ciphertextBlob)).append("\n");
    sb.append("    newEncryptionContext: ").append(toIndentedString(newEncryptionContext)).append("\n");
    sb.append("    newKeyName: ").append(toIndentedString(newKeyName)).append("\n");
    sb.append("    newKeyringName: ").append(toIndentedString(newKeyringName)).append("\n");
    sb.append("    oldEncryptionContext: ").append(toIndentedString(oldEncryptionContext)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
