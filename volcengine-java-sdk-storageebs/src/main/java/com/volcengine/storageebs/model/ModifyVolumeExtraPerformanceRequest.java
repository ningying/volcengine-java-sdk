/*
 * storage_ebs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.storageebs.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ModifyVolumeExtraPerformanceRequest
 */



public class ModifyVolumeExtraPerformanceRequest {
  @SerializedName("ExtraPerformanceIOPS")
  private Integer extraPerformanceIOPS = null;

  @SerializedName("ExtraPerformanceThroughputMB")
  private Integer extraPerformanceThroughputMB = null;

  /**
   * Gets or Sets extraPerformanceTypeId
   */
  @JsonAdapter(ExtraPerformanceTypeIdEnum.Adapter.class)
  public enum ExtraPerformanceTypeIdEnum {
    @SerializedName("IOPS")
    IOPS("IOPS"),
    @SerializedName("Balance")
    BALANCE("Balance"),
    @SerializedName("Throughput")
    THROUGHPUT("Throughput");

    private String value;

    ExtraPerformanceTypeIdEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ExtraPerformanceTypeIdEnum fromValue(String input) {
      for (ExtraPerformanceTypeIdEnum b : ExtraPerformanceTypeIdEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ExtraPerformanceTypeIdEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ExtraPerformanceTypeIdEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public ExtraPerformanceTypeIdEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return ExtraPerformanceTypeIdEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("ExtraPerformanceTypeId")
  private ExtraPerformanceTypeIdEnum extraPerformanceTypeId = null;

  @SerializedName("VolumeId")
  private String volumeId = null;

  public ModifyVolumeExtraPerformanceRequest extraPerformanceIOPS(Integer extraPerformanceIOPS) {
    this.extraPerformanceIOPS = extraPerformanceIOPS;
    return this;
  }

   /**
   * Get extraPerformanceIOPS
   * @return extraPerformanceIOPS
  **/
  @Schema(description = "")
  public Integer getExtraPerformanceIOPS() {
    return extraPerformanceIOPS;
  }

  public void setExtraPerformanceIOPS(Integer extraPerformanceIOPS) {
    this.extraPerformanceIOPS = extraPerformanceIOPS;
  }

  public ModifyVolumeExtraPerformanceRequest extraPerformanceThroughputMB(Integer extraPerformanceThroughputMB) {
    this.extraPerformanceThroughputMB = extraPerformanceThroughputMB;
    return this;
  }

   /**
   * Get extraPerformanceThroughputMB
   * @return extraPerformanceThroughputMB
  **/
  @Schema(description = "")
  public Integer getExtraPerformanceThroughputMB() {
    return extraPerformanceThroughputMB;
  }

  public void setExtraPerformanceThroughputMB(Integer extraPerformanceThroughputMB) {
    this.extraPerformanceThroughputMB = extraPerformanceThroughputMB;
  }

  public ModifyVolumeExtraPerformanceRequest extraPerformanceTypeId(ExtraPerformanceTypeIdEnum extraPerformanceTypeId) {
    this.extraPerformanceTypeId = extraPerformanceTypeId;
    return this;
  }

   /**
   * Get extraPerformanceTypeId
   * @return extraPerformanceTypeId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public ExtraPerformanceTypeIdEnum getExtraPerformanceTypeId() {
    return extraPerformanceTypeId;
  }

  public void setExtraPerformanceTypeId(ExtraPerformanceTypeIdEnum extraPerformanceTypeId) {
    this.extraPerformanceTypeId = extraPerformanceTypeId;
  }

  public ModifyVolumeExtraPerformanceRequest volumeId(String volumeId) {
    this.volumeId = volumeId;
    return this;
  }

   /**
   * Get volumeId
   * @return volumeId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getVolumeId() {
    return volumeId;
  }

  public void setVolumeId(String volumeId) {
    this.volumeId = volumeId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModifyVolumeExtraPerformanceRequest modifyVolumeExtraPerformanceRequest = (ModifyVolumeExtraPerformanceRequest) o;
    return Objects.equals(this.extraPerformanceIOPS, modifyVolumeExtraPerformanceRequest.extraPerformanceIOPS) &&
        Objects.equals(this.extraPerformanceThroughputMB, modifyVolumeExtraPerformanceRequest.extraPerformanceThroughputMB) &&
        Objects.equals(this.extraPerformanceTypeId, modifyVolumeExtraPerformanceRequest.extraPerformanceTypeId) &&
        Objects.equals(this.volumeId, modifyVolumeExtraPerformanceRequest.volumeId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(extraPerformanceIOPS, extraPerformanceThroughputMB, extraPerformanceTypeId, volumeId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModifyVolumeExtraPerformanceRequest {\n");
    
    sb.append("    extraPerformanceIOPS: ").append(toIndentedString(extraPerformanceIOPS)).append("\n");
    sb.append("    extraPerformanceThroughputMB: ").append(toIndentedString(extraPerformanceThroughputMB)).append("\n");
    sb.append("    extraPerformanceTypeId: ").append(toIndentedString(extraPerformanceTypeId)).append("\n");
    sb.append("    volumeId: ").append(toIndentedString(volumeId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
