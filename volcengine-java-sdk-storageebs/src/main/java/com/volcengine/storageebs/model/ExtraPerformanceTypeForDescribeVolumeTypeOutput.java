/*
 * storage_ebs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.storageebs.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ExtraPerformanceTypeForDescribeVolumeTypeOutput
 */



public class ExtraPerformanceTypeForDescribeVolumeTypeOutput {
  @SerializedName("BaseQosType")
  private String baseQosType = null;

  @SerializedName("ConversionRatio")
  private String conversionRatio = null;

  @SerializedName("Id")
  private String id = null;

  @SerializedName("MaxIops")
  private String maxIops = null;

  @SerializedName("MaxThroughput")
  private String maxThroughput = null;

  public ExtraPerformanceTypeForDescribeVolumeTypeOutput baseQosType(String baseQosType) {
    this.baseQosType = baseQosType;
    return this;
  }

   /**
   * Get baseQosType
   * @return baseQosType
  **/
  @Schema(description = "")
  public String getBaseQosType() {
    return baseQosType;
  }

  public void setBaseQosType(String baseQosType) {
    this.baseQosType = baseQosType;
  }

  public ExtraPerformanceTypeForDescribeVolumeTypeOutput conversionRatio(String conversionRatio) {
    this.conversionRatio = conversionRatio;
    return this;
  }

   /**
   * Get conversionRatio
   * @return conversionRatio
  **/
  @Schema(description = "")
  public String getConversionRatio() {
    return conversionRatio;
  }

  public void setConversionRatio(String conversionRatio) {
    this.conversionRatio = conversionRatio;
  }

  public ExtraPerformanceTypeForDescribeVolumeTypeOutput id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ExtraPerformanceTypeForDescribeVolumeTypeOutput maxIops(String maxIops) {
    this.maxIops = maxIops;
    return this;
  }

   /**
   * Get maxIops
   * @return maxIops
  **/
  @Schema(description = "")
  public String getMaxIops() {
    return maxIops;
  }

  public void setMaxIops(String maxIops) {
    this.maxIops = maxIops;
  }

  public ExtraPerformanceTypeForDescribeVolumeTypeOutput maxThroughput(String maxThroughput) {
    this.maxThroughput = maxThroughput;
    return this;
  }

   /**
   * Get maxThroughput
   * @return maxThroughput
  **/
  @Schema(description = "")
  public String getMaxThroughput() {
    return maxThroughput;
  }

  public void setMaxThroughput(String maxThroughput) {
    this.maxThroughput = maxThroughput;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExtraPerformanceTypeForDescribeVolumeTypeOutput extraPerformanceTypeForDescribeVolumeTypeOutput = (ExtraPerformanceTypeForDescribeVolumeTypeOutput) o;
    return Objects.equals(this.baseQosType, extraPerformanceTypeForDescribeVolumeTypeOutput.baseQosType) &&
        Objects.equals(this.conversionRatio, extraPerformanceTypeForDescribeVolumeTypeOutput.conversionRatio) &&
        Objects.equals(this.id, extraPerformanceTypeForDescribeVolumeTypeOutput.id) &&
        Objects.equals(this.maxIops, extraPerformanceTypeForDescribeVolumeTypeOutput.maxIops) &&
        Objects.equals(this.maxThroughput, extraPerformanceTypeForDescribeVolumeTypeOutput.maxThroughput);
  }

  @Override
  public int hashCode() {
    return Objects.hash(baseQosType, conversionRatio, id, maxIops, maxThroughput);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExtraPerformanceTypeForDescribeVolumeTypeOutput {\n");
    
    sb.append("    baseQosType: ").append(toIndentedString(baseQosType)).append("\n");
    sb.append("    conversionRatio: ").append(toIndentedString(conversionRatio)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    maxIops: ").append(toIndentedString(maxIops)).append("\n");
    sb.append("    maxThroughput: ").append(toIndentedString(maxThroughput)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
