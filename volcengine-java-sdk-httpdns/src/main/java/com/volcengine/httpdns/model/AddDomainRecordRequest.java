/*
 * httpdns
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.httpdns.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.httpdns.model.WeightForAddDomainRecordInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * AddDomainRecordRequest
 */



public class AddDomainRecordRequest {
  @SerializedName("ClientToken")
  private String clientToken = null;

  @SerializedName("Domain")
  private String domain = null;

  @SerializedName("DryRun")
  private Boolean dryRun = null;

  @SerializedName("Enable")
  private Boolean enable = null;

  @SerializedName("Line")
  private String line = null;

  @SerializedName("Target")
  private List<String> target = null;

  @SerializedName("Ttl")
  private Integer ttl = null;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    @SerializedName("A")
    A("A"),
    @SerializedName("AAAA")
    AAAA("AAAA"),
    @SerializedName("CNAME")
    CNAME("CNAME");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TypeEnum fromValue(String input) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return TypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("Type")
  private TypeEnum type = null;

  @SerializedName("Weights")
  private List<WeightForAddDomainRecordInput> weights = null;

  public AddDomainRecordRequest clientToken(String clientToken) {
    this.clientToken = clientToken;
    return this;
  }

   /**
   * Get clientToken
   * @return clientToken
  **/
  @Schema(description = "")
  public String getClientToken() {
    return clientToken;
  }

  public void setClientToken(String clientToken) {
    this.clientToken = clientToken;
  }

  public AddDomainRecordRequest domain(String domain) {
    this.domain = domain;
    return this;
  }

   /**
   * Get domain
   * @return domain
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getDomain() {
    return domain;
  }

  public void setDomain(String domain) {
    this.domain = domain;
  }

  public AddDomainRecordRequest dryRun(Boolean dryRun) {
    this.dryRun = dryRun;
    return this;
  }

   /**
   * Get dryRun
   * @return dryRun
  **/
  @Schema(description = "")
  public Boolean isDryRun() {
    return dryRun;
  }

  public void setDryRun(Boolean dryRun) {
    this.dryRun = dryRun;
  }

  public AddDomainRecordRequest enable(Boolean enable) {
    this.enable = enable;
    return this;
  }

   /**
   * Get enable
   * @return enable
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Boolean isEnable() {
    return enable;
  }

  public void setEnable(Boolean enable) {
    this.enable = enable;
  }

  public AddDomainRecordRequest line(String line) {
    this.line = line;
    return this;
  }

   /**
   * Get line
   * @return line
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getLine() {
    return line;
  }

  public void setLine(String line) {
    this.line = line;
  }

  public AddDomainRecordRequest target(List<String> target) {
    this.target = target;
    return this;
  }

  public AddDomainRecordRequest addTargetItem(String targetItem) {
    if (this.target == null) {
      this.target = new ArrayList<String>();
    }
    this.target.add(targetItem);
    return this;
  }

   /**
   * Get target
   * @return target
  **/
  @Schema(description = "")
  public List<String> getTarget() {
    return target;
  }

  public void setTarget(List<String> target) {
    this.target = target;
  }

  public AddDomainRecordRequest ttl(Integer ttl) {
    this.ttl = ttl;
    return this;
  }

   /**
   * Get ttl
   * @return ttl
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Integer getTtl() {
    return ttl;
  }

  public void setTtl(Integer ttl) {
    this.ttl = ttl;
  }

  public AddDomainRecordRequest type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @NotNull
  @Schema(required = true, description = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public AddDomainRecordRequest weights(List<WeightForAddDomainRecordInput> weights) {
    this.weights = weights;
    return this;
  }

  public AddDomainRecordRequest addWeightsItem(WeightForAddDomainRecordInput weightsItem) {
    if (this.weights == null) {
      this.weights = new ArrayList<WeightForAddDomainRecordInput>();
    }
    this.weights.add(weightsItem);
    return this;
  }

   /**
   * Get weights
   * @return weights
  **/
  @Valid
  @Schema(description = "")
  public List<WeightForAddDomainRecordInput> getWeights() {
    return weights;
  }

  public void setWeights(List<WeightForAddDomainRecordInput> weights) {
    this.weights = weights;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddDomainRecordRequest addDomainRecordRequest = (AddDomainRecordRequest) o;
    return Objects.equals(this.clientToken, addDomainRecordRequest.clientToken) &&
        Objects.equals(this.domain, addDomainRecordRequest.domain) &&
        Objects.equals(this.dryRun, addDomainRecordRequest.dryRun) &&
        Objects.equals(this.enable, addDomainRecordRequest.enable) &&
        Objects.equals(this.line, addDomainRecordRequest.line) &&
        Objects.equals(this.target, addDomainRecordRequest.target) &&
        Objects.equals(this.ttl, addDomainRecordRequest.ttl) &&
        Objects.equals(this.type, addDomainRecordRequest.type) &&
        Objects.equals(this.weights, addDomainRecordRequest.weights);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientToken, domain, dryRun, enable, line, target, ttl, type, weights);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddDomainRecordRequest {\n");
    
    sb.append("    clientToken: ").append(toIndentedString(clientToken)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    dryRun: ").append(toIndentedString(dryRun)).append("\n");
    sb.append("    enable: ").append(toIndentedString(enable)).append("\n");
    sb.append("    line: ").append(toIndentedString(line)).append("\n");
    sb.append("    target: ").append(toIndentedString(target)).append("\n");
    sb.append("    ttl: ").append(toIndentedString(ttl)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    weights: ").append(toIndentedString(weights)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
