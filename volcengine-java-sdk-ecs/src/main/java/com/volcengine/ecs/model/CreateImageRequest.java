/*
 * ecs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.ecs.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.ecs.model.TagForCreateImageInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CreateImageRequest
 */



public class CreateImageRequest {
  @SerializedName("CreateWholeImage")
  private Boolean createWholeImage = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("ImageName")
  private String imageName = null;

  @SerializedName("InstanceId")
  private String instanceId = null;

  @SerializedName("NeedDetection")
  private Boolean needDetection = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("SnapshotGroupId")
  private String snapshotGroupId = null;

  @SerializedName("SnapshotId")
  private String snapshotId = null;

  @SerializedName("Tags")
  private List<TagForCreateImageInput> tags = null;

  public CreateImageRequest createWholeImage(Boolean createWholeImage) {
    this.createWholeImage = createWholeImage;
    return this;
  }

   /**
   * Get createWholeImage
   * @return createWholeImage
  **/
  @Schema(description = "")
  public Boolean isCreateWholeImage() {
    return createWholeImage;
  }

  public void setCreateWholeImage(Boolean createWholeImage) {
    this.createWholeImage = createWholeImage;
  }

  public CreateImageRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CreateImageRequest imageName(String imageName) {
    this.imageName = imageName;
    return this;
  }

   /**
   * Get imageName
   * @return imageName
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getImageName() {
    return imageName;
  }

  public void setImageName(String imageName) {
    this.imageName = imageName;
  }

  public CreateImageRequest instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * Get instanceId
   * @return instanceId
  **/
  @Schema(description = "")
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }

  public CreateImageRequest needDetection(Boolean needDetection) {
    this.needDetection = needDetection;
    return this;
  }

   /**
   * Get needDetection
   * @return needDetection
  **/
  @Schema(description = "")
  public Boolean isNeedDetection() {
    return needDetection;
  }

  public void setNeedDetection(Boolean needDetection) {
    this.needDetection = needDetection;
  }

  public CreateImageRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public CreateImageRequest snapshotGroupId(String snapshotGroupId) {
    this.snapshotGroupId = snapshotGroupId;
    return this;
  }

   /**
   * Get snapshotGroupId
   * @return snapshotGroupId
  **/
  @Schema(description = "")
  public String getSnapshotGroupId() {
    return snapshotGroupId;
  }

  public void setSnapshotGroupId(String snapshotGroupId) {
    this.snapshotGroupId = snapshotGroupId;
  }

  public CreateImageRequest snapshotId(String snapshotId) {
    this.snapshotId = snapshotId;
    return this;
  }

   /**
   * Get snapshotId
   * @return snapshotId
  **/
  @Schema(description = "")
  public String getSnapshotId() {
    return snapshotId;
  }

  public void setSnapshotId(String snapshotId) {
    this.snapshotId = snapshotId;
  }

  public CreateImageRequest tags(List<TagForCreateImageInput> tags) {
    this.tags = tags;
    return this;
  }

  public CreateImageRequest addTagsItem(TagForCreateImageInput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForCreateImageInput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForCreateImageInput> getTags() {
    return tags;
  }

  public void setTags(List<TagForCreateImageInput> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateImageRequest createImageRequest = (CreateImageRequest) o;
    return Objects.equals(this.createWholeImage, createImageRequest.createWholeImage) &&
        Objects.equals(this.description, createImageRequest.description) &&
        Objects.equals(this.imageName, createImageRequest.imageName) &&
        Objects.equals(this.instanceId, createImageRequest.instanceId) &&
        Objects.equals(this.needDetection, createImageRequest.needDetection) &&
        Objects.equals(this.projectName, createImageRequest.projectName) &&
        Objects.equals(this.snapshotGroupId, createImageRequest.snapshotGroupId) &&
        Objects.equals(this.snapshotId, createImageRequest.snapshotId) &&
        Objects.equals(this.tags, createImageRequest.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createWholeImage, description, imageName, instanceId, needDetection, projectName, snapshotGroupId, snapshotId, tags);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateImageRequest {\n");
    
    sb.append("    createWholeImage: ").append(toIndentedString(createWholeImage)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    imageName: ").append(toIndentedString(imageName)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    needDetection: ").append(toIndentedString(needDetection)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    snapshotGroupId: ").append(toIndentedString(snapshotGroupId)).append("\n");
    sb.append("    snapshotId: ").append(toIndentedString(snapshotId)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
