/*
 * ecs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.ecs.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * EipAddressForRunInstancesInput
 */


public class EipAddressForRunInstancesInput {
  @SerializedName("BandwidthMbps")
  private Integer bandwidthMbps = null;

  @SerializedName("BandwidthPackageId")
  private String bandwidthPackageId = null;

  @SerializedName("ChargeType")
  private String chargeType = null;

  @SerializedName("ISP")
  private String ISP = null;

  @SerializedName("ReleaseWithInstance")
  private Boolean releaseWithInstance = null;

  public EipAddressForRunInstancesInput bandwidthMbps(Integer bandwidthMbps) {
    this.bandwidthMbps = bandwidthMbps;
    return this;
  }

   /**
   * Get bandwidthMbps
   * @return bandwidthMbps
  **/
  @Schema(description = "")
  public Integer getBandwidthMbps() {
    return bandwidthMbps;
  }

  public void setBandwidthMbps(Integer bandwidthMbps) {
    this.bandwidthMbps = bandwidthMbps;
  }

  public EipAddressForRunInstancesInput bandwidthPackageId(String bandwidthPackageId) {
    this.bandwidthPackageId = bandwidthPackageId;
    return this;
  }

   /**
   * Get bandwidthPackageId
   * @return bandwidthPackageId
  **/
  @Schema(description = "")
  public String getBandwidthPackageId() {
    return bandwidthPackageId;
  }

  public void setBandwidthPackageId(String bandwidthPackageId) {
    this.bandwidthPackageId = bandwidthPackageId;
  }

  public EipAddressForRunInstancesInput chargeType(String chargeType) {
    this.chargeType = chargeType;
    return this;
  }

   /**
   * Get chargeType
   * @return chargeType
  **/
  @Schema(description = "")
  public String getChargeType() {
    return chargeType;
  }

  public void setChargeType(String chargeType) {
    this.chargeType = chargeType;
  }

  public EipAddressForRunInstancesInput ISP(String ISP) {
    this.ISP = ISP;
    return this;
  }

   /**
   * Get ISP
   * @return ISP
  **/
  @Schema(description = "")
  public String getISP() {
    return ISP;
  }

  public void setISP(String ISP) {
    this.ISP = ISP;
  }

  public EipAddressForRunInstancesInput releaseWithInstance(Boolean releaseWithInstance) {
    this.releaseWithInstance = releaseWithInstance;
    return this;
  }

   /**
   * Get releaseWithInstance
   * @return releaseWithInstance
  **/
  @Schema(description = "")
  public Boolean isReleaseWithInstance() {
    return releaseWithInstance;
  }

  public void setReleaseWithInstance(Boolean releaseWithInstance) {
    this.releaseWithInstance = releaseWithInstance;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EipAddressForRunInstancesInput eipAddressForRunInstancesInput = (EipAddressForRunInstancesInput) o;
    return Objects.equals(this.bandwidthMbps, eipAddressForRunInstancesInput.bandwidthMbps) &&
        Objects.equals(this.bandwidthPackageId, eipAddressForRunInstancesInput.bandwidthPackageId) &&
        Objects.equals(this.chargeType, eipAddressForRunInstancesInput.chargeType) &&
        Objects.equals(this.ISP, eipAddressForRunInstancesInput.ISP) &&
        Objects.equals(this.releaseWithInstance, eipAddressForRunInstancesInput.releaseWithInstance);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bandwidthMbps, bandwidthPackageId, chargeType, ISP, releaseWithInstance);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EipAddressForRunInstancesInput {\n");
    
    sb.append("    bandwidthMbps: ").append(toIndentedString(bandwidthMbps)).append("\n");
    sb.append("    bandwidthPackageId: ").append(toIndentedString(bandwidthPackageId)).append("\n");
    sb.append("    chargeType: ").append(toIndentedString(chargeType)).append("\n");
    sb.append("    ISP: ").append(toIndentedString(ISP)).append("\n");
    sb.append("    releaseWithInstance: ").append(toIndentedString(releaseWithInstance)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
