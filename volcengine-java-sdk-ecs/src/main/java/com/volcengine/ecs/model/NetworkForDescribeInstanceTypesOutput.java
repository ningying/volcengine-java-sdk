/*
 * ecs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.ecs.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * NetworkForDescribeInstanceTypesOutput
 */



public class NetworkForDescribeInstanceTypesOutput {
  @SerializedName("BaselineBandwidthMbps")
  private Integer baselineBandwidthMbps = null;

  @SerializedName("MaximumBandwidthMbps")
  private Integer maximumBandwidthMbps = null;

  @SerializedName("MaximumNetworkInterfaces")
  private Integer maximumNetworkInterfaces = null;

  @SerializedName("MaximumPrivateIpv4AddressesPerNetworkInterface")
  private Integer maximumPrivateIpv4AddressesPerNetworkInterface = null;

  @SerializedName("MaximumQueuesPerNetworkInterface")
  private Integer maximumQueuesPerNetworkInterface = null;

  @SerializedName("MaximumThroughputKpps")
  private Integer maximumThroughputKpps = null;

  public NetworkForDescribeInstanceTypesOutput baselineBandwidthMbps(Integer baselineBandwidthMbps) {
    this.baselineBandwidthMbps = baselineBandwidthMbps;
    return this;
  }

   /**
   * Get baselineBandwidthMbps
   * @return baselineBandwidthMbps
  **/
  @Schema(description = "")
  public Integer getBaselineBandwidthMbps() {
    return baselineBandwidthMbps;
  }

  public void setBaselineBandwidthMbps(Integer baselineBandwidthMbps) {
    this.baselineBandwidthMbps = baselineBandwidthMbps;
  }

  public NetworkForDescribeInstanceTypesOutput maximumBandwidthMbps(Integer maximumBandwidthMbps) {
    this.maximumBandwidthMbps = maximumBandwidthMbps;
    return this;
  }

   /**
   * Get maximumBandwidthMbps
   * @return maximumBandwidthMbps
  **/
  @Schema(description = "")
  public Integer getMaximumBandwidthMbps() {
    return maximumBandwidthMbps;
  }

  public void setMaximumBandwidthMbps(Integer maximumBandwidthMbps) {
    this.maximumBandwidthMbps = maximumBandwidthMbps;
  }

  public NetworkForDescribeInstanceTypesOutput maximumNetworkInterfaces(Integer maximumNetworkInterfaces) {
    this.maximumNetworkInterfaces = maximumNetworkInterfaces;
    return this;
  }

   /**
   * Get maximumNetworkInterfaces
   * @return maximumNetworkInterfaces
  **/
  @Schema(description = "")
  public Integer getMaximumNetworkInterfaces() {
    return maximumNetworkInterfaces;
  }

  public void setMaximumNetworkInterfaces(Integer maximumNetworkInterfaces) {
    this.maximumNetworkInterfaces = maximumNetworkInterfaces;
  }

  public NetworkForDescribeInstanceTypesOutput maximumPrivateIpv4AddressesPerNetworkInterface(Integer maximumPrivateIpv4AddressesPerNetworkInterface) {
    this.maximumPrivateIpv4AddressesPerNetworkInterface = maximumPrivateIpv4AddressesPerNetworkInterface;
    return this;
  }

   /**
   * Get maximumPrivateIpv4AddressesPerNetworkInterface
   * @return maximumPrivateIpv4AddressesPerNetworkInterface
  **/
  @Schema(description = "")
  public Integer getMaximumPrivateIpv4AddressesPerNetworkInterface() {
    return maximumPrivateIpv4AddressesPerNetworkInterface;
  }

  public void setMaximumPrivateIpv4AddressesPerNetworkInterface(Integer maximumPrivateIpv4AddressesPerNetworkInterface) {
    this.maximumPrivateIpv4AddressesPerNetworkInterface = maximumPrivateIpv4AddressesPerNetworkInterface;
  }

  public NetworkForDescribeInstanceTypesOutput maximumQueuesPerNetworkInterface(Integer maximumQueuesPerNetworkInterface) {
    this.maximumQueuesPerNetworkInterface = maximumQueuesPerNetworkInterface;
    return this;
  }

   /**
   * Get maximumQueuesPerNetworkInterface
   * @return maximumQueuesPerNetworkInterface
  **/
  @Schema(description = "")
  public Integer getMaximumQueuesPerNetworkInterface() {
    return maximumQueuesPerNetworkInterface;
  }

  public void setMaximumQueuesPerNetworkInterface(Integer maximumQueuesPerNetworkInterface) {
    this.maximumQueuesPerNetworkInterface = maximumQueuesPerNetworkInterface;
  }

  public NetworkForDescribeInstanceTypesOutput maximumThroughputKpps(Integer maximumThroughputKpps) {
    this.maximumThroughputKpps = maximumThroughputKpps;
    return this;
  }

   /**
   * Get maximumThroughputKpps
   * @return maximumThroughputKpps
  **/
  @Schema(description = "")
  public Integer getMaximumThroughputKpps() {
    return maximumThroughputKpps;
  }

  public void setMaximumThroughputKpps(Integer maximumThroughputKpps) {
    this.maximumThroughputKpps = maximumThroughputKpps;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NetworkForDescribeInstanceTypesOutput networkForDescribeInstanceTypesOutput = (NetworkForDescribeInstanceTypesOutput) o;
    return Objects.equals(this.baselineBandwidthMbps, networkForDescribeInstanceTypesOutput.baselineBandwidthMbps) &&
        Objects.equals(this.maximumBandwidthMbps, networkForDescribeInstanceTypesOutput.maximumBandwidthMbps) &&
        Objects.equals(this.maximumNetworkInterfaces, networkForDescribeInstanceTypesOutput.maximumNetworkInterfaces) &&
        Objects.equals(this.maximumPrivateIpv4AddressesPerNetworkInterface, networkForDescribeInstanceTypesOutput.maximumPrivateIpv4AddressesPerNetworkInterface) &&
        Objects.equals(this.maximumQueuesPerNetworkInterface, networkForDescribeInstanceTypesOutput.maximumQueuesPerNetworkInterface) &&
        Objects.equals(this.maximumThroughputKpps, networkForDescribeInstanceTypesOutput.maximumThroughputKpps);
  }

  @Override
  public int hashCode() {
    return Objects.hash(baselineBandwidthMbps, maximumBandwidthMbps, maximumNetworkInterfaces, maximumPrivateIpv4AddressesPerNetworkInterface, maximumQueuesPerNetworkInterface, maximumThroughputKpps);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NetworkForDescribeInstanceTypesOutput {\n");
    
    sb.append("    baselineBandwidthMbps: ").append(toIndentedString(baselineBandwidthMbps)).append("\n");
    sb.append("    maximumBandwidthMbps: ").append(toIndentedString(maximumBandwidthMbps)).append("\n");
    sb.append("    maximumNetworkInterfaces: ").append(toIndentedString(maximumNetworkInterfaces)).append("\n");
    sb.append("    maximumPrivateIpv4AddressesPerNetworkInterface: ").append(toIndentedString(maximumPrivateIpv4AddressesPerNetworkInterface)).append("\n");
    sb.append("    maximumQueuesPerNetworkInterface: ").append(toIndentedString(maximumQueuesPerNetworkInterface)).append("\n");
    sb.append("    maximumThroughputKpps: ").append(toIndentedString(maximumThroughputKpps)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
