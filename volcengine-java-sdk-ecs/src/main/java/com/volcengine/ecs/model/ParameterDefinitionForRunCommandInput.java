/*
 * ecs
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.ecs.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ParameterDefinitionForRunCommandInput
 */



public class ParameterDefinitionForRunCommandInput {
  @SerializedName("DecimalPrecision")
  private String decimalPrecision = null;

  @SerializedName("DefaultValue")
  private String defaultValue = null;

  @SerializedName("MaxLength")
  private String maxLength = null;

  @SerializedName("MaxValue")
  private String maxValue = null;

  @SerializedName("MinLength")
  private String minLength = null;

  @SerializedName("MinValue")
  private String minValue = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Required")
  private Boolean required = null;

  @SerializedName("Type")
  private String type = null;

  public ParameterDefinitionForRunCommandInput decimalPrecision(String decimalPrecision) {
    this.decimalPrecision = decimalPrecision;
    return this;
  }

   /**
   * Get decimalPrecision
   * @return decimalPrecision
  **/
  @Schema(description = "")
  public String getDecimalPrecision() {
    return decimalPrecision;
  }

  public void setDecimalPrecision(String decimalPrecision) {
    this.decimalPrecision = decimalPrecision;
  }

  public ParameterDefinitionForRunCommandInput defaultValue(String defaultValue) {
    this.defaultValue = defaultValue;
    return this;
  }

   /**
   * Get defaultValue
   * @return defaultValue
  **/
  @Schema(description = "")
  public String getDefaultValue() {
    return defaultValue;
  }

  public void setDefaultValue(String defaultValue) {
    this.defaultValue = defaultValue;
  }

  public ParameterDefinitionForRunCommandInput maxLength(String maxLength) {
    this.maxLength = maxLength;
    return this;
  }

   /**
   * Get maxLength
   * @return maxLength
  **/
  @Schema(description = "")
  public String getMaxLength() {
    return maxLength;
  }

  public void setMaxLength(String maxLength) {
    this.maxLength = maxLength;
  }

  public ParameterDefinitionForRunCommandInput maxValue(String maxValue) {
    this.maxValue = maxValue;
    return this;
  }

   /**
   * Get maxValue
   * @return maxValue
  **/
  @Schema(description = "")
  public String getMaxValue() {
    return maxValue;
  }

  public void setMaxValue(String maxValue) {
    this.maxValue = maxValue;
  }

  public ParameterDefinitionForRunCommandInput minLength(String minLength) {
    this.minLength = minLength;
    return this;
  }

   /**
   * Get minLength
   * @return minLength
  **/
  @Schema(description = "")
  public String getMinLength() {
    return minLength;
  }

  public void setMinLength(String minLength) {
    this.minLength = minLength;
  }

  public ParameterDefinitionForRunCommandInput minValue(String minValue) {
    this.minValue = minValue;
    return this;
  }

   /**
   * Get minValue
   * @return minValue
  **/
  @Schema(description = "")
  public String getMinValue() {
    return minValue;
  }

  public void setMinValue(String minValue) {
    this.minValue = minValue;
  }

  public ParameterDefinitionForRunCommandInput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ParameterDefinitionForRunCommandInput required(Boolean required) {
    this.required = required;
    return this;
  }

   /**
   * Get required
   * @return required
  **/
  @Schema(description = "")
  public Boolean isRequired() {
    return required;
  }

  public void setRequired(Boolean required) {
    this.required = required;
  }

  public ParameterDefinitionForRunCommandInput type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ParameterDefinitionForRunCommandInput parameterDefinitionForRunCommandInput = (ParameterDefinitionForRunCommandInput) o;
    return Objects.equals(this.decimalPrecision, parameterDefinitionForRunCommandInput.decimalPrecision) &&
        Objects.equals(this.defaultValue, parameterDefinitionForRunCommandInput.defaultValue) &&
        Objects.equals(this.maxLength, parameterDefinitionForRunCommandInput.maxLength) &&
        Objects.equals(this.maxValue, parameterDefinitionForRunCommandInput.maxValue) &&
        Objects.equals(this.minLength, parameterDefinitionForRunCommandInput.minLength) &&
        Objects.equals(this.minValue, parameterDefinitionForRunCommandInput.minValue) &&
        Objects.equals(this.name, parameterDefinitionForRunCommandInput.name) &&
        Objects.equals(this.required, parameterDefinitionForRunCommandInput.required) &&
        Objects.equals(this.type, parameterDefinitionForRunCommandInput.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(decimalPrecision, defaultValue, maxLength, maxValue, minLength, minValue, name, required, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ParameterDefinitionForRunCommandInput {\n");
    
    sb.append("    decimalPrecision: ").append(toIndentedString(decimalPrecision)).append("\n");
    sb.append("    defaultValue: ").append(toIndentedString(defaultValue)).append("\n");
    sb.append("    maxLength: ").append(toIndentedString(maxLength)).append("\n");
    sb.append("    maxValue: ").append(toIndentedString(maxValue)).append("\n");
    sb.append("    minLength: ").append(toIndentedString(minLength)).append("\n");
    sb.append("    minValue: ").append(toIndentedString(minValue)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
