/*
 * billing
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.billing.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * AuthForListInvitationOutput
 */


public class AuthForListInvitationOutput {
  @SerializedName("AuthID")
  private String authID = null;

  @SerializedName("AuthList")
  private List<Integer> authList = null;

  @SerializedName("MajorAccountID")
  private Integer majorAccountID = null;

  @SerializedName("RelationID")
  private String relationID = null;

  @SerializedName("SubAccountID")
  private Integer subAccountID = null;

  public AuthForListInvitationOutput authID(String authID) {
    this.authID = authID;
    return this;
  }

   /**
   * Get authID
   * @return authID
  **/
  @Schema(description = "")
  public String getAuthID() {
    return authID;
  }

  public void setAuthID(String authID) {
    this.authID = authID;
  }

  public AuthForListInvitationOutput authList(List<Integer> authList) {
    this.authList = authList;
    return this;
  }

  public AuthForListInvitationOutput addAuthListItem(Integer authListItem) {
    if (this.authList == null) {
      this.authList = new ArrayList<Integer>();
    }
    this.authList.add(authListItem);
    return this;
  }

   /**
   * Get authList
   * @return authList
  **/
  @Schema(description = "")
  public List<Integer> getAuthList() {
    return authList;
  }

  public void setAuthList(List<Integer> authList) {
    this.authList = authList;
  }

  public AuthForListInvitationOutput majorAccountID(Integer majorAccountID) {
    this.majorAccountID = majorAccountID;
    return this;
  }

   /**
   * Get majorAccountID
   * @return majorAccountID
  **/
  @Schema(description = "")
  public Integer getMajorAccountID() {
    return majorAccountID;
  }

  public void setMajorAccountID(Integer majorAccountID) {
    this.majorAccountID = majorAccountID;
  }

  public AuthForListInvitationOutput relationID(String relationID) {
    this.relationID = relationID;
    return this;
  }

   /**
   * Get relationID
   * @return relationID
  **/
  @Schema(description = "")
  public String getRelationID() {
    return relationID;
  }

  public void setRelationID(String relationID) {
    this.relationID = relationID;
  }

  public AuthForListInvitationOutput subAccountID(Integer subAccountID) {
    this.subAccountID = subAccountID;
    return this;
  }

   /**
   * Get subAccountID
   * @return subAccountID
  **/
  @Schema(description = "")
  public Integer getSubAccountID() {
    return subAccountID;
  }

  public void setSubAccountID(Integer subAccountID) {
    this.subAccountID = subAccountID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthForListInvitationOutput authForListInvitationOutput = (AuthForListInvitationOutput) o;
    return Objects.equals(this.authID, authForListInvitationOutput.authID) &&
        Objects.equals(this.authList, authForListInvitationOutput.authList) &&
        Objects.equals(this.majorAccountID, authForListInvitationOutput.majorAccountID) &&
        Objects.equals(this.relationID, authForListInvitationOutput.relationID) &&
        Objects.equals(this.subAccountID, authForListInvitationOutput.subAccountID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authID, authList, majorAccountID, relationID, subAccountID);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthForListInvitationOutput {\n");
    
    sb.append("    authID: ").append(toIndentedString(authID)).append("\n");
    sb.append("    authList: ").append(toIndentedString(authList)).append("\n");
    sb.append("    majorAccountID: ").append(toIndentedString(majorAccountID)).append("\n");
    sb.append("    relationID: ").append(toIndentedString(relationID)).append("\n");
    sb.append("    subAccountID: ").append(toIndentedString(subAccountID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
