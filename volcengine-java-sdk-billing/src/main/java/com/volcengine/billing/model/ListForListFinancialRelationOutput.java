/*
 * billing
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.billing.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.billing.model.AuthInfoForListFinancialRelationOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ListForListFinancialRelationOutput
 */



public class ListForListFinancialRelationOutput {
  @SerializedName("AccountAlias")
  private String accountAlias = null;

  @SerializedName("AuthInfo")
  private List<AuthInfoForListFinancialRelationOutput> authInfo = null;

  @SerializedName("Filiation")
  private Integer filiation = null;

  @SerializedName("FiliationDesc")
  private String filiationDesc = null;

  @SerializedName("MajorAccountID")
  private Integer majorAccountID = null;

  @SerializedName("MajorAccountName")
  private String majorAccountName = null;

  @SerializedName("Relation")
  private Integer relation = null;

  @SerializedName("RelationDesc")
  private String relationDesc = null;

  @SerializedName("RelationID")
  private String relationID = null;

  @SerializedName("Status")
  private Integer status = null;

  @SerializedName("StatusDesc")
  private String statusDesc = null;

  @SerializedName("SubAccountID")
  private Integer subAccountID = null;

  @SerializedName("SubAccountName")
  private String subAccountName = null;

  @SerializedName("UpdateTime")
  private String updateTime = null;

  public ListForListFinancialRelationOutput accountAlias(String accountAlias) {
    this.accountAlias = accountAlias;
    return this;
  }

   /**
   * Get accountAlias
   * @return accountAlias
  **/
  @Schema(description = "")
  public String getAccountAlias() {
    return accountAlias;
  }

  public void setAccountAlias(String accountAlias) {
    this.accountAlias = accountAlias;
  }

  public ListForListFinancialRelationOutput authInfo(List<AuthInfoForListFinancialRelationOutput> authInfo) {
    this.authInfo = authInfo;
    return this;
  }

  public ListForListFinancialRelationOutput addAuthInfoItem(AuthInfoForListFinancialRelationOutput authInfoItem) {
    if (this.authInfo == null) {
      this.authInfo = new ArrayList<AuthInfoForListFinancialRelationOutput>();
    }
    this.authInfo.add(authInfoItem);
    return this;
  }

   /**
   * Get authInfo
   * @return authInfo
  **/
  @Valid
  @Schema(description = "")
  public List<AuthInfoForListFinancialRelationOutput> getAuthInfo() {
    return authInfo;
  }

  public void setAuthInfo(List<AuthInfoForListFinancialRelationOutput> authInfo) {
    this.authInfo = authInfo;
  }

  public ListForListFinancialRelationOutput filiation(Integer filiation) {
    this.filiation = filiation;
    return this;
  }

   /**
   * Get filiation
   * @return filiation
  **/
  @Schema(description = "")
  public Integer getFiliation() {
    return filiation;
  }

  public void setFiliation(Integer filiation) {
    this.filiation = filiation;
  }

  public ListForListFinancialRelationOutput filiationDesc(String filiationDesc) {
    this.filiationDesc = filiationDesc;
    return this;
  }

   /**
   * Get filiationDesc
   * @return filiationDesc
  **/
  @Schema(description = "")
  public String getFiliationDesc() {
    return filiationDesc;
  }

  public void setFiliationDesc(String filiationDesc) {
    this.filiationDesc = filiationDesc;
  }

  public ListForListFinancialRelationOutput majorAccountID(Integer majorAccountID) {
    this.majorAccountID = majorAccountID;
    return this;
  }

   /**
   * Get majorAccountID
   * @return majorAccountID
  **/
  @Schema(description = "")
  public Integer getMajorAccountID() {
    return majorAccountID;
  }

  public void setMajorAccountID(Integer majorAccountID) {
    this.majorAccountID = majorAccountID;
  }

  public ListForListFinancialRelationOutput majorAccountName(String majorAccountName) {
    this.majorAccountName = majorAccountName;
    return this;
  }

   /**
   * Get majorAccountName
   * @return majorAccountName
  **/
  @Schema(description = "")
  public String getMajorAccountName() {
    return majorAccountName;
  }

  public void setMajorAccountName(String majorAccountName) {
    this.majorAccountName = majorAccountName;
  }

  public ListForListFinancialRelationOutput relation(Integer relation) {
    this.relation = relation;
    return this;
  }

   /**
   * Get relation
   * @return relation
  **/
  @Schema(description = "")
  public Integer getRelation() {
    return relation;
  }

  public void setRelation(Integer relation) {
    this.relation = relation;
  }

  public ListForListFinancialRelationOutput relationDesc(String relationDesc) {
    this.relationDesc = relationDesc;
    return this;
  }

   /**
   * Get relationDesc
   * @return relationDesc
  **/
  @Schema(description = "")
  public String getRelationDesc() {
    return relationDesc;
  }

  public void setRelationDesc(String relationDesc) {
    this.relationDesc = relationDesc;
  }

  public ListForListFinancialRelationOutput relationID(String relationID) {
    this.relationID = relationID;
    return this;
  }

   /**
   * Get relationID
   * @return relationID
  **/
  @Schema(description = "")
  public String getRelationID() {
    return relationID;
  }

  public void setRelationID(String relationID) {
    this.relationID = relationID;
  }

  public ListForListFinancialRelationOutput status(Integer status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public Integer getStatus() {
    return status;
  }

  public void setStatus(Integer status) {
    this.status = status;
  }

  public ListForListFinancialRelationOutput statusDesc(String statusDesc) {
    this.statusDesc = statusDesc;
    return this;
  }

   /**
   * Get statusDesc
   * @return statusDesc
  **/
  @Schema(description = "")
  public String getStatusDesc() {
    return statusDesc;
  }

  public void setStatusDesc(String statusDesc) {
    this.statusDesc = statusDesc;
  }

  public ListForListFinancialRelationOutput subAccountID(Integer subAccountID) {
    this.subAccountID = subAccountID;
    return this;
  }

   /**
   * Get subAccountID
   * @return subAccountID
  **/
  @Schema(description = "")
  public Integer getSubAccountID() {
    return subAccountID;
  }

  public void setSubAccountID(Integer subAccountID) {
    this.subAccountID = subAccountID;
  }

  public ListForListFinancialRelationOutput subAccountName(String subAccountName) {
    this.subAccountName = subAccountName;
    return this;
  }

   /**
   * Get subAccountName
   * @return subAccountName
  **/
  @Schema(description = "")
  public String getSubAccountName() {
    return subAccountName;
  }

  public void setSubAccountName(String subAccountName) {
    this.subAccountName = subAccountName;
  }

  public ListForListFinancialRelationOutput updateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @Schema(description = "")
  public String getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListForListFinancialRelationOutput listForListFinancialRelationOutput = (ListForListFinancialRelationOutput) o;
    return Objects.equals(this.accountAlias, listForListFinancialRelationOutput.accountAlias) &&
        Objects.equals(this.authInfo, listForListFinancialRelationOutput.authInfo) &&
        Objects.equals(this.filiation, listForListFinancialRelationOutput.filiation) &&
        Objects.equals(this.filiationDesc, listForListFinancialRelationOutput.filiationDesc) &&
        Objects.equals(this.majorAccountID, listForListFinancialRelationOutput.majorAccountID) &&
        Objects.equals(this.majorAccountName, listForListFinancialRelationOutput.majorAccountName) &&
        Objects.equals(this.relation, listForListFinancialRelationOutput.relation) &&
        Objects.equals(this.relationDesc, listForListFinancialRelationOutput.relationDesc) &&
        Objects.equals(this.relationID, listForListFinancialRelationOutput.relationID) &&
        Objects.equals(this.status, listForListFinancialRelationOutput.status) &&
        Objects.equals(this.statusDesc, listForListFinancialRelationOutput.statusDesc) &&
        Objects.equals(this.subAccountID, listForListFinancialRelationOutput.subAccountID) &&
        Objects.equals(this.subAccountName, listForListFinancialRelationOutput.subAccountName) &&
        Objects.equals(this.updateTime, listForListFinancialRelationOutput.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountAlias, authInfo, filiation, filiationDesc, majorAccountID, majorAccountName, relation, relationDesc, relationID, status, statusDesc, subAccountID, subAccountName, updateTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListForListFinancialRelationOutput {\n");
    
    sb.append("    accountAlias: ").append(toIndentedString(accountAlias)).append("\n");
    sb.append("    authInfo: ").append(toIndentedString(authInfo)).append("\n");
    sb.append("    filiation: ").append(toIndentedString(filiation)).append("\n");
    sb.append("    filiationDesc: ").append(toIndentedString(filiationDesc)).append("\n");
    sb.append("    majorAccountID: ").append(toIndentedString(majorAccountID)).append("\n");
    sb.append("    majorAccountName: ").append(toIndentedString(majorAccountName)).append("\n");
    sb.append("    relation: ").append(toIndentedString(relation)).append("\n");
    sb.append("    relationDesc: ").append(toIndentedString(relationDesc)).append("\n");
    sb.append("    relationID: ").append(toIndentedString(relationID)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusDesc: ").append(toIndentedString(statusDesc)).append("\n");
    sb.append("    subAccountID: ").append(toIndentedString(subAccountID)).append("\n");
    sb.append("    subAccountName: ").append(toIndentedString(subAccountName)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
