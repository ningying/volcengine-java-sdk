/*
 * billing
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.billing.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ListBillOverviewByProdRequest
 */



public class ListBillOverviewByProdRequest {
  @SerializedName("BillCategoryParent")
  private List<String> billCategoryParent = null;

  @SerializedName("BillPeriod")
  private String billPeriod = null;

  @SerializedName("BillingMode")
  private List<String> billingMode = null;

  @SerializedName("IgnoreZero")
  private Integer ignoreZero = null;

  @SerializedName("Limit")
  private Integer limit = null;

  @SerializedName("NeedRecordNum")
  private Integer needRecordNum = null;

  @SerializedName("Offset")
  private Integer offset = null;

  @SerializedName("OwnerID")
  private List<Long> ownerID = null;

  @SerializedName("PayerID")
  private List<Long> payerID = null;

  @SerializedName("Product")
  private List<String> product = null;

  public ListBillOverviewByProdRequest billCategoryParent(List<String> billCategoryParent) {
    this.billCategoryParent = billCategoryParent;
    return this;
  }

  public ListBillOverviewByProdRequest addBillCategoryParentItem(String billCategoryParentItem) {
    if (this.billCategoryParent == null) {
      this.billCategoryParent = new ArrayList<String>();
    }
    this.billCategoryParent.add(billCategoryParentItem);
    return this;
  }

   /**
   * Get billCategoryParent
   * @return billCategoryParent
  **/
  @Schema(description = "")
  public List<String> getBillCategoryParent() {
    return billCategoryParent;
  }

  public void setBillCategoryParent(List<String> billCategoryParent) {
    this.billCategoryParent = billCategoryParent;
  }

  public ListBillOverviewByProdRequest billPeriod(String billPeriod) {
    this.billPeriod = billPeriod;
    return this;
  }

   /**
   * Get billPeriod
   * @return billPeriod
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getBillPeriod() {
    return billPeriod;
  }

  public void setBillPeriod(String billPeriod) {
    this.billPeriod = billPeriod;
  }

  public ListBillOverviewByProdRequest billingMode(List<String> billingMode) {
    this.billingMode = billingMode;
    return this;
  }

  public ListBillOverviewByProdRequest addBillingModeItem(String billingModeItem) {
    if (this.billingMode == null) {
      this.billingMode = new ArrayList<String>();
    }
    this.billingMode.add(billingModeItem);
    return this;
  }

   /**
   * Get billingMode
   * @return billingMode
  **/
  @Schema(description = "")
  public List<String> getBillingMode() {
    return billingMode;
  }

  public void setBillingMode(List<String> billingMode) {
    this.billingMode = billingMode;
  }

  public ListBillOverviewByProdRequest ignoreZero(Integer ignoreZero) {
    this.ignoreZero = ignoreZero;
    return this;
  }

   /**
   * Get ignoreZero
   * @return ignoreZero
  **/
  @Schema(description = "")
  public Integer getIgnoreZero() {
    return ignoreZero;
  }

  public void setIgnoreZero(Integer ignoreZero) {
    this.ignoreZero = ignoreZero;
  }

  public ListBillOverviewByProdRequest limit(Integer limit) {
    this.limit = limit;
    return this;
  }

   /**
   * Get limit
   * @return limit
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Integer getLimit() {
    return limit;
  }

  public void setLimit(Integer limit) {
    this.limit = limit;
  }

  public ListBillOverviewByProdRequest needRecordNum(Integer needRecordNum) {
    this.needRecordNum = needRecordNum;
    return this;
  }

   /**
   * Get needRecordNum
   * @return needRecordNum
  **/
  @Schema(description = "")
  public Integer getNeedRecordNum() {
    return needRecordNum;
  }

  public void setNeedRecordNum(Integer needRecordNum) {
    this.needRecordNum = needRecordNum;
  }

  public ListBillOverviewByProdRequest offset(Integer offset) {
    this.offset = offset;
    return this;
  }

   /**
   * Get offset
   * @return offset
  **/
  @Schema(description = "")
  public Integer getOffset() {
    return offset;
  }

  public void setOffset(Integer offset) {
    this.offset = offset;
  }

  public ListBillOverviewByProdRequest ownerID(List<Long> ownerID) {
    this.ownerID = ownerID;
    return this;
  }

  public ListBillOverviewByProdRequest addOwnerIDItem(Long ownerIDItem) {
    if (this.ownerID == null) {
      this.ownerID = new ArrayList<Long>();
    }
    this.ownerID.add(ownerIDItem);
    return this;
  }

   /**
   * Get ownerID
   * @return ownerID
  **/
  @Schema(description = "")
  public List<Long> getOwnerID() {
    return ownerID;
  }

  public void setOwnerID(List<Long> ownerID) {
    this.ownerID = ownerID;
  }

  public ListBillOverviewByProdRequest payerID(List<Long> payerID) {
    this.payerID = payerID;
    return this;
  }

  public ListBillOverviewByProdRequest addPayerIDItem(Long payerIDItem) {
    if (this.payerID == null) {
      this.payerID = new ArrayList<Long>();
    }
    this.payerID.add(payerIDItem);
    return this;
  }

   /**
   * Get payerID
   * @return payerID
  **/
  @Schema(description = "")
  public List<Long> getPayerID() {
    return payerID;
  }

  public void setPayerID(List<Long> payerID) {
    this.payerID = payerID;
  }

  public ListBillOverviewByProdRequest product(List<String> product) {
    this.product = product;
    return this;
  }

  public ListBillOverviewByProdRequest addProductItem(String productItem) {
    if (this.product == null) {
      this.product = new ArrayList<String>();
    }
    this.product.add(productItem);
    return this;
  }

   /**
   * Get product
   * @return product
  **/
  @Schema(description = "")
  public List<String> getProduct() {
    return product;
  }

  public void setProduct(List<String> product) {
    this.product = product;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListBillOverviewByProdRequest listBillOverviewByProdRequest = (ListBillOverviewByProdRequest) o;
    return Objects.equals(this.billCategoryParent, listBillOverviewByProdRequest.billCategoryParent) &&
        Objects.equals(this.billPeriod, listBillOverviewByProdRequest.billPeriod) &&
        Objects.equals(this.billingMode, listBillOverviewByProdRequest.billingMode) &&
        Objects.equals(this.ignoreZero, listBillOverviewByProdRequest.ignoreZero) &&
        Objects.equals(this.limit, listBillOverviewByProdRequest.limit) &&
        Objects.equals(this.needRecordNum, listBillOverviewByProdRequest.needRecordNum) &&
        Objects.equals(this.offset, listBillOverviewByProdRequest.offset) &&
        Objects.equals(this.ownerID, listBillOverviewByProdRequest.ownerID) &&
        Objects.equals(this.payerID, listBillOverviewByProdRequest.payerID) &&
        Objects.equals(this.product, listBillOverviewByProdRequest.product);
  }

  @Override
  public int hashCode() {
    return Objects.hash(billCategoryParent, billPeriod, billingMode, ignoreZero, limit, needRecordNum, offset, ownerID, payerID, product);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListBillOverviewByProdRequest {\n");
    
    sb.append("    billCategoryParent: ").append(toIndentedString(billCategoryParent)).append("\n");
    sb.append("    billPeriod: ").append(toIndentedString(billPeriod)).append("\n");
    sb.append("    billingMode: ").append(toIndentedString(billingMode)).append("\n");
    sb.append("    ignoreZero: ").append(toIndentedString(ignoreZero)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    needRecordNum: ").append(toIndentedString(needRecordNum)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    ownerID: ").append(toIndentedString(ownerID)).append("\n");
    sb.append("    payerID: ").append(toIndentedString(payerID)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
