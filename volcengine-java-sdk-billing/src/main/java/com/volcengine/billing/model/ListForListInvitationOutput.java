/*
 * billing
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.billing.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.billing.model.AuthForListInvitationOutput;
import com.volcengine.billing.model.RelationForListInvitationOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ListForListInvitationOutput
 */


public class ListForListInvitationOutput {
  @SerializedName("Auth")
  private AuthForListInvitationOutput auth = null;

  @SerializedName("InvitationType")
  private Integer invitationType = null;

  @SerializedName("Relation")
  private RelationForListInvitationOutput relation = null;

  public ListForListInvitationOutput auth(AuthForListInvitationOutput auth) {
    this.auth = auth;
    return this;
  }

   /**
   * Get auth
   * @return auth
  **/
  @Valid
  @Schema(description = "")
  public AuthForListInvitationOutput getAuth() {
    return auth;
  }

  public void setAuth(AuthForListInvitationOutput auth) {
    this.auth = auth;
  }

  public ListForListInvitationOutput invitationType(Integer invitationType) {
    this.invitationType = invitationType;
    return this;
  }

   /**
   * Get invitationType
   * @return invitationType
  **/
  @Schema(description = "")
  public Integer getInvitationType() {
    return invitationType;
  }

  public void setInvitationType(Integer invitationType) {
    this.invitationType = invitationType;
  }

  public ListForListInvitationOutput relation(RelationForListInvitationOutput relation) {
    this.relation = relation;
    return this;
  }

   /**
   * Get relation
   * @return relation
  **/
  @Valid
  @Schema(description = "")
  public RelationForListInvitationOutput getRelation() {
    return relation;
  }

  public void setRelation(RelationForListInvitationOutput relation) {
    this.relation = relation;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListForListInvitationOutput listForListInvitationOutput = (ListForListInvitationOutput) o;
    return Objects.equals(this.auth, listForListInvitationOutput.auth) &&
        Objects.equals(this.invitationType, listForListInvitationOutput.invitationType) &&
        Objects.equals(this.relation, listForListInvitationOutput.relation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(auth, invitationType, relation);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListForListInvitationOutput {\n");
    
    sb.append("    auth: ").append(toIndentedString(auth)).append("\n");
    sb.append("    invitationType: ").append(toIndentedString(invitationType)).append("\n");
    sb.append("    relation: ").append(toIndentedString(relation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
