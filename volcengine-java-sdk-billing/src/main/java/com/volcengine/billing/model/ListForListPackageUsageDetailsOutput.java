/*
 * billing
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.billing.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ListForListPackageUsageDetailsOutput
 */



public class ListForListPackageUsageDetailsOutput {
  @SerializedName("AfterAmount")
  private String afterAmount = null;

  @SerializedName("BeforeAmount")
  private String beforeAmount = null;

  @SerializedName("BeginTime")
  private String beginTime = null;

  @SerializedName("ConfigurationCode")
  private String configurationCode = null;

  @SerializedName("ConfigurationName")
  private String configurationName = null;

  @SerializedName("DeductBillingFactor")
  private String deductBillingFactor = null;

  @SerializedName("DeductionAccountID")
  private String deductionAccountID = null;

  @SerializedName("DeductionAmount")
  private String deductionAmount = null;

  @SerializedName("DeductionCalculateFactor")
  private String deductionCalculateFactor = null;

  @SerializedName("DeductionElementCode")
  private String deductionElementCode = null;

  @SerializedName("DeductionInstanceNo")
  private String deductionInstanceNo = null;

  @SerializedName("DeductionInstanceUnit")
  private String deductionInstanceUnit = null;

  @SerializedName("DeductionProduct")
  private String deductionProduct = null;

  @SerializedName("DeductionRatio")
  private String deductionRatio = null;

  @SerializedName("DeductionRegionCode")
  private String deductionRegionCode = null;

  @SerializedName("DeductionSpecification")
  private String deductionSpecification = null;

  @SerializedName("DeductionSpecificationUnit")
  private String deductionSpecificationUnit = null;

  @SerializedName("DeductionTime")
  private String deductionTime = null;

  @SerializedName("DeductionUseAmount")
  private String deductionUseAmount = null;

  @SerializedName("DeductionUserName")
  private String deductionUserName = null;

  @SerializedName("EndTime")
  private String endTime = null;

  @SerializedName("InstanceName")
  private String instanceName = null;

  @SerializedName("InstanceNo")
  private String instanceNo = null;

  @SerializedName("OwnerID")
  private String ownerID = null;

  /**
   * Gets or Sets packageType
   */
  @JsonAdapter(PackageTypeEnum.Adapter.class)
  public enum PackageTypeEnum {
    @SerializedName("Periodic")
    PERIODIC("Periodic"),
    @SerializedName("Diminishing")
    DIMINISHING("Diminishing"),
    @SerializedName("Hybrid")
    HYBRID("Hybrid");

    private String value;

    PackageTypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static PackageTypeEnum fromValue(String input) {
      for (PackageTypeEnum b : PackageTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<PackageTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PackageTypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public PackageTypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return PackageTypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("PackageType")
  private PackageTypeEnum packageType = null;

  @SerializedName("Product")
  private String product = null;

  @SerializedName("ProductName")
  private String productName = null;

  @SerializedName("RegionCode")
  private String regionCode = null;

  @SerializedName("SpecCalculateFactor")
  private String specCalculateFactor = null;

  @SerializedName("Specification")
  private String specification = null;

  @SerializedName("SpecificationUnit")
  private String specificationUnit = null;

  @SerializedName("SubjectNo")
  private String subjectNo = null;

  @SerializedName("Unit")
  private String unit = null;

  @SerializedName("UserName")
  private String userName = null;

  @SerializedName("ZoneCode")
  private String zoneCode = null;

  public ListForListPackageUsageDetailsOutput afterAmount(String afterAmount) {
    this.afterAmount = afterAmount;
    return this;
  }

   /**
   * Get afterAmount
   * @return afterAmount
  **/
  @Schema(description = "")
  public String getAfterAmount() {
    return afterAmount;
  }

  public void setAfterAmount(String afterAmount) {
    this.afterAmount = afterAmount;
  }

  public ListForListPackageUsageDetailsOutput beforeAmount(String beforeAmount) {
    this.beforeAmount = beforeAmount;
    return this;
  }

   /**
   * Get beforeAmount
   * @return beforeAmount
  **/
  @Schema(description = "")
  public String getBeforeAmount() {
    return beforeAmount;
  }

  public void setBeforeAmount(String beforeAmount) {
    this.beforeAmount = beforeAmount;
  }

  public ListForListPackageUsageDetailsOutput beginTime(String beginTime) {
    this.beginTime = beginTime;
    return this;
  }

   /**
   * Get beginTime
   * @return beginTime
  **/
  @Schema(description = "")
  public String getBeginTime() {
    return beginTime;
  }

  public void setBeginTime(String beginTime) {
    this.beginTime = beginTime;
  }

  public ListForListPackageUsageDetailsOutput configurationCode(String configurationCode) {
    this.configurationCode = configurationCode;
    return this;
  }

   /**
   * Get configurationCode
   * @return configurationCode
  **/
  @Schema(description = "")
  public String getConfigurationCode() {
    return configurationCode;
  }

  public void setConfigurationCode(String configurationCode) {
    this.configurationCode = configurationCode;
  }

  public ListForListPackageUsageDetailsOutput configurationName(String configurationName) {
    this.configurationName = configurationName;
    return this;
  }

   /**
   * Get configurationName
   * @return configurationName
  **/
  @Schema(description = "")
  public String getConfigurationName() {
    return configurationName;
  }

  public void setConfigurationName(String configurationName) {
    this.configurationName = configurationName;
  }

  public ListForListPackageUsageDetailsOutput deductBillingFactor(String deductBillingFactor) {
    this.deductBillingFactor = deductBillingFactor;
    return this;
  }

   /**
   * Get deductBillingFactor
   * @return deductBillingFactor
  **/
  @Schema(description = "")
  public String getDeductBillingFactor() {
    return deductBillingFactor;
  }

  public void setDeductBillingFactor(String deductBillingFactor) {
    this.deductBillingFactor = deductBillingFactor;
  }

  public ListForListPackageUsageDetailsOutput deductionAccountID(String deductionAccountID) {
    this.deductionAccountID = deductionAccountID;
    return this;
  }

   /**
   * Get deductionAccountID
   * @return deductionAccountID
  **/
  @Schema(description = "")
  public String getDeductionAccountID() {
    return deductionAccountID;
  }

  public void setDeductionAccountID(String deductionAccountID) {
    this.deductionAccountID = deductionAccountID;
  }

  public ListForListPackageUsageDetailsOutput deductionAmount(String deductionAmount) {
    this.deductionAmount = deductionAmount;
    return this;
  }

   /**
   * Get deductionAmount
   * @return deductionAmount
  **/
  @Schema(description = "")
  public String getDeductionAmount() {
    return deductionAmount;
  }

  public void setDeductionAmount(String deductionAmount) {
    this.deductionAmount = deductionAmount;
  }

  public ListForListPackageUsageDetailsOutput deductionCalculateFactor(String deductionCalculateFactor) {
    this.deductionCalculateFactor = deductionCalculateFactor;
    return this;
  }

   /**
   * Get deductionCalculateFactor
   * @return deductionCalculateFactor
  **/
  @Schema(description = "")
  public String getDeductionCalculateFactor() {
    return deductionCalculateFactor;
  }

  public void setDeductionCalculateFactor(String deductionCalculateFactor) {
    this.deductionCalculateFactor = deductionCalculateFactor;
  }

  public ListForListPackageUsageDetailsOutput deductionElementCode(String deductionElementCode) {
    this.deductionElementCode = deductionElementCode;
    return this;
  }

   /**
   * Get deductionElementCode
   * @return deductionElementCode
  **/
  @Schema(description = "")
  public String getDeductionElementCode() {
    return deductionElementCode;
  }

  public void setDeductionElementCode(String deductionElementCode) {
    this.deductionElementCode = deductionElementCode;
  }

  public ListForListPackageUsageDetailsOutput deductionInstanceNo(String deductionInstanceNo) {
    this.deductionInstanceNo = deductionInstanceNo;
    return this;
  }

   /**
   * Get deductionInstanceNo
   * @return deductionInstanceNo
  **/
  @Schema(description = "")
  public String getDeductionInstanceNo() {
    return deductionInstanceNo;
  }

  public void setDeductionInstanceNo(String deductionInstanceNo) {
    this.deductionInstanceNo = deductionInstanceNo;
  }

  public ListForListPackageUsageDetailsOutput deductionInstanceUnit(String deductionInstanceUnit) {
    this.deductionInstanceUnit = deductionInstanceUnit;
    return this;
  }

   /**
   * Get deductionInstanceUnit
   * @return deductionInstanceUnit
  **/
  @Schema(description = "")
  public String getDeductionInstanceUnit() {
    return deductionInstanceUnit;
  }

  public void setDeductionInstanceUnit(String deductionInstanceUnit) {
    this.deductionInstanceUnit = deductionInstanceUnit;
  }

  public ListForListPackageUsageDetailsOutput deductionProduct(String deductionProduct) {
    this.deductionProduct = deductionProduct;
    return this;
  }

   /**
   * Get deductionProduct
   * @return deductionProduct
  **/
  @Schema(description = "")
  public String getDeductionProduct() {
    return deductionProduct;
  }

  public void setDeductionProduct(String deductionProduct) {
    this.deductionProduct = deductionProduct;
  }

  public ListForListPackageUsageDetailsOutput deductionRatio(String deductionRatio) {
    this.deductionRatio = deductionRatio;
    return this;
  }

   /**
   * Get deductionRatio
   * @return deductionRatio
  **/
  @Schema(description = "")
  public String getDeductionRatio() {
    return deductionRatio;
  }

  public void setDeductionRatio(String deductionRatio) {
    this.deductionRatio = deductionRatio;
  }

  public ListForListPackageUsageDetailsOutput deductionRegionCode(String deductionRegionCode) {
    this.deductionRegionCode = deductionRegionCode;
    return this;
  }

   /**
   * Get deductionRegionCode
   * @return deductionRegionCode
  **/
  @Schema(description = "")
  public String getDeductionRegionCode() {
    return deductionRegionCode;
  }

  public void setDeductionRegionCode(String deductionRegionCode) {
    this.deductionRegionCode = deductionRegionCode;
  }

  public ListForListPackageUsageDetailsOutput deductionSpecification(String deductionSpecification) {
    this.deductionSpecification = deductionSpecification;
    return this;
  }

   /**
   * Get deductionSpecification
   * @return deductionSpecification
  **/
  @Schema(description = "")
  public String getDeductionSpecification() {
    return deductionSpecification;
  }

  public void setDeductionSpecification(String deductionSpecification) {
    this.deductionSpecification = deductionSpecification;
  }

  public ListForListPackageUsageDetailsOutput deductionSpecificationUnit(String deductionSpecificationUnit) {
    this.deductionSpecificationUnit = deductionSpecificationUnit;
    return this;
  }

   /**
   * Get deductionSpecificationUnit
   * @return deductionSpecificationUnit
  **/
  @Schema(description = "")
  public String getDeductionSpecificationUnit() {
    return deductionSpecificationUnit;
  }

  public void setDeductionSpecificationUnit(String deductionSpecificationUnit) {
    this.deductionSpecificationUnit = deductionSpecificationUnit;
  }

  public ListForListPackageUsageDetailsOutput deductionTime(String deductionTime) {
    this.deductionTime = deductionTime;
    return this;
  }

   /**
   * Get deductionTime
   * @return deductionTime
  **/
  @Schema(description = "")
  public String getDeductionTime() {
    return deductionTime;
  }

  public void setDeductionTime(String deductionTime) {
    this.deductionTime = deductionTime;
  }

  public ListForListPackageUsageDetailsOutput deductionUseAmount(String deductionUseAmount) {
    this.deductionUseAmount = deductionUseAmount;
    return this;
  }

   /**
   * Get deductionUseAmount
   * @return deductionUseAmount
  **/
  @Schema(description = "")
  public String getDeductionUseAmount() {
    return deductionUseAmount;
  }

  public void setDeductionUseAmount(String deductionUseAmount) {
    this.deductionUseAmount = deductionUseAmount;
  }

  public ListForListPackageUsageDetailsOutput deductionUserName(String deductionUserName) {
    this.deductionUserName = deductionUserName;
    return this;
  }

   /**
   * Get deductionUserName
   * @return deductionUserName
  **/
  @Schema(description = "")
  public String getDeductionUserName() {
    return deductionUserName;
  }

  public void setDeductionUserName(String deductionUserName) {
    this.deductionUserName = deductionUserName;
  }

  public ListForListPackageUsageDetailsOutput endTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

   /**
   * Get endTime
   * @return endTime
  **/
  @Schema(description = "")
  public String getEndTime() {
    return endTime;
  }

  public void setEndTime(String endTime) {
    this.endTime = endTime;
  }

  public ListForListPackageUsageDetailsOutput instanceName(String instanceName) {
    this.instanceName = instanceName;
    return this;
  }

   /**
   * Get instanceName
   * @return instanceName
  **/
  @Schema(description = "")
  public String getInstanceName() {
    return instanceName;
  }

  public void setInstanceName(String instanceName) {
    this.instanceName = instanceName;
  }

  public ListForListPackageUsageDetailsOutput instanceNo(String instanceNo) {
    this.instanceNo = instanceNo;
    return this;
  }

   /**
   * Get instanceNo
   * @return instanceNo
  **/
  @Schema(description = "")
  public String getInstanceNo() {
    return instanceNo;
  }

  public void setInstanceNo(String instanceNo) {
    this.instanceNo = instanceNo;
  }

  public ListForListPackageUsageDetailsOutput ownerID(String ownerID) {
    this.ownerID = ownerID;
    return this;
  }

   /**
   * Get ownerID
   * @return ownerID
  **/
  @Schema(description = "")
  public String getOwnerID() {
    return ownerID;
  }

  public void setOwnerID(String ownerID) {
    this.ownerID = ownerID;
  }

  public ListForListPackageUsageDetailsOutput packageType(PackageTypeEnum packageType) {
    this.packageType = packageType;
    return this;
  }

   /**
   * Get packageType
   * @return packageType
  **/
  @Schema(description = "")
  public PackageTypeEnum getPackageType() {
    return packageType;
  }

  public void setPackageType(PackageTypeEnum packageType) {
    this.packageType = packageType;
  }

  public ListForListPackageUsageDetailsOutput product(String product) {
    this.product = product;
    return this;
  }

   /**
   * Get product
   * @return product
  **/
  @Schema(description = "")
  public String getProduct() {
    return product;
  }

  public void setProduct(String product) {
    this.product = product;
  }

  public ListForListPackageUsageDetailsOutput productName(String productName) {
    this.productName = productName;
    return this;
  }

   /**
   * Get productName
   * @return productName
  **/
  @Schema(description = "")
  public String getProductName() {
    return productName;
  }

  public void setProductName(String productName) {
    this.productName = productName;
  }

  public ListForListPackageUsageDetailsOutput regionCode(String regionCode) {
    this.regionCode = regionCode;
    return this;
  }

   /**
   * Get regionCode
   * @return regionCode
  **/
  @Schema(description = "")
  public String getRegionCode() {
    return regionCode;
  }

  public void setRegionCode(String regionCode) {
    this.regionCode = regionCode;
  }

  public ListForListPackageUsageDetailsOutput specCalculateFactor(String specCalculateFactor) {
    this.specCalculateFactor = specCalculateFactor;
    return this;
  }

   /**
   * Get specCalculateFactor
   * @return specCalculateFactor
  **/
  @Schema(description = "")
  public String getSpecCalculateFactor() {
    return specCalculateFactor;
  }

  public void setSpecCalculateFactor(String specCalculateFactor) {
    this.specCalculateFactor = specCalculateFactor;
  }

  public ListForListPackageUsageDetailsOutput specification(String specification) {
    this.specification = specification;
    return this;
  }

   /**
   * Get specification
   * @return specification
  **/
  @Schema(description = "")
  public String getSpecification() {
    return specification;
  }

  public void setSpecification(String specification) {
    this.specification = specification;
  }

  public ListForListPackageUsageDetailsOutput specificationUnit(String specificationUnit) {
    this.specificationUnit = specificationUnit;
    return this;
  }

   /**
   * Get specificationUnit
   * @return specificationUnit
  **/
  @Schema(description = "")
  public String getSpecificationUnit() {
    return specificationUnit;
  }

  public void setSpecificationUnit(String specificationUnit) {
    this.specificationUnit = specificationUnit;
  }

  public ListForListPackageUsageDetailsOutput subjectNo(String subjectNo) {
    this.subjectNo = subjectNo;
    return this;
  }

   /**
   * Get subjectNo
   * @return subjectNo
  **/
  @Schema(description = "")
  public String getSubjectNo() {
    return subjectNo;
  }

  public void setSubjectNo(String subjectNo) {
    this.subjectNo = subjectNo;
  }

  public ListForListPackageUsageDetailsOutput unit(String unit) {
    this.unit = unit;
    return this;
  }

   /**
   * Get unit
   * @return unit
  **/
  @Schema(description = "")
  public String getUnit() {
    return unit;
  }

  public void setUnit(String unit) {
    this.unit = unit;
  }

  public ListForListPackageUsageDetailsOutput userName(String userName) {
    this.userName = userName;
    return this;
  }

   /**
   * Get userName
   * @return userName
  **/
  @Schema(description = "")
  public String getUserName() {
    return userName;
  }

  public void setUserName(String userName) {
    this.userName = userName;
  }

  public ListForListPackageUsageDetailsOutput zoneCode(String zoneCode) {
    this.zoneCode = zoneCode;
    return this;
  }

   /**
   * Get zoneCode
   * @return zoneCode
  **/
  @Schema(description = "")
  public String getZoneCode() {
    return zoneCode;
  }

  public void setZoneCode(String zoneCode) {
    this.zoneCode = zoneCode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListForListPackageUsageDetailsOutput listForListPackageUsageDetailsOutput = (ListForListPackageUsageDetailsOutput) o;
    return Objects.equals(this.afterAmount, listForListPackageUsageDetailsOutput.afterAmount) &&
        Objects.equals(this.beforeAmount, listForListPackageUsageDetailsOutput.beforeAmount) &&
        Objects.equals(this.beginTime, listForListPackageUsageDetailsOutput.beginTime) &&
        Objects.equals(this.configurationCode, listForListPackageUsageDetailsOutput.configurationCode) &&
        Objects.equals(this.configurationName, listForListPackageUsageDetailsOutput.configurationName) &&
        Objects.equals(this.deductBillingFactor, listForListPackageUsageDetailsOutput.deductBillingFactor) &&
        Objects.equals(this.deductionAccountID, listForListPackageUsageDetailsOutput.deductionAccountID) &&
        Objects.equals(this.deductionAmount, listForListPackageUsageDetailsOutput.deductionAmount) &&
        Objects.equals(this.deductionCalculateFactor, listForListPackageUsageDetailsOutput.deductionCalculateFactor) &&
        Objects.equals(this.deductionElementCode, listForListPackageUsageDetailsOutput.deductionElementCode) &&
        Objects.equals(this.deductionInstanceNo, listForListPackageUsageDetailsOutput.deductionInstanceNo) &&
        Objects.equals(this.deductionInstanceUnit, listForListPackageUsageDetailsOutput.deductionInstanceUnit) &&
        Objects.equals(this.deductionProduct, listForListPackageUsageDetailsOutput.deductionProduct) &&
        Objects.equals(this.deductionRatio, listForListPackageUsageDetailsOutput.deductionRatio) &&
        Objects.equals(this.deductionRegionCode, listForListPackageUsageDetailsOutput.deductionRegionCode) &&
        Objects.equals(this.deductionSpecification, listForListPackageUsageDetailsOutput.deductionSpecification) &&
        Objects.equals(this.deductionSpecificationUnit, listForListPackageUsageDetailsOutput.deductionSpecificationUnit) &&
        Objects.equals(this.deductionTime, listForListPackageUsageDetailsOutput.deductionTime) &&
        Objects.equals(this.deductionUseAmount, listForListPackageUsageDetailsOutput.deductionUseAmount) &&
        Objects.equals(this.deductionUserName, listForListPackageUsageDetailsOutput.deductionUserName) &&
        Objects.equals(this.endTime, listForListPackageUsageDetailsOutput.endTime) &&
        Objects.equals(this.instanceName, listForListPackageUsageDetailsOutput.instanceName) &&
        Objects.equals(this.instanceNo, listForListPackageUsageDetailsOutput.instanceNo) &&
        Objects.equals(this.ownerID, listForListPackageUsageDetailsOutput.ownerID) &&
        Objects.equals(this.packageType, listForListPackageUsageDetailsOutput.packageType) &&
        Objects.equals(this.product, listForListPackageUsageDetailsOutput.product) &&
        Objects.equals(this.productName, listForListPackageUsageDetailsOutput.productName) &&
        Objects.equals(this.regionCode, listForListPackageUsageDetailsOutput.regionCode) &&
        Objects.equals(this.specCalculateFactor, listForListPackageUsageDetailsOutput.specCalculateFactor) &&
        Objects.equals(this.specification, listForListPackageUsageDetailsOutput.specification) &&
        Objects.equals(this.specificationUnit, listForListPackageUsageDetailsOutput.specificationUnit) &&
        Objects.equals(this.subjectNo, listForListPackageUsageDetailsOutput.subjectNo) &&
        Objects.equals(this.unit, listForListPackageUsageDetailsOutput.unit) &&
        Objects.equals(this.userName, listForListPackageUsageDetailsOutput.userName) &&
        Objects.equals(this.zoneCode, listForListPackageUsageDetailsOutput.zoneCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(afterAmount, beforeAmount, beginTime, configurationCode, configurationName, deductBillingFactor, deductionAccountID, deductionAmount, deductionCalculateFactor, deductionElementCode, deductionInstanceNo, deductionInstanceUnit, deductionProduct, deductionRatio, deductionRegionCode, deductionSpecification, deductionSpecificationUnit, deductionTime, deductionUseAmount, deductionUserName, endTime, instanceName, instanceNo, ownerID, packageType, product, productName, regionCode, specCalculateFactor, specification, specificationUnit, subjectNo, unit, userName, zoneCode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListForListPackageUsageDetailsOutput {\n");
    
    sb.append("    afterAmount: ").append(toIndentedString(afterAmount)).append("\n");
    sb.append("    beforeAmount: ").append(toIndentedString(beforeAmount)).append("\n");
    sb.append("    beginTime: ").append(toIndentedString(beginTime)).append("\n");
    sb.append("    configurationCode: ").append(toIndentedString(configurationCode)).append("\n");
    sb.append("    configurationName: ").append(toIndentedString(configurationName)).append("\n");
    sb.append("    deductBillingFactor: ").append(toIndentedString(deductBillingFactor)).append("\n");
    sb.append("    deductionAccountID: ").append(toIndentedString(deductionAccountID)).append("\n");
    sb.append("    deductionAmount: ").append(toIndentedString(deductionAmount)).append("\n");
    sb.append("    deductionCalculateFactor: ").append(toIndentedString(deductionCalculateFactor)).append("\n");
    sb.append("    deductionElementCode: ").append(toIndentedString(deductionElementCode)).append("\n");
    sb.append("    deductionInstanceNo: ").append(toIndentedString(deductionInstanceNo)).append("\n");
    sb.append("    deductionInstanceUnit: ").append(toIndentedString(deductionInstanceUnit)).append("\n");
    sb.append("    deductionProduct: ").append(toIndentedString(deductionProduct)).append("\n");
    sb.append("    deductionRatio: ").append(toIndentedString(deductionRatio)).append("\n");
    sb.append("    deductionRegionCode: ").append(toIndentedString(deductionRegionCode)).append("\n");
    sb.append("    deductionSpecification: ").append(toIndentedString(deductionSpecification)).append("\n");
    sb.append("    deductionSpecificationUnit: ").append(toIndentedString(deductionSpecificationUnit)).append("\n");
    sb.append("    deductionTime: ").append(toIndentedString(deductionTime)).append("\n");
    sb.append("    deductionUseAmount: ").append(toIndentedString(deductionUseAmount)).append("\n");
    sb.append("    deductionUserName: ").append(toIndentedString(deductionUserName)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    instanceName: ").append(toIndentedString(instanceName)).append("\n");
    sb.append("    instanceNo: ").append(toIndentedString(instanceNo)).append("\n");
    sb.append("    ownerID: ").append(toIndentedString(ownerID)).append("\n");
    sb.append("    packageType: ").append(toIndentedString(packageType)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    productName: ").append(toIndentedString(productName)).append("\n");
    sb.append("    regionCode: ").append(toIndentedString(regionCode)).append("\n");
    sb.append("    specCalculateFactor: ").append(toIndentedString(specCalculateFactor)).append("\n");
    sb.append("    specification: ").append(toIndentedString(specification)).append("\n");
    sb.append("    specificationUnit: ").append(toIndentedString(specificationUnit)).append("\n");
    sb.append("    subjectNo: ").append(toIndentedString(subjectNo)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    zoneCode: ").append(toIndentedString(zoneCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
