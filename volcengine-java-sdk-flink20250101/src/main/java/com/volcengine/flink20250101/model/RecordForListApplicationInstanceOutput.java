/*
 * flink20250101
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.flink20250101.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.flink20250101.model.DependencyForListApplicationInstanceOutput;
import com.volcengine.flink20250101.model.DeployRequestForListApplicationInstanceOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * RecordForListApplicationInstanceOutput
 */



public class RecordForListApplicationInstanceOutput {
  @SerializedName("AccountId")
  private String accountId = null;

  @SerializedName("ApplicationId")
  private String applicationId = null;

  @SerializedName("Args")
  private String args = null;

  @SerializedName("CompleteRestUrl")
  private String completeRestUrl = null;

  @SerializedName("Conf")
  private String conf = null;

  @SerializedName("Dependency")
  private DependencyForListApplicationInstanceOutput dependency = null;

  @SerializedName("DeployRequest")
  private DeployRequestForListApplicationInstanceOutput deployRequest = null;

  @SerializedName("DeploymentId")
  private String deploymentId = null;

  @SerializedName("EndTime")
  private String endTime = null;

  @SerializedName("EngineVersion")
  private String engineVersion = null;

  @SerializedName("Id")
  private String id = null;

  @SerializedName("Jar")
  private String jar = null;

  @SerializedName("JobId")
  private String jobId = null;

  @SerializedName("JobName")
  private String jobName = null;

  @SerializedName("JobType")
  private String jobType = null;

  @SerializedName("MainClass")
  private String mainClass = null;

  @SerializedName("ProjectId")
  private String projectId = null;

  @SerializedName("SqlText")
  private String sqlText = null;

  @SerializedName("StartTime")
  private String startTime = null;

  @SerializedName("State")
  private String state = null;

  @SerializedName("UserId")
  private String userId = null;

  public RecordForListApplicationInstanceOutput accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @Schema(description = "")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public RecordForListApplicationInstanceOutput applicationId(String applicationId) {
    this.applicationId = applicationId;
    return this;
  }

   /**
   * Get applicationId
   * @return applicationId
  **/
  @Schema(description = "")
  public String getApplicationId() {
    return applicationId;
  }

  public void setApplicationId(String applicationId) {
    this.applicationId = applicationId;
  }

  public RecordForListApplicationInstanceOutput args(String args) {
    this.args = args;
    return this;
  }

   /**
   * Get args
   * @return args
  **/
  @Schema(description = "")
  public String getArgs() {
    return args;
  }

  public void setArgs(String args) {
    this.args = args;
  }

  public RecordForListApplicationInstanceOutput completeRestUrl(String completeRestUrl) {
    this.completeRestUrl = completeRestUrl;
    return this;
  }

   /**
   * Get completeRestUrl
   * @return completeRestUrl
  **/
  @Schema(description = "")
  public String getCompleteRestUrl() {
    return completeRestUrl;
  }

  public void setCompleteRestUrl(String completeRestUrl) {
    this.completeRestUrl = completeRestUrl;
  }

  public RecordForListApplicationInstanceOutput conf(String conf) {
    this.conf = conf;
    return this;
  }

   /**
   * Get conf
   * @return conf
  **/
  @Schema(description = "")
  public String getConf() {
    return conf;
  }

  public void setConf(String conf) {
    this.conf = conf;
  }

  public RecordForListApplicationInstanceOutput dependency(DependencyForListApplicationInstanceOutput dependency) {
    this.dependency = dependency;
    return this;
  }

   /**
   * Get dependency
   * @return dependency
  **/
  @Valid
  @Schema(description = "")
  public DependencyForListApplicationInstanceOutput getDependency() {
    return dependency;
  }

  public void setDependency(DependencyForListApplicationInstanceOutput dependency) {
    this.dependency = dependency;
  }

  public RecordForListApplicationInstanceOutput deployRequest(DeployRequestForListApplicationInstanceOutput deployRequest) {
    this.deployRequest = deployRequest;
    return this;
  }

   /**
   * Get deployRequest
   * @return deployRequest
  **/
  @Valid
  @Schema(description = "")
  public DeployRequestForListApplicationInstanceOutput getDeployRequest() {
    return deployRequest;
  }

  public void setDeployRequest(DeployRequestForListApplicationInstanceOutput deployRequest) {
    this.deployRequest = deployRequest;
  }

  public RecordForListApplicationInstanceOutput deploymentId(String deploymentId) {
    this.deploymentId = deploymentId;
    return this;
  }

   /**
   * Get deploymentId
   * @return deploymentId
  **/
  @Schema(description = "")
  public String getDeploymentId() {
    return deploymentId;
  }

  public void setDeploymentId(String deploymentId) {
    this.deploymentId = deploymentId;
  }

  public RecordForListApplicationInstanceOutput endTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

   /**
   * Get endTime
   * @return endTime
  **/
  @Schema(description = "")
  public String getEndTime() {
    return endTime;
  }

  public void setEndTime(String endTime) {
    this.endTime = endTime;
  }

  public RecordForListApplicationInstanceOutput engineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
    return this;
  }

   /**
   * Get engineVersion
   * @return engineVersion
  **/
  @Schema(description = "")
  public String getEngineVersion() {
    return engineVersion;
  }

  public void setEngineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
  }

  public RecordForListApplicationInstanceOutput id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public RecordForListApplicationInstanceOutput jar(String jar) {
    this.jar = jar;
    return this;
  }

   /**
   * Get jar
   * @return jar
  **/
  @Schema(description = "")
  public String getJar() {
    return jar;
  }

  public void setJar(String jar) {
    this.jar = jar;
  }

  public RecordForListApplicationInstanceOutput jobId(String jobId) {
    this.jobId = jobId;
    return this;
  }

   /**
   * Get jobId
   * @return jobId
  **/
  @Schema(description = "")
  public String getJobId() {
    return jobId;
  }

  public void setJobId(String jobId) {
    this.jobId = jobId;
  }

  public RecordForListApplicationInstanceOutput jobName(String jobName) {
    this.jobName = jobName;
    return this;
  }

   /**
   * Get jobName
   * @return jobName
  **/
  @Schema(description = "")
  public String getJobName() {
    return jobName;
  }

  public void setJobName(String jobName) {
    this.jobName = jobName;
  }

  public RecordForListApplicationInstanceOutput jobType(String jobType) {
    this.jobType = jobType;
    return this;
  }

   /**
   * Get jobType
   * @return jobType
  **/
  @Schema(description = "")
  public String getJobType() {
    return jobType;
  }

  public void setJobType(String jobType) {
    this.jobType = jobType;
  }

  public RecordForListApplicationInstanceOutput mainClass(String mainClass) {
    this.mainClass = mainClass;
    return this;
  }

   /**
   * Get mainClass
   * @return mainClass
  **/
  @Schema(description = "")
  public String getMainClass() {
    return mainClass;
  }

  public void setMainClass(String mainClass) {
    this.mainClass = mainClass;
  }

  public RecordForListApplicationInstanceOutput projectId(String projectId) {
    this.projectId = projectId;
    return this;
  }

   /**
   * Get projectId
   * @return projectId
  **/
  @Schema(description = "")
  public String getProjectId() {
    return projectId;
  }

  public void setProjectId(String projectId) {
    this.projectId = projectId;
  }

  public RecordForListApplicationInstanceOutput sqlText(String sqlText) {
    this.sqlText = sqlText;
    return this;
  }

   /**
   * Get sqlText
   * @return sqlText
  **/
  @Schema(description = "")
  public String getSqlText() {
    return sqlText;
  }

  public void setSqlText(String sqlText) {
    this.sqlText = sqlText;
  }

  public RecordForListApplicationInstanceOutput startTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @Schema(description = "")
  public String getStartTime() {
    return startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }

  public RecordForListApplicationInstanceOutput state(String state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @Schema(description = "")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public RecordForListApplicationInstanceOutput userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @Schema(description = "")
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RecordForListApplicationInstanceOutput recordForListApplicationInstanceOutput = (RecordForListApplicationInstanceOutput) o;
    return Objects.equals(this.accountId, recordForListApplicationInstanceOutput.accountId) &&
        Objects.equals(this.applicationId, recordForListApplicationInstanceOutput.applicationId) &&
        Objects.equals(this.args, recordForListApplicationInstanceOutput.args) &&
        Objects.equals(this.completeRestUrl, recordForListApplicationInstanceOutput.completeRestUrl) &&
        Objects.equals(this.conf, recordForListApplicationInstanceOutput.conf) &&
        Objects.equals(this.dependency, recordForListApplicationInstanceOutput.dependency) &&
        Objects.equals(this.deployRequest, recordForListApplicationInstanceOutput.deployRequest) &&
        Objects.equals(this.deploymentId, recordForListApplicationInstanceOutput.deploymentId) &&
        Objects.equals(this.endTime, recordForListApplicationInstanceOutput.endTime) &&
        Objects.equals(this.engineVersion, recordForListApplicationInstanceOutput.engineVersion) &&
        Objects.equals(this.id, recordForListApplicationInstanceOutput.id) &&
        Objects.equals(this.jar, recordForListApplicationInstanceOutput.jar) &&
        Objects.equals(this.jobId, recordForListApplicationInstanceOutput.jobId) &&
        Objects.equals(this.jobName, recordForListApplicationInstanceOutput.jobName) &&
        Objects.equals(this.jobType, recordForListApplicationInstanceOutput.jobType) &&
        Objects.equals(this.mainClass, recordForListApplicationInstanceOutput.mainClass) &&
        Objects.equals(this.projectId, recordForListApplicationInstanceOutput.projectId) &&
        Objects.equals(this.sqlText, recordForListApplicationInstanceOutput.sqlText) &&
        Objects.equals(this.startTime, recordForListApplicationInstanceOutput.startTime) &&
        Objects.equals(this.state, recordForListApplicationInstanceOutput.state) &&
        Objects.equals(this.userId, recordForListApplicationInstanceOutput.userId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, applicationId, args, completeRestUrl, conf, dependency, deployRequest, deploymentId, endTime, engineVersion, id, jar, jobId, jobName, jobType, mainClass, projectId, sqlText, startTime, state, userId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RecordForListApplicationInstanceOutput {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("    args: ").append(toIndentedString(args)).append("\n");
    sb.append("    completeRestUrl: ").append(toIndentedString(completeRestUrl)).append("\n");
    sb.append("    conf: ").append(toIndentedString(conf)).append("\n");
    sb.append("    dependency: ").append(toIndentedString(dependency)).append("\n");
    sb.append("    deployRequest: ").append(toIndentedString(deployRequest)).append("\n");
    sb.append("    deploymentId: ").append(toIndentedString(deploymentId)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    engineVersion: ").append(toIndentedString(engineVersion)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    jar: ").append(toIndentedString(jar)).append("\n");
    sb.append("    jobId: ").append(toIndentedString(jobId)).append("\n");
    sb.append("    jobName: ").append(toIndentedString(jobName)).append("\n");
    sb.append("    jobType: ").append(toIndentedString(jobType)).append("\n");
    sb.append("    mainClass: ").append(toIndentedString(mainClass)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    sqlText: ").append(toIndentedString(sqlText)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
