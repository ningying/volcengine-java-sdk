/*
 * flink20250101
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.flink20250101.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ListApplicationInstanceRequest
 */



public class ListApplicationInstanceRequest {
  @SerializedName("JobId")
  private Long jobId = null;

  @SerializedName("JobName")
  private String jobName = null;

  @SerializedName("PageNum")
  private String pageNum = null;

  @SerializedName("PageSize")
  private String pageSize = null;

  @SerializedName("ProjectId")
  private String projectId = null;

  @SerializedName("ResourcePool")
  private String resourcePool = null;

  @SerializedName("SortField")
  private String sortField = null;

  @SerializedName("SortOrder")
  private String sortOrder = null;

  @SerializedName("State")
  private String state = null;

  public ListApplicationInstanceRequest jobId(Long jobId) {
    this.jobId = jobId;
    return this;
  }

   /**
   * Get jobId
   * @return jobId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Long getJobId() {
    return jobId;
  }

  public void setJobId(Long jobId) {
    this.jobId = jobId;
  }

  public ListApplicationInstanceRequest jobName(String jobName) {
    this.jobName = jobName;
    return this;
  }

   /**
   * Get jobName
   * @return jobName
  **/
  @Schema(description = "")
  public String getJobName() {
    return jobName;
  }

  public void setJobName(String jobName) {
    this.jobName = jobName;
  }

  public ListApplicationInstanceRequest pageNum(String pageNum) {
    this.pageNum = pageNum;
    return this;
  }

   /**
   * Get pageNum
   * @return pageNum
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getPageNum() {
    return pageNum;
  }

  public void setPageNum(String pageNum) {
    this.pageNum = pageNum;
  }

  public ListApplicationInstanceRequest pageSize(String pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getPageSize() {
    return pageSize;
  }

  public void setPageSize(String pageSize) {
    this.pageSize = pageSize;
  }

  public ListApplicationInstanceRequest projectId(String projectId) {
    this.projectId = projectId;
    return this;
  }

   /**
   * Get projectId
   * @return projectId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getProjectId() {
    return projectId;
  }

  public void setProjectId(String projectId) {
    this.projectId = projectId;
  }

  public ListApplicationInstanceRequest resourcePool(String resourcePool) {
    this.resourcePool = resourcePool;
    return this;
  }

   /**
   * Get resourcePool
   * @return resourcePool
  **/
  @Schema(description = "")
  public String getResourcePool() {
    return resourcePool;
  }

  public void setResourcePool(String resourcePool) {
    this.resourcePool = resourcePool;
  }

  public ListApplicationInstanceRequest sortField(String sortField) {
    this.sortField = sortField;
    return this;
  }

   /**
   * Get sortField
   * @return sortField
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getSortField() {
    return sortField;
  }

  public void setSortField(String sortField) {
    this.sortField = sortField;
  }

  public ListApplicationInstanceRequest sortOrder(String sortOrder) {
    this.sortOrder = sortOrder;
    return this;
  }

   /**
   * Get sortOrder
   * @return sortOrder
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getSortOrder() {
    return sortOrder;
  }

  public void setSortOrder(String sortOrder) {
    this.sortOrder = sortOrder;
  }

  public ListApplicationInstanceRequest state(String state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListApplicationInstanceRequest listApplicationInstanceRequest = (ListApplicationInstanceRequest) o;
    return Objects.equals(this.jobId, listApplicationInstanceRequest.jobId) &&
        Objects.equals(this.jobName, listApplicationInstanceRequest.jobName) &&
        Objects.equals(this.pageNum, listApplicationInstanceRequest.pageNum) &&
        Objects.equals(this.pageSize, listApplicationInstanceRequest.pageSize) &&
        Objects.equals(this.projectId, listApplicationInstanceRequest.projectId) &&
        Objects.equals(this.resourcePool, listApplicationInstanceRequest.resourcePool) &&
        Objects.equals(this.sortField, listApplicationInstanceRequest.sortField) &&
        Objects.equals(this.sortOrder, listApplicationInstanceRequest.sortOrder) &&
        Objects.equals(this.state, listApplicationInstanceRequest.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(jobId, jobName, pageNum, pageSize, projectId, resourcePool, sortField, sortOrder, state);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListApplicationInstanceRequest {\n");
    
    sb.append("    jobId: ").append(toIndentedString(jobId)).append("\n");
    sb.append("    jobName: ").append(toIndentedString(jobName)).append("\n");
    sb.append("    pageNum: ").append(toIndentedString(pageNum)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    resourcePool: ").append(toIndentedString(resourcePool)).append("\n");
    sb.append("    sortField: ").append(toIndentedString(sortField)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
