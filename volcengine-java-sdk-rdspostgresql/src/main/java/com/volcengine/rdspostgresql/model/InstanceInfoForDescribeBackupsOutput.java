/*
 * rds_postgresql
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.rdspostgresql.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.rdspostgresql.model.ChargeDetailForDescribeBackupsOutput;
import com.volcengine.rdspostgresql.model.NodeForDescribeBackupsOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * InstanceInfoForDescribeBackupsOutput
 */



public class InstanceInfoForDescribeBackupsOutput {
  @SerializedName("ChargeDetail")
  private ChargeDetailForDescribeBackupsOutput chargeDetail = null;

  @SerializedName("DBEngineVersion")
  private String dbEngineVersion = null;

  @SerializedName("InstanceId")
  private String instanceId = null;

  @SerializedName("InstanceName")
  private String instanceName = null;

  @SerializedName("InstanceStatus")
  private String instanceStatus = null;

  @SerializedName("InstanceType")
  private String instanceType = null;

  @SerializedName("Memory")
  private Integer memory = null;

  @SerializedName("Nodes")
  private List<NodeForDescribeBackupsOutput> nodes = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("StorageSpace")
  private Integer storageSpace = null;

  @SerializedName("StorageType")
  private String storageType = null;

  @SerializedName("SubnetId")
  private String subnetId = null;

  @SerializedName("VCPU")
  private Integer VCPU = null;

  @SerializedName("VpcId")
  private String vpcId = null;

  @SerializedName("ZoneId")
  private String zoneId = null;

  public InstanceInfoForDescribeBackupsOutput chargeDetail(ChargeDetailForDescribeBackupsOutput chargeDetail) {
    this.chargeDetail = chargeDetail;
    return this;
  }

   /**
   * Get chargeDetail
   * @return chargeDetail
  **/
  @Valid
  @Schema(description = "")
  public ChargeDetailForDescribeBackupsOutput getChargeDetail() {
    return chargeDetail;
  }

  public void setChargeDetail(ChargeDetailForDescribeBackupsOutput chargeDetail) {
    this.chargeDetail = chargeDetail;
  }

  public InstanceInfoForDescribeBackupsOutput dbEngineVersion(String dbEngineVersion) {
    this.dbEngineVersion = dbEngineVersion;
    return this;
  }

   /**
   * Get dbEngineVersion
   * @return dbEngineVersion
  **/
  @Schema(description = "")
  public String getDbEngineVersion() {
    return dbEngineVersion;
  }

  public void setDbEngineVersion(String dbEngineVersion) {
    this.dbEngineVersion = dbEngineVersion;
  }

  public InstanceInfoForDescribeBackupsOutput instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * Get instanceId
   * @return instanceId
  **/
  @Schema(description = "")
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }

  public InstanceInfoForDescribeBackupsOutput instanceName(String instanceName) {
    this.instanceName = instanceName;
    return this;
  }

   /**
   * Get instanceName
   * @return instanceName
  **/
  @Schema(description = "")
  public String getInstanceName() {
    return instanceName;
  }

  public void setInstanceName(String instanceName) {
    this.instanceName = instanceName;
  }

  public InstanceInfoForDescribeBackupsOutput instanceStatus(String instanceStatus) {
    this.instanceStatus = instanceStatus;
    return this;
  }

   /**
   * Get instanceStatus
   * @return instanceStatus
  **/
  @Schema(description = "")
  public String getInstanceStatus() {
    return instanceStatus;
  }

  public void setInstanceStatus(String instanceStatus) {
    this.instanceStatus = instanceStatus;
  }

  public InstanceInfoForDescribeBackupsOutput instanceType(String instanceType) {
    this.instanceType = instanceType;
    return this;
  }

   /**
   * Get instanceType
   * @return instanceType
  **/
  @Schema(description = "")
  public String getInstanceType() {
    return instanceType;
  }

  public void setInstanceType(String instanceType) {
    this.instanceType = instanceType;
  }

  public InstanceInfoForDescribeBackupsOutput memory(Integer memory) {
    this.memory = memory;
    return this;
  }

   /**
   * Get memory
   * @return memory
  **/
  @Schema(description = "")
  public Integer getMemory() {
    return memory;
  }

  public void setMemory(Integer memory) {
    this.memory = memory;
  }

  public InstanceInfoForDescribeBackupsOutput nodes(List<NodeForDescribeBackupsOutput> nodes) {
    this.nodes = nodes;
    return this;
  }

  public InstanceInfoForDescribeBackupsOutput addNodesItem(NodeForDescribeBackupsOutput nodesItem) {
    if (this.nodes == null) {
      this.nodes = new ArrayList<NodeForDescribeBackupsOutput>();
    }
    this.nodes.add(nodesItem);
    return this;
  }

   /**
   * Get nodes
   * @return nodes
  **/
  @Valid
  @Schema(description = "")
  public List<NodeForDescribeBackupsOutput> getNodes() {
    return nodes;
  }

  public void setNodes(List<NodeForDescribeBackupsOutput> nodes) {
    this.nodes = nodes;
  }

  public InstanceInfoForDescribeBackupsOutput projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public InstanceInfoForDescribeBackupsOutput storageSpace(Integer storageSpace) {
    this.storageSpace = storageSpace;
    return this;
  }

   /**
   * Get storageSpace
   * @return storageSpace
  **/
  @Schema(description = "")
  public Integer getStorageSpace() {
    return storageSpace;
  }

  public void setStorageSpace(Integer storageSpace) {
    this.storageSpace = storageSpace;
  }

  public InstanceInfoForDescribeBackupsOutput storageType(String storageType) {
    this.storageType = storageType;
    return this;
  }

   /**
   * Get storageType
   * @return storageType
  **/
  @Schema(description = "")
  public String getStorageType() {
    return storageType;
  }

  public void setStorageType(String storageType) {
    this.storageType = storageType;
  }

  public InstanceInfoForDescribeBackupsOutput subnetId(String subnetId) {
    this.subnetId = subnetId;
    return this;
  }

   /**
   * Get subnetId
   * @return subnetId
  **/
  @Schema(description = "")
  public String getSubnetId() {
    return subnetId;
  }

  public void setSubnetId(String subnetId) {
    this.subnetId = subnetId;
  }

  public InstanceInfoForDescribeBackupsOutput VCPU(Integer VCPU) {
    this.VCPU = VCPU;
    return this;
  }

   /**
   * Get VCPU
   * @return VCPU
  **/
  @Schema(description = "")
  public Integer getVCPU() {
    return VCPU;
  }

  public void setVCPU(Integer VCPU) {
    this.VCPU = VCPU;
  }

  public InstanceInfoForDescribeBackupsOutput vpcId(String vpcId) {
    this.vpcId = vpcId;
    return this;
  }

   /**
   * Get vpcId
   * @return vpcId
  **/
  @Schema(description = "")
  public String getVpcId() {
    return vpcId;
  }

  public void setVpcId(String vpcId) {
    this.vpcId = vpcId;
  }

  public InstanceInfoForDescribeBackupsOutput zoneId(String zoneId) {
    this.zoneId = zoneId;
    return this;
  }

   /**
   * Get zoneId
   * @return zoneId
  **/
  @Schema(description = "")
  public String getZoneId() {
    return zoneId;
  }

  public void setZoneId(String zoneId) {
    this.zoneId = zoneId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstanceInfoForDescribeBackupsOutput instanceInfoForDescribeBackupsOutput = (InstanceInfoForDescribeBackupsOutput) o;
    return Objects.equals(this.chargeDetail, instanceInfoForDescribeBackupsOutput.chargeDetail) &&
        Objects.equals(this.dbEngineVersion, instanceInfoForDescribeBackupsOutput.dbEngineVersion) &&
        Objects.equals(this.instanceId, instanceInfoForDescribeBackupsOutput.instanceId) &&
        Objects.equals(this.instanceName, instanceInfoForDescribeBackupsOutput.instanceName) &&
        Objects.equals(this.instanceStatus, instanceInfoForDescribeBackupsOutput.instanceStatus) &&
        Objects.equals(this.instanceType, instanceInfoForDescribeBackupsOutput.instanceType) &&
        Objects.equals(this.memory, instanceInfoForDescribeBackupsOutput.memory) &&
        Objects.equals(this.nodes, instanceInfoForDescribeBackupsOutput.nodes) &&
        Objects.equals(this.projectName, instanceInfoForDescribeBackupsOutput.projectName) &&
        Objects.equals(this.storageSpace, instanceInfoForDescribeBackupsOutput.storageSpace) &&
        Objects.equals(this.storageType, instanceInfoForDescribeBackupsOutput.storageType) &&
        Objects.equals(this.subnetId, instanceInfoForDescribeBackupsOutput.subnetId) &&
        Objects.equals(this.VCPU, instanceInfoForDescribeBackupsOutput.VCPU) &&
        Objects.equals(this.vpcId, instanceInfoForDescribeBackupsOutput.vpcId) &&
        Objects.equals(this.zoneId, instanceInfoForDescribeBackupsOutput.zoneId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(chargeDetail, dbEngineVersion, instanceId, instanceName, instanceStatus, instanceType, memory, nodes, projectName, storageSpace, storageType, subnetId, VCPU, vpcId, zoneId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstanceInfoForDescribeBackupsOutput {\n");
    
    sb.append("    chargeDetail: ").append(toIndentedString(chargeDetail)).append("\n");
    sb.append("    dbEngineVersion: ").append(toIndentedString(dbEngineVersion)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    instanceName: ").append(toIndentedString(instanceName)).append("\n");
    sb.append("    instanceStatus: ").append(toIndentedString(instanceStatus)).append("\n");
    sb.append("    instanceType: ").append(toIndentedString(instanceType)).append("\n");
    sb.append("    memory: ").append(toIndentedString(memory)).append("\n");
    sb.append("    nodes: ").append(toIndentedString(nodes)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    storageSpace: ").append(toIndentedString(storageSpace)).append("\n");
    sb.append("    storageType: ").append(toIndentedString(storageType)).append("\n");
    sb.append("    subnetId: ").append(toIndentedString(subnetId)).append("\n");
    sb.append("    VCPU: ").append(toIndentedString(VCPU)).append("\n");
    sb.append("    vpcId: ").append(toIndentedString(vpcId)).append("\n");
    sb.append("    zoneId: ").append(toIndentedString(zoneId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
