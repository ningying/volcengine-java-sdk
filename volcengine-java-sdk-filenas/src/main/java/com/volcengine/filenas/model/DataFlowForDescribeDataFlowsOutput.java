/*
 * filenas
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.filenas.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.filenas.model.EvictPolicyForDescribeDataFlowsOutput;
import com.volcengine.filenas.model.ExportPolicyForDescribeDataFlowsOutput;
import com.volcengine.filenas.model.ImportPolicyForDescribeDataFlowsOutput;
import com.volcengine.filenas.model.TlsInfoForDescribeDataFlowsOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DataFlowForDescribeDataFlowsOutput
 */



public class DataFlowForDescribeDataFlowsOutput {
  @SerializedName("BucketName")
  private String bucketName = null;

  @SerializedName("BucketPrefix")
  private String bucketPrefix = null;

  @SerializedName("CreateTime")
  private String createTime = null;

  @SerializedName("EnableBucketVersioning")
  private Boolean enableBucketVersioning = null;

  @SerializedName("EvictPolicy")
  private EvictPolicyForDescribeDataFlowsOutput evictPolicy = null;

  @SerializedName("ExportPolicy")
  private ExportPolicyForDescribeDataFlowsOutput exportPolicy = null;

  @SerializedName("FileSystemId")
  private String fileSystemId = null;

  @SerializedName("FileSystemPath")
  private String fileSystemPath = null;

  @SerializedName("Id")
  private String id = null;

  @SerializedName("ImportPolicy")
  private ImportPolicyForDescribeDataFlowsOutput importPolicy = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("QueueExec")
  private Long queueExec = null;

  @SerializedName("QueueFailed")
  private Long queueFailed = null;

  @SerializedName("QueueLen")
  private Long queueLen = null;

  @SerializedName("Releasing")
  private Boolean releasing = null;

  @SerializedName("RunningTaskNumber")
  private Integer runningTaskNumber = null;

  /**
   * Gets or Sets sameNameFilePolicy
   */
  @JsonAdapter(SameNameFilePolicyEnum.Adapter.class)
  public enum SameNameFilePolicyEnum {
    @SerializedName("Skip")
    SKIP("Skip"),
    @SerializedName("KeepLatest")
    KEEPLATEST("KeepLatest"),
    @SerializedName("OverWrite")
    OVERWRITE("OverWrite");

    private String value;

    SameNameFilePolicyEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static SameNameFilePolicyEnum fromValue(String input) {
      for (SameNameFilePolicyEnum b : SameNameFilePolicyEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<SameNameFilePolicyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SameNameFilePolicyEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public SameNameFilePolicyEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return SameNameFilePolicyEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("SameNameFilePolicy")
  private SameNameFilePolicyEnum sameNameFilePolicy = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    @SerializedName("Creating")
    CREATING("Creating"),
    @SerializedName("Running")
    RUNNING("Running"),
    @SerializedName("Updating")
    UPDATING("Updating"),
    @SerializedName("Deleting")
    DELETING("Deleting"),
    @SerializedName("Warn")
    WARN("Warn");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String input) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return StatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("Status")
  private StatusEnum status = null;

  /**
   * Gets or Sets syncStatus
   */
  @JsonAdapter(SyncStatusEnum.Adapter.class)
  public enum SyncStatusEnum {
    @SerializedName("Syncing")
    SYNCING("Syncing"),
    @SerializedName("Synced")
    SYNCED("Synced"),
    @SerializedName("SyncError")
    SYNCERROR("SyncError");

    private String value;

    SyncStatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static SyncStatusEnum fromValue(String input) {
      for (SyncStatusEnum b : SyncStatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<SyncStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SyncStatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public SyncStatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return SyncStatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("SyncStatus")
  private SyncStatusEnum syncStatus = null;

  @SerializedName("TlsInfo")
  private TlsInfoForDescribeDataFlowsOutput tlsInfo = null;

  @SerializedName("UpdateTime")
  private String updateTime = null;

  public DataFlowForDescribeDataFlowsOutput bucketName(String bucketName) {
    this.bucketName = bucketName;
    return this;
  }

   /**
   * Get bucketName
   * @return bucketName
  **/
  @Schema(description = "")
  public String getBucketName() {
    return bucketName;
  }

  public void setBucketName(String bucketName) {
    this.bucketName = bucketName;
  }

  public DataFlowForDescribeDataFlowsOutput bucketPrefix(String bucketPrefix) {
    this.bucketPrefix = bucketPrefix;
    return this;
  }

   /**
   * Get bucketPrefix
   * @return bucketPrefix
  **/
  @Schema(description = "")
  public String getBucketPrefix() {
    return bucketPrefix;
  }

  public void setBucketPrefix(String bucketPrefix) {
    this.bucketPrefix = bucketPrefix;
  }

  public DataFlowForDescribeDataFlowsOutput createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @Schema(description = "")
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }

  public DataFlowForDescribeDataFlowsOutput enableBucketVersioning(Boolean enableBucketVersioning) {
    this.enableBucketVersioning = enableBucketVersioning;
    return this;
  }

   /**
   * Get enableBucketVersioning
   * @return enableBucketVersioning
  **/
  @Schema(description = "")
  public Boolean isEnableBucketVersioning() {
    return enableBucketVersioning;
  }

  public void setEnableBucketVersioning(Boolean enableBucketVersioning) {
    this.enableBucketVersioning = enableBucketVersioning;
  }

  public DataFlowForDescribeDataFlowsOutput evictPolicy(EvictPolicyForDescribeDataFlowsOutput evictPolicy) {
    this.evictPolicy = evictPolicy;
    return this;
  }

   /**
   * Get evictPolicy
   * @return evictPolicy
  **/
  @Valid
  @Schema(description = "")
  public EvictPolicyForDescribeDataFlowsOutput getEvictPolicy() {
    return evictPolicy;
  }

  public void setEvictPolicy(EvictPolicyForDescribeDataFlowsOutput evictPolicy) {
    this.evictPolicy = evictPolicy;
  }

  public DataFlowForDescribeDataFlowsOutput exportPolicy(ExportPolicyForDescribeDataFlowsOutput exportPolicy) {
    this.exportPolicy = exportPolicy;
    return this;
  }

   /**
   * Get exportPolicy
   * @return exportPolicy
  **/
  @Valid
  @Schema(description = "")
  public ExportPolicyForDescribeDataFlowsOutput getExportPolicy() {
    return exportPolicy;
  }

  public void setExportPolicy(ExportPolicyForDescribeDataFlowsOutput exportPolicy) {
    this.exportPolicy = exportPolicy;
  }

  public DataFlowForDescribeDataFlowsOutput fileSystemId(String fileSystemId) {
    this.fileSystemId = fileSystemId;
    return this;
  }

   /**
   * Get fileSystemId
   * @return fileSystemId
  **/
  @Schema(description = "")
  public String getFileSystemId() {
    return fileSystemId;
  }

  public void setFileSystemId(String fileSystemId) {
    this.fileSystemId = fileSystemId;
  }

  public DataFlowForDescribeDataFlowsOutput fileSystemPath(String fileSystemPath) {
    this.fileSystemPath = fileSystemPath;
    return this;
  }

   /**
   * Get fileSystemPath
   * @return fileSystemPath
  **/
  @Schema(description = "")
  public String getFileSystemPath() {
    return fileSystemPath;
  }

  public void setFileSystemPath(String fileSystemPath) {
    this.fileSystemPath = fileSystemPath;
  }

  public DataFlowForDescribeDataFlowsOutput id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public DataFlowForDescribeDataFlowsOutput importPolicy(ImportPolicyForDescribeDataFlowsOutput importPolicy) {
    this.importPolicy = importPolicy;
    return this;
  }

   /**
   * Get importPolicy
   * @return importPolicy
  **/
  @Valid
  @Schema(description = "")
  public ImportPolicyForDescribeDataFlowsOutput getImportPolicy() {
    return importPolicy;
  }

  public void setImportPolicy(ImportPolicyForDescribeDataFlowsOutput importPolicy) {
    this.importPolicy = importPolicy;
  }

  public DataFlowForDescribeDataFlowsOutput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DataFlowForDescribeDataFlowsOutput queueExec(Long queueExec) {
    this.queueExec = queueExec;
    return this;
  }

   /**
   * Get queueExec
   * @return queueExec
  **/
  @Schema(description = "")
  public Long getQueueExec() {
    return queueExec;
  }

  public void setQueueExec(Long queueExec) {
    this.queueExec = queueExec;
  }

  public DataFlowForDescribeDataFlowsOutput queueFailed(Long queueFailed) {
    this.queueFailed = queueFailed;
    return this;
  }

   /**
   * Get queueFailed
   * @return queueFailed
  **/
  @Schema(description = "")
  public Long getQueueFailed() {
    return queueFailed;
  }

  public void setQueueFailed(Long queueFailed) {
    this.queueFailed = queueFailed;
  }

  public DataFlowForDescribeDataFlowsOutput queueLen(Long queueLen) {
    this.queueLen = queueLen;
    return this;
  }

   /**
   * Get queueLen
   * @return queueLen
  **/
  @Schema(description = "")
  public Long getQueueLen() {
    return queueLen;
  }

  public void setQueueLen(Long queueLen) {
    this.queueLen = queueLen;
  }

  public DataFlowForDescribeDataFlowsOutput releasing(Boolean releasing) {
    this.releasing = releasing;
    return this;
  }

   /**
   * Get releasing
   * @return releasing
  **/
  @Schema(description = "")
  public Boolean isReleasing() {
    return releasing;
  }

  public void setReleasing(Boolean releasing) {
    this.releasing = releasing;
  }

  public DataFlowForDescribeDataFlowsOutput runningTaskNumber(Integer runningTaskNumber) {
    this.runningTaskNumber = runningTaskNumber;
    return this;
  }

   /**
   * Get runningTaskNumber
   * @return runningTaskNumber
  **/
  @Schema(description = "")
  public Integer getRunningTaskNumber() {
    return runningTaskNumber;
  }

  public void setRunningTaskNumber(Integer runningTaskNumber) {
    this.runningTaskNumber = runningTaskNumber;
  }

  public DataFlowForDescribeDataFlowsOutput sameNameFilePolicy(SameNameFilePolicyEnum sameNameFilePolicy) {
    this.sameNameFilePolicy = sameNameFilePolicy;
    return this;
  }

   /**
   * Get sameNameFilePolicy
   * @return sameNameFilePolicy
  **/
  @Schema(description = "")
  public SameNameFilePolicyEnum getSameNameFilePolicy() {
    return sameNameFilePolicy;
  }

  public void setSameNameFilePolicy(SameNameFilePolicyEnum sameNameFilePolicy) {
    this.sameNameFilePolicy = sameNameFilePolicy;
  }

  public DataFlowForDescribeDataFlowsOutput status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public DataFlowForDescribeDataFlowsOutput syncStatus(SyncStatusEnum syncStatus) {
    this.syncStatus = syncStatus;
    return this;
  }

   /**
   * Get syncStatus
   * @return syncStatus
  **/
  @Schema(description = "")
  public SyncStatusEnum getSyncStatus() {
    return syncStatus;
  }

  public void setSyncStatus(SyncStatusEnum syncStatus) {
    this.syncStatus = syncStatus;
  }

  public DataFlowForDescribeDataFlowsOutput tlsInfo(TlsInfoForDescribeDataFlowsOutput tlsInfo) {
    this.tlsInfo = tlsInfo;
    return this;
  }

   /**
   * Get tlsInfo
   * @return tlsInfo
  **/
  @Valid
  @Schema(description = "")
  public TlsInfoForDescribeDataFlowsOutput getTlsInfo() {
    return tlsInfo;
  }

  public void setTlsInfo(TlsInfoForDescribeDataFlowsOutput tlsInfo) {
    this.tlsInfo = tlsInfo;
  }

  public DataFlowForDescribeDataFlowsOutput updateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @Schema(description = "")
  public String getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataFlowForDescribeDataFlowsOutput dataFlowForDescribeDataFlowsOutput = (DataFlowForDescribeDataFlowsOutput) o;
    return Objects.equals(this.bucketName, dataFlowForDescribeDataFlowsOutput.bucketName) &&
        Objects.equals(this.bucketPrefix, dataFlowForDescribeDataFlowsOutput.bucketPrefix) &&
        Objects.equals(this.createTime, dataFlowForDescribeDataFlowsOutput.createTime) &&
        Objects.equals(this.enableBucketVersioning, dataFlowForDescribeDataFlowsOutput.enableBucketVersioning) &&
        Objects.equals(this.evictPolicy, dataFlowForDescribeDataFlowsOutput.evictPolicy) &&
        Objects.equals(this.exportPolicy, dataFlowForDescribeDataFlowsOutput.exportPolicy) &&
        Objects.equals(this.fileSystemId, dataFlowForDescribeDataFlowsOutput.fileSystemId) &&
        Objects.equals(this.fileSystemPath, dataFlowForDescribeDataFlowsOutput.fileSystemPath) &&
        Objects.equals(this.id, dataFlowForDescribeDataFlowsOutput.id) &&
        Objects.equals(this.importPolicy, dataFlowForDescribeDataFlowsOutput.importPolicy) &&
        Objects.equals(this.name, dataFlowForDescribeDataFlowsOutput.name) &&
        Objects.equals(this.queueExec, dataFlowForDescribeDataFlowsOutput.queueExec) &&
        Objects.equals(this.queueFailed, dataFlowForDescribeDataFlowsOutput.queueFailed) &&
        Objects.equals(this.queueLen, dataFlowForDescribeDataFlowsOutput.queueLen) &&
        Objects.equals(this.releasing, dataFlowForDescribeDataFlowsOutput.releasing) &&
        Objects.equals(this.runningTaskNumber, dataFlowForDescribeDataFlowsOutput.runningTaskNumber) &&
        Objects.equals(this.sameNameFilePolicy, dataFlowForDescribeDataFlowsOutput.sameNameFilePolicy) &&
        Objects.equals(this.status, dataFlowForDescribeDataFlowsOutput.status) &&
        Objects.equals(this.syncStatus, dataFlowForDescribeDataFlowsOutput.syncStatus) &&
        Objects.equals(this.tlsInfo, dataFlowForDescribeDataFlowsOutput.tlsInfo) &&
        Objects.equals(this.updateTime, dataFlowForDescribeDataFlowsOutput.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bucketName, bucketPrefix, createTime, enableBucketVersioning, evictPolicy, exportPolicy, fileSystemId, fileSystemPath, id, importPolicy, name, queueExec, queueFailed, queueLen, releasing, runningTaskNumber, sameNameFilePolicy, status, syncStatus, tlsInfo, updateTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataFlowForDescribeDataFlowsOutput {\n");
    
    sb.append("    bucketName: ").append(toIndentedString(bucketName)).append("\n");
    sb.append("    bucketPrefix: ").append(toIndentedString(bucketPrefix)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    enableBucketVersioning: ").append(toIndentedString(enableBucketVersioning)).append("\n");
    sb.append("    evictPolicy: ").append(toIndentedString(evictPolicy)).append("\n");
    sb.append("    exportPolicy: ").append(toIndentedString(exportPolicy)).append("\n");
    sb.append("    fileSystemId: ").append(toIndentedString(fileSystemId)).append("\n");
    sb.append("    fileSystemPath: ").append(toIndentedString(fileSystemPath)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    importPolicy: ").append(toIndentedString(importPolicy)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    queueExec: ").append(toIndentedString(queueExec)).append("\n");
    sb.append("    queueFailed: ").append(toIndentedString(queueFailed)).append("\n");
    sb.append("    queueLen: ").append(toIndentedString(queueLen)).append("\n");
    sb.append("    releasing: ").append(toIndentedString(releasing)).append("\n");
    sb.append("    runningTaskNumber: ").append(toIndentedString(runningTaskNumber)).append("\n");
    sb.append("    sameNameFilePolicy: ").append(toIndentedString(sameNameFilePolicy)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    syncStatus: ").append(toIndentedString(syncStatus)).append("\n");
    sb.append("    tlsInfo: ").append(toIndentedString(tlsInfo)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
