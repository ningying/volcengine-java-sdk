/*
 * filenas
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.filenas.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.filenas.model.EvictPolicyForUpdateDataFlowInput;
import com.volcengine.filenas.model.ExportPolicyForUpdateDataFlowInput;
import com.volcengine.filenas.model.ImportPolicyForUpdateDataFlowInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * UpdateDataFlowRequest
 */



public class UpdateDataFlowRequest {
  @SerializedName("EvictPolicy")
  private EvictPolicyForUpdateDataFlowInput evictPolicy = null;

  @SerializedName("ExportPolicy")
  private ExportPolicyForUpdateDataFlowInput exportPolicy = null;

  @SerializedName("Id")
  private String id = null;

  @SerializedName("ImportPolicy")
  private ImportPolicyForUpdateDataFlowInput importPolicy = null;

  @SerializedName("Name")
  private String name = null;

  /**
   * Gets or Sets sameNameFilePolicy
   */
  @JsonAdapter(SameNameFilePolicyEnum.Adapter.class)
  public enum SameNameFilePolicyEnum {
    @SerializedName("Skip")
    SKIP("Skip"),
    @SerializedName("KeepLatest")
    KEEPLATEST("KeepLatest"),
    @SerializedName("OverWrite")
    OVERWRITE("OverWrite");

    private String value;

    SameNameFilePolicyEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static SameNameFilePolicyEnum fromValue(String input) {
      for (SameNameFilePolicyEnum b : SameNameFilePolicyEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<SameNameFilePolicyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SameNameFilePolicyEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public SameNameFilePolicyEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return SameNameFilePolicyEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("SameNameFilePolicy")
  private SameNameFilePolicyEnum sameNameFilePolicy = null;

  public UpdateDataFlowRequest evictPolicy(EvictPolicyForUpdateDataFlowInput evictPolicy) {
    this.evictPolicy = evictPolicy;
    return this;
  }

   /**
   * Get evictPolicy
   * @return evictPolicy
  **/
  @Valid
  @Schema(description = "")
  public EvictPolicyForUpdateDataFlowInput getEvictPolicy() {
    return evictPolicy;
  }

  public void setEvictPolicy(EvictPolicyForUpdateDataFlowInput evictPolicy) {
    this.evictPolicy = evictPolicy;
  }

  public UpdateDataFlowRequest exportPolicy(ExportPolicyForUpdateDataFlowInput exportPolicy) {
    this.exportPolicy = exportPolicy;
    return this;
  }

   /**
   * Get exportPolicy
   * @return exportPolicy
  **/
  @Valid
  @Schema(description = "")
  public ExportPolicyForUpdateDataFlowInput getExportPolicy() {
    return exportPolicy;
  }

  public void setExportPolicy(ExportPolicyForUpdateDataFlowInput exportPolicy) {
    this.exportPolicy = exportPolicy;
  }

  public UpdateDataFlowRequest id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public UpdateDataFlowRequest importPolicy(ImportPolicyForUpdateDataFlowInput importPolicy) {
    this.importPolicy = importPolicy;
    return this;
  }

   /**
   * Get importPolicy
   * @return importPolicy
  **/
  @Valid
  @Schema(description = "")
  public ImportPolicyForUpdateDataFlowInput getImportPolicy() {
    return importPolicy;
  }

  public void setImportPolicy(ImportPolicyForUpdateDataFlowInput importPolicy) {
    this.importPolicy = importPolicy;
  }

  public UpdateDataFlowRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public UpdateDataFlowRequest sameNameFilePolicy(SameNameFilePolicyEnum sameNameFilePolicy) {
    this.sameNameFilePolicy = sameNameFilePolicy;
    return this;
  }

   /**
   * Get sameNameFilePolicy
   * @return sameNameFilePolicy
  **/
  @Schema(description = "")
  public SameNameFilePolicyEnum getSameNameFilePolicy() {
    return sameNameFilePolicy;
  }

  public void setSameNameFilePolicy(SameNameFilePolicyEnum sameNameFilePolicy) {
    this.sameNameFilePolicy = sameNameFilePolicy;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateDataFlowRequest updateDataFlowRequest = (UpdateDataFlowRequest) o;
    return Objects.equals(this.evictPolicy, updateDataFlowRequest.evictPolicy) &&
        Objects.equals(this.exportPolicy, updateDataFlowRequest.exportPolicy) &&
        Objects.equals(this.id, updateDataFlowRequest.id) &&
        Objects.equals(this.importPolicy, updateDataFlowRequest.importPolicy) &&
        Objects.equals(this.name, updateDataFlowRequest.name) &&
        Objects.equals(this.sameNameFilePolicy, updateDataFlowRequest.sameNameFilePolicy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(evictPolicy, exportPolicy, id, importPolicy, name, sameNameFilePolicy);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateDataFlowRequest {\n");
    
    sb.append("    evictPolicy: ").append(toIndentedString(evictPolicy)).append("\n");
    sb.append("    exportPolicy: ").append(toIndentedString(exportPolicy)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    importPolicy: ").append(toIndentedString(importPolicy)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    sameNameFilePolicy: ").append(toIndentedString(sameNameFilePolicy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
