/*
 * filenas
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.filenas.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.filenas.model.PermissionGroupForDescribeMountPointsOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ConvertMountPointForDescribeMountPointsOutput
 */


public class ConvertMountPointForDescribeMountPointsOutput {
  @SerializedName("CreateTime")
  private String createTime = null;

  @SerializedName("Domain")
  private String domain = null;

  @SerializedName("Ip")
  private String ip = null;

  @SerializedName("MountPointId")
  private String mountPointId = null;

  @SerializedName("MountPointName")
  private String mountPointName = null;

  @SerializedName("PermissionGroup")
  private PermissionGroupForDescribeMountPointsOutput permissionGroup = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    UNKNOWN("Unknown"),
    CREATING("Creating"),
    RUNNING("Running"),
    UPDATING("Updating"),
    ERROR("Error"),
    DELETING("Deleting"),
    DELETEERROR("DeleteError"),
    DELETED("Deleted"),
    STOPPED("Stopped");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String input) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return StatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("Status")
  private StatusEnum status = null;

  @SerializedName("SubnetId")
  private String subnetId = null;

  @SerializedName("SubnetName")
  private String subnetName = null;

  @SerializedName("UpdateTime")
  private String updateTime = null;

  @SerializedName("VpcId")
  private String vpcId = null;

  @SerializedName("VpcName")
  private String vpcName = null;

  public ConvertMountPointForDescribeMountPointsOutput createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @Schema(description = "")
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }

  public ConvertMountPointForDescribeMountPointsOutput domain(String domain) {
    this.domain = domain;
    return this;
  }

   /**
   * Get domain
   * @return domain
  **/
  @Schema(description = "")
  public String getDomain() {
    return domain;
  }

  public void setDomain(String domain) {
    this.domain = domain;
  }

  public ConvertMountPointForDescribeMountPointsOutput ip(String ip) {
    this.ip = ip;
    return this;
  }

   /**
   * Get ip
   * @return ip
  **/
  @Schema(description = "")
  public String getIp() {
    return ip;
  }

  public void setIp(String ip) {
    this.ip = ip;
  }

  public ConvertMountPointForDescribeMountPointsOutput mountPointId(String mountPointId) {
    this.mountPointId = mountPointId;
    return this;
  }

   /**
   * Get mountPointId
   * @return mountPointId
  **/
  @Schema(description = "")
  public String getMountPointId() {
    return mountPointId;
  }

  public void setMountPointId(String mountPointId) {
    this.mountPointId = mountPointId;
  }

  public ConvertMountPointForDescribeMountPointsOutput mountPointName(String mountPointName) {
    this.mountPointName = mountPointName;
    return this;
  }

   /**
   * Get mountPointName
   * @return mountPointName
  **/
  @Schema(description = "")
  public String getMountPointName() {
    return mountPointName;
  }

  public void setMountPointName(String mountPointName) {
    this.mountPointName = mountPointName;
  }

  public ConvertMountPointForDescribeMountPointsOutput permissionGroup(PermissionGroupForDescribeMountPointsOutput permissionGroup) {
    this.permissionGroup = permissionGroup;
    return this;
  }

   /**
   * Get permissionGroup
   * @return permissionGroup
  **/
  @Valid
  @Schema(description = "")
  public PermissionGroupForDescribeMountPointsOutput getPermissionGroup() {
    return permissionGroup;
  }

  public void setPermissionGroup(PermissionGroupForDescribeMountPointsOutput permissionGroup) {
    this.permissionGroup = permissionGroup;
  }

  public ConvertMountPointForDescribeMountPointsOutput status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public ConvertMountPointForDescribeMountPointsOutput subnetId(String subnetId) {
    this.subnetId = subnetId;
    return this;
  }

   /**
   * Get subnetId
   * @return subnetId
  **/
  @Schema(description = "")
  public String getSubnetId() {
    return subnetId;
  }

  public void setSubnetId(String subnetId) {
    this.subnetId = subnetId;
  }

  public ConvertMountPointForDescribeMountPointsOutput subnetName(String subnetName) {
    this.subnetName = subnetName;
    return this;
  }

   /**
   * Get subnetName
   * @return subnetName
  **/
  @Schema(description = "")
  public String getSubnetName() {
    return subnetName;
  }

  public void setSubnetName(String subnetName) {
    this.subnetName = subnetName;
  }

  public ConvertMountPointForDescribeMountPointsOutput updateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @Schema(description = "")
  public String getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }

  public ConvertMountPointForDescribeMountPointsOutput vpcId(String vpcId) {
    this.vpcId = vpcId;
    return this;
  }

   /**
   * Get vpcId
   * @return vpcId
  **/
  @Schema(description = "")
  public String getVpcId() {
    return vpcId;
  }

  public void setVpcId(String vpcId) {
    this.vpcId = vpcId;
  }

  public ConvertMountPointForDescribeMountPointsOutput vpcName(String vpcName) {
    this.vpcName = vpcName;
    return this;
  }

   /**
   * Get vpcName
   * @return vpcName
  **/
  @Schema(description = "")
  public String getVpcName() {
    return vpcName;
  }

  public void setVpcName(String vpcName) {
    this.vpcName = vpcName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConvertMountPointForDescribeMountPointsOutput convertMountPointForDescribeMountPointsOutput = (ConvertMountPointForDescribeMountPointsOutput) o;
    return Objects.equals(this.createTime, convertMountPointForDescribeMountPointsOutput.createTime) &&
        Objects.equals(this.domain, convertMountPointForDescribeMountPointsOutput.domain) &&
        Objects.equals(this.ip, convertMountPointForDescribeMountPointsOutput.ip) &&
        Objects.equals(this.mountPointId, convertMountPointForDescribeMountPointsOutput.mountPointId) &&
        Objects.equals(this.mountPointName, convertMountPointForDescribeMountPointsOutput.mountPointName) &&
        Objects.equals(this.permissionGroup, convertMountPointForDescribeMountPointsOutput.permissionGroup) &&
        Objects.equals(this.status, convertMountPointForDescribeMountPointsOutput.status) &&
        Objects.equals(this.subnetId, convertMountPointForDescribeMountPointsOutput.subnetId) &&
        Objects.equals(this.subnetName, convertMountPointForDescribeMountPointsOutput.subnetName) &&
        Objects.equals(this.updateTime, convertMountPointForDescribeMountPointsOutput.updateTime) &&
        Objects.equals(this.vpcId, convertMountPointForDescribeMountPointsOutput.vpcId) &&
        Objects.equals(this.vpcName, convertMountPointForDescribeMountPointsOutput.vpcName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createTime, domain, ip, mountPointId, mountPointName, permissionGroup, status, subnetId, subnetName, updateTime, vpcId, vpcName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConvertMountPointForDescribeMountPointsOutput {\n");
    
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("    mountPointId: ").append(toIndentedString(mountPointId)).append("\n");
    sb.append("    mountPointName: ").append(toIndentedString(mountPointName)).append("\n");
    sb.append("    permissionGroup: ").append(toIndentedString(permissionGroup)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    subnetId: ").append(toIndentedString(subnetId)).append("\n");
    sb.append("    subnetName: ").append(toIndentedString(subnetName)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    vpcId: ").append(toIndentedString(vpcId)).append("\n");
    sb.append("    vpcName: ").append(toIndentedString(vpcName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
