/*
 * filenas
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.filenas.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.filenas.model.StaticValueForUpdateDataFlowInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DimensionForUpdateDataFlowInput
 */



public class DimensionForUpdateDataFlowInput {
  /**
   * Gets or Sets attr
   */
  @JsonAdapter(AttrEnum.Adapter.class)
  public enum AttrEnum {
    @SerializedName("FileSize")
    FILESIZE("FileSize"),
    @SerializedName("FileSuffix")
    FILESUFFIX("FileSuffix"),
    @SerializedName("SubDirectory")
    SUBDIRECTORY("SubDirectory"),
    @SerializedName("ModifyTime")
    MODIFYTIME("ModifyTime"),
    @SerializedName("AccessTime")
    ACCESSTIME("AccessTime");

    private String value;

    AttrEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static AttrEnum fromValue(String input) {
      for (AttrEnum b : AttrEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<AttrEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AttrEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public AttrEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return AttrEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("Attr")
  private AttrEnum attr = null;

  @SerializedName("StaticValues")
  private List<StaticValueForUpdateDataFlowInput> staticValues = null;

  public DimensionForUpdateDataFlowInput attr(AttrEnum attr) {
    this.attr = attr;
    return this;
  }

   /**
   * Get attr
   * @return attr
  **/
  @Schema(description = "")
  public AttrEnum getAttr() {
    return attr;
  }

  public void setAttr(AttrEnum attr) {
    this.attr = attr;
  }

  public DimensionForUpdateDataFlowInput staticValues(List<StaticValueForUpdateDataFlowInput> staticValues) {
    this.staticValues = staticValues;
    return this;
  }

  public DimensionForUpdateDataFlowInput addStaticValuesItem(StaticValueForUpdateDataFlowInput staticValuesItem) {
    if (this.staticValues == null) {
      this.staticValues = new ArrayList<StaticValueForUpdateDataFlowInput>();
    }
    this.staticValues.add(staticValuesItem);
    return this;
  }

   /**
   * Get staticValues
   * @return staticValues
  **/
  @Valid
  @Schema(description = "")
  public List<StaticValueForUpdateDataFlowInput> getStaticValues() {
    return staticValues;
  }

  public void setStaticValues(List<StaticValueForUpdateDataFlowInput> staticValues) {
    this.staticValues = staticValues;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DimensionForUpdateDataFlowInput dimensionForUpdateDataFlowInput = (DimensionForUpdateDataFlowInput) o;
    return Objects.equals(this.attr, dimensionForUpdateDataFlowInput.attr) &&
        Objects.equals(this.staticValues, dimensionForUpdateDataFlowInput.staticValues);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attr, staticValues);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DimensionForUpdateDataFlowInput {\n");
    
    sb.append("    attr: ").append(toIndentedString(attr)).append("\n");
    sb.append("    staticValues: ").append(toIndentedString(staticValues)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
