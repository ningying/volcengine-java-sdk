/*
 * filenas
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.filenas.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.filenas.model.UserQuotaInfoForDescribeDirQuotasOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DirQuotaInfoForDescribeDirQuotasOutput
 */



public class DirQuotaInfoForDescribeDirQuotasOutput {
  @SerializedName("DirInode")
  private Integer dirInode = null;

  @SerializedName("Path")
  private String path = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    @SerializedName("Initializing")
    INITIALIZING("Initializing"),
    @SerializedName("Running")
    RUNNING("Running"),
    @SerializedName("Deleting")
    DELETING("Deleting");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String input) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return StatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("Status")
  private StatusEnum status = null;

  @SerializedName("UserQuotaInfos")
  private List<UserQuotaInfoForDescribeDirQuotasOutput> userQuotaInfos = null;

  @SerializedName("UserQuotaInfosCount")
  private Integer userQuotaInfosCount = null;

  public DirQuotaInfoForDescribeDirQuotasOutput dirInode(Integer dirInode) {
    this.dirInode = dirInode;
    return this;
  }

   /**
   * Get dirInode
   * @return dirInode
  **/
  @Schema(description = "")
  public Integer getDirInode() {
    return dirInode;
  }

  public void setDirInode(Integer dirInode) {
    this.dirInode = dirInode;
  }

  public DirQuotaInfoForDescribeDirQuotasOutput path(String path) {
    this.path = path;
    return this;
  }

   /**
   * Get path
   * @return path
  **/
  @Schema(description = "")
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }

  public DirQuotaInfoForDescribeDirQuotasOutput status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public DirQuotaInfoForDescribeDirQuotasOutput userQuotaInfos(List<UserQuotaInfoForDescribeDirQuotasOutput> userQuotaInfos) {
    this.userQuotaInfos = userQuotaInfos;
    return this;
  }

  public DirQuotaInfoForDescribeDirQuotasOutput addUserQuotaInfosItem(UserQuotaInfoForDescribeDirQuotasOutput userQuotaInfosItem) {
    if (this.userQuotaInfos == null) {
      this.userQuotaInfos = new ArrayList<UserQuotaInfoForDescribeDirQuotasOutput>();
    }
    this.userQuotaInfos.add(userQuotaInfosItem);
    return this;
  }

   /**
   * Get userQuotaInfos
   * @return userQuotaInfos
  **/
  @Valid
  @Schema(description = "")
  public List<UserQuotaInfoForDescribeDirQuotasOutput> getUserQuotaInfos() {
    return userQuotaInfos;
  }

  public void setUserQuotaInfos(List<UserQuotaInfoForDescribeDirQuotasOutput> userQuotaInfos) {
    this.userQuotaInfos = userQuotaInfos;
  }

  public DirQuotaInfoForDescribeDirQuotasOutput userQuotaInfosCount(Integer userQuotaInfosCount) {
    this.userQuotaInfosCount = userQuotaInfosCount;
    return this;
  }

   /**
   * Get userQuotaInfosCount
   * @return userQuotaInfosCount
  **/
  @Schema(description = "")
  public Integer getUserQuotaInfosCount() {
    return userQuotaInfosCount;
  }

  public void setUserQuotaInfosCount(Integer userQuotaInfosCount) {
    this.userQuotaInfosCount = userQuotaInfosCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DirQuotaInfoForDescribeDirQuotasOutput dirQuotaInfoForDescribeDirQuotasOutput = (DirQuotaInfoForDescribeDirQuotasOutput) o;
    return Objects.equals(this.dirInode, dirQuotaInfoForDescribeDirQuotasOutput.dirInode) &&
        Objects.equals(this.path, dirQuotaInfoForDescribeDirQuotasOutput.path) &&
        Objects.equals(this.status, dirQuotaInfoForDescribeDirQuotasOutput.status) &&
        Objects.equals(this.userQuotaInfos, dirQuotaInfoForDescribeDirQuotasOutput.userQuotaInfos) &&
        Objects.equals(this.userQuotaInfosCount, dirQuotaInfoForDescribeDirQuotasOutput.userQuotaInfosCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dirInode, path, status, userQuotaInfos, userQuotaInfosCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DirQuotaInfoForDescribeDirQuotasOutput {\n");
    
    sb.append("    dirInode: ").append(toIndentedString(dirInode)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    userQuotaInfos: ").append(toIndentedString(userQuotaInfos)).append("\n");
    sb.append("    userQuotaInfosCount: ").append(toIndentedString(userQuotaInfosCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
