/*
 * filenas
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.filenas.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.filenas.model.EvictPolicyForDescribeDataFlowTasksOutput;
import com.volcengine.filenas.model.ExportPolicyForDescribeDataFlowTasksOutput;
import com.volcengine.filenas.model.ImportPolicyForDescribeDataFlowTasksOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DataFlowTaskForDescribeDataFlowTasksOutput
 */



public class DataFlowTaskForDescribeDataFlowTasksOutput {
  @SerializedName("BucketName")
  private String bucketName = null;

  @SerializedName("BucketPrefix")
  private String bucketPrefix = null;

  @SerializedName("CreateTime")
  private String createTime = null;

  @SerializedName("DataFlowId")
  private String dataFlowId = null;

  @SerializedName("EndTime")
  private String endTime = null;

  @SerializedName("EntryListFileKey")
  private String entryListFileKey = null;

  @SerializedName("EntryListFileName")
  private String entryListFileName = null;

  @SerializedName("EntryListFileUrl")
  private String entryListFileUrl = null;

  @SerializedName("EvictPolicy")
  private EvictPolicyForDescribeDataFlowTasksOutput evictPolicy = null;

  @SerializedName("ExportPolicy")
  private ExportPolicyForDescribeDataFlowTasksOutput exportPolicy = null;

  @SerializedName("FileSystemId")
  private String fileSystemId = null;

  @SerializedName("FileSystemPath")
  private String fileSystemPath = null;

  @SerializedName("Id")
  private String id = null;

  @SerializedName("ImportPolicy")
  private ImportPolicyForDescribeDataFlowTasksOutput importPolicy = null;

  @SerializedName("QueueExec")
  private Long queueExec = null;

  @SerializedName("QueueFailed")
  private Long queueFailed = null;

  @SerializedName("QueueLen")
  private Long queueLen = null;

  /**
   * Gets or Sets sameNameFilePolicy
   */
  @JsonAdapter(SameNameFilePolicyEnum.Adapter.class)
  public enum SameNameFilePolicyEnum {
    @SerializedName("Skip")
    SKIP("Skip"),
    @SerializedName("KeepLatest")
    KEEPLATEST("KeepLatest"),
    @SerializedName("OverWrite")
    OVERWRITE("OverWrite");

    private String value;

    SameNameFilePolicyEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static SameNameFilePolicyEnum fromValue(String input) {
      for (SameNameFilePolicyEnum b : SameNameFilePolicyEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<SameNameFilePolicyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SameNameFilePolicyEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public SameNameFilePolicyEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return SameNameFilePolicyEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("SameNameFilePolicy")
  private SameNameFilePolicyEnum sameNameFilePolicy = null;

  @SerializedName("StartTime")
  private String startTime = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    @SerializedName("Creating")
    CREATING("Creating"),
    @SerializedName("Running")
    RUNNING("Running"),
    @SerializedName("Finished")
    FINISHED("Finished"),
    @SerializedName("Canceling")
    CANCELING("Canceling"),
    @SerializedName("Canceled")
    CANCELED("Canceled"),
    @SerializedName("Deleting")
    DELETING("Deleting"),
    @SerializedName("Error")
    ERROR("Error");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String input) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return StatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("Status")
  private StatusEnum status = null;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    @SerializedName("Import")
    IMPORT("Import"),
    @SerializedName("Export")
    EXPORT("Export"),
    @SerializedName("Evict")
    EVICT("Evict");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TypeEnum fromValue(String input) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return TypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("Type")
  private TypeEnum type = null;

  @SerializedName("UpdateTime")
  private String updateTime = null;

  public DataFlowTaskForDescribeDataFlowTasksOutput bucketName(String bucketName) {
    this.bucketName = bucketName;
    return this;
  }

   /**
   * Get bucketName
   * @return bucketName
  **/
  @Schema(description = "")
  public String getBucketName() {
    return bucketName;
  }

  public void setBucketName(String bucketName) {
    this.bucketName = bucketName;
  }

  public DataFlowTaskForDescribeDataFlowTasksOutput bucketPrefix(String bucketPrefix) {
    this.bucketPrefix = bucketPrefix;
    return this;
  }

   /**
   * Get bucketPrefix
   * @return bucketPrefix
  **/
  @Schema(description = "")
  public String getBucketPrefix() {
    return bucketPrefix;
  }

  public void setBucketPrefix(String bucketPrefix) {
    this.bucketPrefix = bucketPrefix;
  }

  public DataFlowTaskForDescribeDataFlowTasksOutput createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @Schema(description = "")
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }

  public DataFlowTaskForDescribeDataFlowTasksOutput dataFlowId(String dataFlowId) {
    this.dataFlowId = dataFlowId;
    return this;
  }

   /**
   * Get dataFlowId
   * @return dataFlowId
  **/
  @Schema(description = "")
  public String getDataFlowId() {
    return dataFlowId;
  }

  public void setDataFlowId(String dataFlowId) {
    this.dataFlowId = dataFlowId;
  }

  public DataFlowTaskForDescribeDataFlowTasksOutput endTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

   /**
   * Get endTime
   * @return endTime
  **/
  @Schema(description = "")
  public String getEndTime() {
    return endTime;
  }

  public void setEndTime(String endTime) {
    this.endTime = endTime;
  }

  public DataFlowTaskForDescribeDataFlowTasksOutput entryListFileKey(String entryListFileKey) {
    this.entryListFileKey = entryListFileKey;
    return this;
  }

   /**
   * Get entryListFileKey
   * @return entryListFileKey
  **/
  @Schema(description = "")
  public String getEntryListFileKey() {
    return entryListFileKey;
  }

  public void setEntryListFileKey(String entryListFileKey) {
    this.entryListFileKey = entryListFileKey;
  }

  public DataFlowTaskForDescribeDataFlowTasksOutput entryListFileName(String entryListFileName) {
    this.entryListFileName = entryListFileName;
    return this;
  }

   /**
   * Get entryListFileName
   * @return entryListFileName
  **/
  @Schema(description = "")
  public String getEntryListFileName() {
    return entryListFileName;
  }

  public void setEntryListFileName(String entryListFileName) {
    this.entryListFileName = entryListFileName;
  }

  public DataFlowTaskForDescribeDataFlowTasksOutput entryListFileUrl(String entryListFileUrl) {
    this.entryListFileUrl = entryListFileUrl;
    return this;
  }

   /**
   * Get entryListFileUrl
   * @return entryListFileUrl
  **/
  @Schema(description = "")
  public String getEntryListFileUrl() {
    return entryListFileUrl;
  }

  public void setEntryListFileUrl(String entryListFileUrl) {
    this.entryListFileUrl = entryListFileUrl;
  }

  public DataFlowTaskForDescribeDataFlowTasksOutput evictPolicy(EvictPolicyForDescribeDataFlowTasksOutput evictPolicy) {
    this.evictPolicy = evictPolicy;
    return this;
  }

   /**
   * Get evictPolicy
   * @return evictPolicy
  **/
  @Valid
  @Schema(description = "")
  public EvictPolicyForDescribeDataFlowTasksOutput getEvictPolicy() {
    return evictPolicy;
  }

  public void setEvictPolicy(EvictPolicyForDescribeDataFlowTasksOutput evictPolicy) {
    this.evictPolicy = evictPolicy;
  }

  public DataFlowTaskForDescribeDataFlowTasksOutput exportPolicy(ExportPolicyForDescribeDataFlowTasksOutput exportPolicy) {
    this.exportPolicy = exportPolicy;
    return this;
  }

   /**
   * Get exportPolicy
   * @return exportPolicy
  **/
  @Valid
  @Schema(description = "")
  public ExportPolicyForDescribeDataFlowTasksOutput getExportPolicy() {
    return exportPolicy;
  }

  public void setExportPolicy(ExportPolicyForDescribeDataFlowTasksOutput exportPolicy) {
    this.exportPolicy = exportPolicy;
  }

  public DataFlowTaskForDescribeDataFlowTasksOutput fileSystemId(String fileSystemId) {
    this.fileSystemId = fileSystemId;
    return this;
  }

   /**
   * Get fileSystemId
   * @return fileSystemId
  **/
  @Schema(description = "")
  public String getFileSystemId() {
    return fileSystemId;
  }

  public void setFileSystemId(String fileSystemId) {
    this.fileSystemId = fileSystemId;
  }

  public DataFlowTaskForDescribeDataFlowTasksOutput fileSystemPath(String fileSystemPath) {
    this.fileSystemPath = fileSystemPath;
    return this;
  }

   /**
   * Get fileSystemPath
   * @return fileSystemPath
  **/
  @Schema(description = "")
  public String getFileSystemPath() {
    return fileSystemPath;
  }

  public void setFileSystemPath(String fileSystemPath) {
    this.fileSystemPath = fileSystemPath;
  }

  public DataFlowTaskForDescribeDataFlowTasksOutput id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public DataFlowTaskForDescribeDataFlowTasksOutput importPolicy(ImportPolicyForDescribeDataFlowTasksOutput importPolicy) {
    this.importPolicy = importPolicy;
    return this;
  }

   /**
   * Get importPolicy
   * @return importPolicy
  **/
  @Valid
  @Schema(description = "")
  public ImportPolicyForDescribeDataFlowTasksOutput getImportPolicy() {
    return importPolicy;
  }

  public void setImportPolicy(ImportPolicyForDescribeDataFlowTasksOutput importPolicy) {
    this.importPolicy = importPolicy;
  }

  public DataFlowTaskForDescribeDataFlowTasksOutput queueExec(Long queueExec) {
    this.queueExec = queueExec;
    return this;
  }

   /**
   * Get queueExec
   * @return queueExec
  **/
  @Schema(description = "")
  public Long getQueueExec() {
    return queueExec;
  }

  public void setQueueExec(Long queueExec) {
    this.queueExec = queueExec;
  }

  public DataFlowTaskForDescribeDataFlowTasksOutput queueFailed(Long queueFailed) {
    this.queueFailed = queueFailed;
    return this;
  }

   /**
   * Get queueFailed
   * @return queueFailed
  **/
  @Schema(description = "")
  public Long getQueueFailed() {
    return queueFailed;
  }

  public void setQueueFailed(Long queueFailed) {
    this.queueFailed = queueFailed;
  }

  public DataFlowTaskForDescribeDataFlowTasksOutput queueLen(Long queueLen) {
    this.queueLen = queueLen;
    return this;
  }

   /**
   * Get queueLen
   * @return queueLen
  **/
  @Schema(description = "")
  public Long getQueueLen() {
    return queueLen;
  }

  public void setQueueLen(Long queueLen) {
    this.queueLen = queueLen;
  }

  public DataFlowTaskForDescribeDataFlowTasksOutput sameNameFilePolicy(SameNameFilePolicyEnum sameNameFilePolicy) {
    this.sameNameFilePolicy = sameNameFilePolicy;
    return this;
  }

   /**
   * Get sameNameFilePolicy
   * @return sameNameFilePolicy
  **/
  @Schema(description = "")
  public SameNameFilePolicyEnum getSameNameFilePolicy() {
    return sameNameFilePolicy;
  }

  public void setSameNameFilePolicy(SameNameFilePolicyEnum sameNameFilePolicy) {
    this.sameNameFilePolicy = sameNameFilePolicy;
  }

  public DataFlowTaskForDescribeDataFlowTasksOutput startTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @Schema(description = "")
  public String getStartTime() {
    return startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }

  public DataFlowTaskForDescribeDataFlowTasksOutput status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public DataFlowTaskForDescribeDataFlowTasksOutput type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public DataFlowTaskForDescribeDataFlowTasksOutput updateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @Schema(description = "")
  public String getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataFlowTaskForDescribeDataFlowTasksOutput dataFlowTaskForDescribeDataFlowTasksOutput = (DataFlowTaskForDescribeDataFlowTasksOutput) o;
    return Objects.equals(this.bucketName, dataFlowTaskForDescribeDataFlowTasksOutput.bucketName) &&
        Objects.equals(this.bucketPrefix, dataFlowTaskForDescribeDataFlowTasksOutput.bucketPrefix) &&
        Objects.equals(this.createTime, dataFlowTaskForDescribeDataFlowTasksOutput.createTime) &&
        Objects.equals(this.dataFlowId, dataFlowTaskForDescribeDataFlowTasksOutput.dataFlowId) &&
        Objects.equals(this.endTime, dataFlowTaskForDescribeDataFlowTasksOutput.endTime) &&
        Objects.equals(this.entryListFileKey, dataFlowTaskForDescribeDataFlowTasksOutput.entryListFileKey) &&
        Objects.equals(this.entryListFileName, dataFlowTaskForDescribeDataFlowTasksOutput.entryListFileName) &&
        Objects.equals(this.entryListFileUrl, dataFlowTaskForDescribeDataFlowTasksOutput.entryListFileUrl) &&
        Objects.equals(this.evictPolicy, dataFlowTaskForDescribeDataFlowTasksOutput.evictPolicy) &&
        Objects.equals(this.exportPolicy, dataFlowTaskForDescribeDataFlowTasksOutput.exportPolicy) &&
        Objects.equals(this.fileSystemId, dataFlowTaskForDescribeDataFlowTasksOutput.fileSystemId) &&
        Objects.equals(this.fileSystemPath, dataFlowTaskForDescribeDataFlowTasksOutput.fileSystemPath) &&
        Objects.equals(this.id, dataFlowTaskForDescribeDataFlowTasksOutput.id) &&
        Objects.equals(this.importPolicy, dataFlowTaskForDescribeDataFlowTasksOutput.importPolicy) &&
        Objects.equals(this.queueExec, dataFlowTaskForDescribeDataFlowTasksOutput.queueExec) &&
        Objects.equals(this.queueFailed, dataFlowTaskForDescribeDataFlowTasksOutput.queueFailed) &&
        Objects.equals(this.queueLen, dataFlowTaskForDescribeDataFlowTasksOutput.queueLen) &&
        Objects.equals(this.sameNameFilePolicy, dataFlowTaskForDescribeDataFlowTasksOutput.sameNameFilePolicy) &&
        Objects.equals(this.startTime, dataFlowTaskForDescribeDataFlowTasksOutput.startTime) &&
        Objects.equals(this.status, dataFlowTaskForDescribeDataFlowTasksOutput.status) &&
        Objects.equals(this.type, dataFlowTaskForDescribeDataFlowTasksOutput.type) &&
        Objects.equals(this.updateTime, dataFlowTaskForDescribeDataFlowTasksOutput.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bucketName, bucketPrefix, createTime, dataFlowId, endTime, entryListFileKey, entryListFileName, entryListFileUrl, evictPolicy, exportPolicy, fileSystemId, fileSystemPath, id, importPolicy, queueExec, queueFailed, queueLen, sameNameFilePolicy, startTime, status, type, updateTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataFlowTaskForDescribeDataFlowTasksOutput {\n");
    
    sb.append("    bucketName: ").append(toIndentedString(bucketName)).append("\n");
    sb.append("    bucketPrefix: ").append(toIndentedString(bucketPrefix)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    dataFlowId: ").append(toIndentedString(dataFlowId)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    entryListFileKey: ").append(toIndentedString(entryListFileKey)).append("\n");
    sb.append("    entryListFileName: ").append(toIndentedString(entryListFileName)).append("\n");
    sb.append("    entryListFileUrl: ").append(toIndentedString(entryListFileUrl)).append("\n");
    sb.append("    evictPolicy: ").append(toIndentedString(evictPolicy)).append("\n");
    sb.append("    exportPolicy: ").append(toIndentedString(exportPolicy)).append("\n");
    sb.append("    fileSystemId: ").append(toIndentedString(fileSystemId)).append("\n");
    sb.append("    fileSystemPath: ").append(toIndentedString(fileSystemPath)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    importPolicy: ").append(toIndentedString(importPolicy)).append("\n");
    sb.append("    queueExec: ").append(toIndentedString(queueExec)).append("\n");
    sb.append("    queueFailed: ").append(toIndentedString(queueFailed)).append("\n");
    sb.append("    queueLen: ").append(toIndentedString(queueLen)).append("\n");
    sb.append("    sameNameFilePolicy: ").append(toIndentedString(sameNameFilePolicy)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
