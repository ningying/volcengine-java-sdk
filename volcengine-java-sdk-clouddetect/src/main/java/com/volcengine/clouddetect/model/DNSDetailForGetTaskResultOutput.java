/*
 * cloud_detect
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.clouddetect.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.clouddetect.model.DiagnoseDetailForGetTaskResultOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DNSDetailForGetTaskResultOutput
 */



public class DNSDetailForGetTaskResultOutput {
  @SerializedName("ARecord")
  private List<String> arecord = null;

  @SerializedName("AaaaRecord")
  private List<String> aaaaRecord = null;

  @SerializedName("CnameRecord")
  private List<String> cnameRecord = null;

  @SerializedName("DNSCost")
  private Long dnSCost = null;

  @SerializedName("Detail")
  private String detail = null;

  @SerializedName("DiagnoseDetail")
  private DiagnoseDetailForGetTaskResultOutput diagnoseDetail = null;

  @SerializedName("RecordCount")
  private Integer recordCount = null;

  public DNSDetailForGetTaskResultOutput arecord(List<String> arecord) {
    this.arecord = arecord;
    return this;
  }

  public DNSDetailForGetTaskResultOutput addArecordItem(String arecordItem) {
    if (this.arecord == null) {
      this.arecord = new ArrayList<String>();
    }
    this.arecord.add(arecordItem);
    return this;
  }

   /**
   * Get arecord
   * @return arecord
  **/
  @Schema(description = "")
  public List<String> getArecord() {
    return arecord;
  }

  public void setArecord(List<String> arecord) {
    this.arecord = arecord;
  }

  public DNSDetailForGetTaskResultOutput aaaaRecord(List<String> aaaaRecord) {
    this.aaaaRecord = aaaaRecord;
    return this;
  }

  public DNSDetailForGetTaskResultOutput addAaaaRecordItem(String aaaaRecordItem) {
    if (this.aaaaRecord == null) {
      this.aaaaRecord = new ArrayList<String>();
    }
    this.aaaaRecord.add(aaaaRecordItem);
    return this;
  }

   /**
   * Get aaaaRecord
   * @return aaaaRecord
  **/
  @Schema(description = "")
  public List<String> getAaaaRecord() {
    return aaaaRecord;
  }

  public void setAaaaRecord(List<String> aaaaRecord) {
    this.aaaaRecord = aaaaRecord;
  }

  public DNSDetailForGetTaskResultOutput cnameRecord(List<String> cnameRecord) {
    this.cnameRecord = cnameRecord;
    return this;
  }

  public DNSDetailForGetTaskResultOutput addCnameRecordItem(String cnameRecordItem) {
    if (this.cnameRecord == null) {
      this.cnameRecord = new ArrayList<String>();
    }
    this.cnameRecord.add(cnameRecordItem);
    return this;
  }

   /**
   * Get cnameRecord
   * @return cnameRecord
  **/
  @Schema(description = "")
  public List<String> getCnameRecord() {
    return cnameRecord;
  }

  public void setCnameRecord(List<String> cnameRecord) {
    this.cnameRecord = cnameRecord;
  }

  public DNSDetailForGetTaskResultOutput dnSCost(Long dnSCost) {
    this.dnSCost = dnSCost;
    return this;
  }

   /**
   * Get dnSCost
   * @return dnSCost
  **/
  @Schema(description = "")
  public Long getDnSCost() {
    return dnSCost;
  }

  public void setDnSCost(Long dnSCost) {
    this.dnSCost = dnSCost;
  }

  public DNSDetailForGetTaskResultOutput detail(String detail) {
    this.detail = detail;
    return this;
  }

   /**
   * Get detail
   * @return detail
  **/
  @Schema(description = "")
  public String getDetail() {
    return detail;
  }

  public void setDetail(String detail) {
    this.detail = detail;
  }

  public DNSDetailForGetTaskResultOutput diagnoseDetail(DiagnoseDetailForGetTaskResultOutput diagnoseDetail) {
    this.diagnoseDetail = diagnoseDetail;
    return this;
  }

   /**
   * Get diagnoseDetail
   * @return diagnoseDetail
  **/
  @Valid
  @Schema(description = "")
  public DiagnoseDetailForGetTaskResultOutput getDiagnoseDetail() {
    return diagnoseDetail;
  }

  public void setDiagnoseDetail(DiagnoseDetailForGetTaskResultOutput diagnoseDetail) {
    this.diagnoseDetail = diagnoseDetail;
  }

  public DNSDetailForGetTaskResultOutput recordCount(Integer recordCount) {
    this.recordCount = recordCount;
    return this;
  }

   /**
   * Get recordCount
   * @return recordCount
  **/
  @Schema(description = "")
  public Integer getRecordCount() {
    return recordCount;
  }

  public void setRecordCount(Integer recordCount) {
    this.recordCount = recordCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DNSDetailForGetTaskResultOutput dnSDetailForGetTaskResultOutput = (DNSDetailForGetTaskResultOutput) o;
    return Objects.equals(this.arecord, dnSDetailForGetTaskResultOutput.arecord) &&
        Objects.equals(this.aaaaRecord, dnSDetailForGetTaskResultOutput.aaaaRecord) &&
        Objects.equals(this.cnameRecord, dnSDetailForGetTaskResultOutput.cnameRecord) &&
        Objects.equals(this.dnSCost, dnSDetailForGetTaskResultOutput.dnSCost) &&
        Objects.equals(this.detail, dnSDetailForGetTaskResultOutput.detail) &&
        Objects.equals(this.diagnoseDetail, dnSDetailForGetTaskResultOutput.diagnoseDetail) &&
        Objects.equals(this.recordCount, dnSDetailForGetTaskResultOutput.recordCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arecord, aaaaRecord, cnameRecord, dnSCost, detail, diagnoseDetail, recordCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DNSDetailForGetTaskResultOutput {\n");
    
    sb.append("    arecord: ").append(toIndentedString(arecord)).append("\n");
    sb.append("    aaaaRecord: ").append(toIndentedString(aaaaRecord)).append("\n");
    sb.append("    cnameRecord: ").append(toIndentedString(cnameRecord)).append("\n");
    sb.append("    dnSCost: ").append(toIndentedString(dnSCost)).append("\n");
    sb.append("    detail: ").append(toIndentedString(detail)).append("\n");
    sb.append("    diagnoseDetail: ").append(toIndentedString(diagnoseDetail)).append("\n");
    sb.append("    recordCount: ").append(toIndentedString(recordCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
