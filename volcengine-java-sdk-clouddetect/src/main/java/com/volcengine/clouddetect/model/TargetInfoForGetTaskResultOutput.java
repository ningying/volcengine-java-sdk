/*
 * cloud_detect
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.clouddetect.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * TargetInfoForGetTaskResultOutput
 */



public class TargetInfoForGetTaskResultOutput {
  @SerializedName("City")
  private String city = null;

  @SerializedName("DetectURL")
  private String detectURL = null;

  @SerializedName("IP")
  private String IP = null;

  @SerializedName("Ipv6")
  private String ipv6 = null;

  @SerializedName("Isp")
  private String isp = null;

  @SerializedName("Region")
  private String region = null;

  public TargetInfoForGetTaskResultOutput city(String city) {
    this.city = city;
    return this;
  }

   /**
   * Get city
   * @return city
  **/
  @Schema(description = "")
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }

  public TargetInfoForGetTaskResultOutput detectURL(String detectURL) {
    this.detectURL = detectURL;
    return this;
  }

   /**
   * Get detectURL
   * @return detectURL
  **/
  @Schema(description = "")
  public String getDetectURL() {
    return detectURL;
  }

  public void setDetectURL(String detectURL) {
    this.detectURL = detectURL;
  }

  public TargetInfoForGetTaskResultOutput IP(String IP) {
    this.IP = IP;
    return this;
  }

   /**
   * Get IP
   * @return IP
  **/
  @Schema(description = "")
  public String getIP() {
    return IP;
  }

  public void setIP(String IP) {
    this.IP = IP;
  }

  public TargetInfoForGetTaskResultOutput ipv6(String ipv6) {
    this.ipv6 = ipv6;
    return this;
  }

   /**
   * Get ipv6
   * @return ipv6
  **/
  @Schema(description = "")
  public String getIpv6() {
    return ipv6;
  }

  public void setIpv6(String ipv6) {
    this.ipv6 = ipv6;
  }

  public TargetInfoForGetTaskResultOutput isp(String isp) {
    this.isp = isp;
    return this;
  }

   /**
   * Get isp
   * @return isp
  **/
  @Schema(description = "")
  public String getIsp() {
    return isp;
  }

  public void setIsp(String isp) {
    this.isp = isp;
  }

  public TargetInfoForGetTaskResultOutput region(String region) {
    this.region = region;
    return this;
  }

   /**
   * Get region
   * @return region
  **/
  @Schema(description = "")
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TargetInfoForGetTaskResultOutput targetInfoForGetTaskResultOutput = (TargetInfoForGetTaskResultOutput) o;
    return Objects.equals(this.city, targetInfoForGetTaskResultOutput.city) &&
        Objects.equals(this.detectURL, targetInfoForGetTaskResultOutput.detectURL) &&
        Objects.equals(this.IP, targetInfoForGetTaskResultOutput.IP) &&
        Objects.equals(this.ipv6, targetInfoForGetTaskResultOutput.ipv6) &&
        Objects.equals(this.isp, targetInfoForGetTaskResultOutput.isp) &&
        Objects.equals(this.region, targetInfoForGetTaskResultOutput.region);
  }

  @Override
  public int hashCode() {
    return Objects.hash(city, detectURL, IP, ipv6, isp, region);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TargetInfoForGetTaskResultOutput {\n");
    
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    detectURL: ").append(toIndentedString(detectURL)).append("\n");
    sb.append("    IP: ").append(toIndentedString(IP)).append("\n");
    sb.append("    ipv6: ").append(toIndentedString(ipv6)).append("\n");
    sb.append("    isp: ").append(toIndentedString(isp)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
