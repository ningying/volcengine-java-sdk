/*
 * cloud_detect
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.clouddetect.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.clouddetect.model.DiagnoseDetailForGetTaskResultOutput;
import com.volcengine.clouddetect.model.LocationDetailForGetTaskResultOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * UploadDetailForGetTaskResultOutput
 */



public class UploadDetailForGetTaskResultOutput {
  @SerializedName("DNSCost")
  private Long dnSCost = null;

  @SerializedName("DiagnoseDetail")
  private DiagnoseDetailForGetTaskResultOutput diagnoseDetail = null;

  @SerializedName("DownloadSize")
  private Long downloadSize = null;

  @SerializedName("DownloadSpeed")
  private Long downloadSpeed = null;

  @SerializedName("HTTPCode")
  private Long htTPCode = null;

  @SerializedName("HTTPRequestHeader")
  private String htTPRequestHeader = null;

  @SerializedName("HTTPResponseBody")
  private String htTPResponseBody = null;

  @SerializedName("HTTPResponseHeader")
  private String htTPResponseHeader = null;

  @SerializedName("LocationDetail")
  private List<LocationDetailForGetTaskResultOutput> locationDetail = null;

  @SerializedName("RecvCost")
  private Long recvCost = null;

  @SerializedName("RedirectCost")
  private Long redirectCost = null;

  @SerializedName("RedirectNums")
  private Long redirectNums = null;

  @SerializedName("SendCost")
  private Long sendCost = null;

  @SerializedName("SslCost")
  private Long sslCost = null;

  @SerializedName("TCPCost")
  private Long tcPCost = null;

  @SerializedName("TotalCost")
  private Long totalCost = null;

  @SerializedName("TtfbCost")
  private Long ttfbCost = null;

  @SerializedName("UploadSize")
  private Long uploadSize = null;

  @SerializedName("UploadSpeed")
  private Long uploadSpeed = null;

  @SerializedName("UploadTime")
  private Long uploadTime = null;

  public UploadDetailForGetTaskResultOutput dnSCost(Long dnSCost) {
    this.dnSCost = dnSCost;
    return this;
  }

   /**
   * Get dnSCost
   * @return dnSCost
  **/
  @Schema(description = "")
  public Long getDnSCost() {
    return dnSCost;
  }

  public void setDnSCost(Long dnSCost) {
    this.dnSCost = dnSCost;
  }

  public UploadDetailForGetTaskResultOutput diagnoseDetail(DiagnoseDetailForGetTaskResultOutput diagnoseDetail) {
    this.diagnoseDetail = diagnoseDetail;
    return this;
  }

   /**
   * Get diagnoseDetail
   * @return diagnoseDetail
  **/
  @Valid
  @Schema(description = "")
  public DiagnoseDetailForGetTaskResultOutput getDiagnoseDetail() {
    return diagnoseDetail;
  }

  public void setDiagnoseDetail(DiagnoseDetailForGetTaskResultOutput diagnoseDetail) {
    this.diagnoseDetail = diagnoseDetail;
  }

  public UploadDetailForGetTaskResultOutput downloadSize(Long downloadSize) {
    this.downloadSize = downloadSize;
    return this;
  }

   /**
   * Get downloadSize
   * @return downloadSize
  **/
  @Schema(description = "")
  public Long getDownloadSize() {
    return downloadSize;
  }

  public void setDownloadSize(Long downloadSize) {
    this.downloadSize = downloadSize;
  }

  public UploadDetailForGetTaskResultOutput downloadSpeed(Long downloadSpeed) {
    this.downloadSpeed = downloadSpeed;
    return this;
  }

   /**
   * Get downloadSpeed
   * @return downloadSpeed
  **/
  @Schema(description = "")
  public Long getDownloadSpeed() {
    return downloadSpeed;
  }

  public void setDownloadSpeed(Long downloadSpeed) {
    this.downloadSpeed = downloadSpeed;
  }

  public UploadDetailForGetTaskResultOutput htTPCode(Long htTPCode) {
    this.htTPCode = htTPCode;
    return this;
  }

   /**
   * Get htTPCode
   * @return htTPCode
  **/
  @Schema(description = "")
  public Long getHtTPCode() {
    return htTPCode;
  }

  public void setHtTPCode(Long htTPCode) {
    this.htTPCode = htTPCode;
  }

  public UploadDetailForGetTaskResultOutput htTPRequestHeader(String htTPRequestHeader) {
    this.htTPRequestHeader = htTPRequestHeader;
    return this;
  }

   /**
   * Get htTPRequestHeader
   * @return htTPRequestHeader
  **/
  @Schema(description = "")
  public String getHtTPRequestHeader() {
    return htTPRequestHeader;
  }

  public void setHtTPRequestHeader(String htTPRequestHeader) {
    this.htTPRequestHeader = htTPRequestHeader;
  }

  public UploadDetailForGetTaskResultOutput htTPResponseBody(String htTPResponseBody) {
    this.htTPResponseBody = htTPResponseBody;
    return this;
  }

   /**
   * Get htTPResponseBody
   * @return htTPResponseBody
  **/
  @Schema(description = "")
  public String getHtTPResponseBody() {
    return htTPResponseBody;
  }

  public void setHtTPResponseBody(String htTPResponseBody) {
    this.htTPResponseBody = htTPResponseBody;
  }

  public UploadDetailForGetTaskResultOutput htTPResponseHeader(String htTPResponseHeader) {
    this.htTPResponseHeader = htTPResponseHeader;
    return this;
  }

   /**
   * Get htTPResponseHeader
   * @return htTPResponseHeader
  **/
  @Schema(description = "")
  public String getHtTPResponseHeader() {
    return htTPResponseHeader;
  }

  public void setHtTPResponseHeader(String htTPResponseHeader) {
    this.htTPResponseHeader = htTPResponseHeader;
  }

  public UploadDetailForGetTaskResultOutput locationDetail(List<LocationDetailForGetTaskResultOutput> locationDetail) {
    this.locationDetail = locationDetail;
    return this;
  }

  public UploadDetailForGetTaskResultOutput addLocationDetailItem(LocationDetailForGetTaskResultOutput locationDetailItem) {
    if (this.locationDetail == null) {
      this.locationDetail = new ArrayList<LocationDetailForGetTaskResultOutput>();
    }
    this.locationDetail.add(locationDetailItem);
    return this;
  }

   /**
   * Get locationDetail
   * @return locationDetail
  **/
  @Valid
  @Schema(description = "")
  public List<LocationDetailForGetTaskResultOutput> getLocationDetail() {
    return locationDetail;
  }

  public void setLocationDetail(List<LocationDetailForGetTaskResultOutput> locationDetail) {
    this.locationDetail = locationDetail;
  }

  public UploadDetailForGetTaskResultOutput recvCost(Long recvCost) {
    this.recvCost = recvCost;
    return this;
  }

   /**
   * Get recvCost
   * @return recvCost
  **/
  @Schema(description = "")
  public Long getRecvCost() {
    return recvCost;
  }

  public void setRecvCost(Long recvCost) {
    this.recvCost = recvCost;
  }

  public UploadDetailForGetTaskResultOutput redirectCost(Long redirectCost) {
    this.redirectCost = redirectCost;
    return this;
  }

   /**
   * Get redirectCost
   * @return redirectCost
  **/
  @Schema(description = "")
  public Long getRedirectCost() {
    return redirectCost;
  }

  public void setRedirectCost(Long redirectCost) {
    this.redirectCost = redirectCost;
  }

  public UploadDetailForGetTaskResultOutput redirectNums(Long redirectNums) {
    this.redirectNums = redirectNums;
    return this;
  }

   /**
   * Get redirectNums
   * @return redirectNums
  **/
  @Schema(description = "")
  public Long getRedirectNums() {
    return redirectNums;
  }

  public void setRedirectNums(Long redirectNums) {
    this.redirectNums = redirectNums;
  }

  public UploadDetailForGetTaskResultOutput sendCost(Long sendCost) {
    this.sendCost = sendCost;
    return this;
  }

   /**
   * Get sendCost
   * @return sendCost
  **/
  @Schema(description = "")
  public Long getSendCost() {
    return sendCost;
  }

  public void setSendCost(Long sendCost) {
    this.sendCost = sendCost;
  }

  public UploadDetailForGetTaskResultOutput sslCost(Long sslCost) {
    this.sslCost = sslCost;
    return this;
  }

   /**
   * Get sslCost
   * @return sslCost
  **/
  @Schema(description = "")
  public Long getSslCost() {
    return sslCost;
  }

  public void setSslCost(Long sslCost) {
    this.sslCost = sslCost;
  }

  public UploadDetailForGetTaskResultOutput tcPCost(Long tcPCost) {
    this.tcPCost = tcPCost;
    return this;
  }

   /**
   * Get tcPCost
   * @return tcPCost
  **/
  @Schema(description = "")
  public Long getTcPCost() {
    return tcPCost;
  }

  public void setTcPCost(Long tcPCost) {
    this.tcPCost = tcPCost;
  }

  public UploadDetailForGetTaskResultOutput totalCost(Long totalCost) {
    this.totalCost = totalCost;
    return this;
  }

   /**
   * Get totalCost
   * @return totalCost
  **/
  @Schema(description = "")
  public Long getTotalCost() {
    return totalCost;
  }

  public void setTotalCost(Long totalCost) {
    this.totalCost = totalCost;
  }

  public UploadDetailForGetTaskResultOutput ttfbCost(Long ttfbCost) {
    this.ttfbCost = ttfbCost;
    return this;
  }

   /**
   * Get ttfbCost
   * @return ttfbCost
  **/
  @Schema(description = "")
  public Long getTtfbCost() {
    return ttfbCost;
  }

  public void setTtfbCost(Long ttfbCost) {
    this.ttfbCost = ttfbCost;
  }

  public UploadDetailForGetTaskResultOutput uploadSize(Long uploadSize) {
    this.uploadSize = uploadSize;
    return this;
  }

   /**
   * Get uploadSize
   * @return uploadSize
  **/
  @Schema(description = "")
  public Long getUploadSize() {
    return uploadSize;
  }

  public void setUploadSize(Long uploadSize) {
    this.uploadSize = uploadSize;
  }

  public UploadDetailForGetTaskResultOutput uploadSpeed(Long uploadSpeed) {
    this.uploadSpeed = uploadSpeed;
    return this;
  }

   /**
   * Get uploadSpeed
   * @return uploadSpeed
  **/
  @Schema(description = "")
  public Long getUploadSpeed() {
    return uploadSpeed;
  }

  public void setUploadSpeed(Long uploadSpeed) {
    this.uploadSpeed = uploadSpeed;
  }

  public UploadDetailForGetTaskResultOutput uploadTime(Long uploadTime) {
    this.uploadTime = uploadTime;
    return this;
  }

   /**
   * Get uploadTime
   * @return uploadTime
  **/
  @Schema(description = "")
  public Long getUploadTime() {
    return uploadTime;
  }

  public void setUploadTime(Long uploadTime) {
    this.uploadTime = uploadTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UploadDetailForGetTaskResultOutput uploadDetailForGetTaskResultOutput = (UploadDetailForGetTaskResultOutput) o;
    return Objects.equals(this.dnSCost, uploadDetailForGetTaskResultOutput.dnSCost) &&
        Objects.equals(this.diagnoseDetail, uploadDetailForGetTaskResultOutput.diagnoseDetail) &&
        Objects.equals(this.downloadSize, uploadDetailForGetTaskResultOutput.downloadSize) &&
        Objects.equals(this.downloadSpeed, uploadDetailForGetTaskResultOutput.downloadSpeed) &&
        Objects.equals(this.htTPCode, uploadDetailForGetTaskResultOutput.htTPCode) &&
        Objects.equals(this.htTPRequestHeader, uploadDetailForGetTaskResultOutput.htTPRequestHeader) &&
        Objects.equals(this.htTPResponseBody, uploadDetailForGetTaskResultOutput.htTPResponseBody) &&
        Objects.equals(this.htTPResponseHeader, uploadDetailForGetTaskResultOutput.htTPResponseHeader) &&
        Objects.equals(this.locationDetail, uploadDetailForGetTaskResultOutput.locationDetail) &&
        Objects.equals(this.recvCost, uploadDetailForGetTaskResultOutput.recvCost) &&
        Objects.equals(this.redirectCost, uploadDetailForGetTaskResultOutput.redirectCost) &&
        Objects.equals(this.redirectNums, uploadDetailForGetTaskResultOutput.redirectNums) &&
        Objects.equals(this.sendCost, uploadDetailForGetTaskResultOutput.sendCost) &&
        Objects.equals(this.sslCost, uploadDetailForGetTaskResultOutput.sslCost) &&
        Objects.equals(this.tcPCost, uploadDetailForGetTaskResultOutput.tcPCost) &&
        Objects.equals(this.totalCost, uploadDetailForGetTaskResultOutput.totalCost) &&
        Objects.equals(this.ttfbCost, uploadDetailForGetTaskResultOutput.ttfbCost) &&
        Objects.equals(this.uploadSize, uploadDetailForGetTaskResultOutput.uploadSize) &&
        Objects.equals(this.uploadSpeed, uploadDetailForGetTaskResultOutput.uploadSpeed) &&
        Objects.equals(this.uploadTime, uploadDetailForGetTaskResultOutput.uploadTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dnSCost, diagnoseDetail, downloadSize, downloadSpeed, htTPCode, htTPRequestHeader, htTPResponseBody, htTPResponseHeader, locationDetail, recvCost, redirectCost, redirectNums, sendCost, sslCost, tcPCost, totalCost, ttfbCost, uploadSize, uploadSpeed, uploadTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UploadDetailForGetTaskResultOutput {\n");
    
    sb.append("    dnSCost: ").append(toIndentedString(dnSCost)).append("\n");
    sb.append("    diagnoseDetail: ").append(toIndentedString(diagnoseDetail)).append("\n");
    sb.append("    downloadSize: ").append(toIndentedString(downloadSize)).append("\n");
    sb.append("    downloadSpeed: ").append(toIndentedString(downloadSpeed)).append("\n");
    sb.append("    htTPCode: ").append(toIndentedString(htTPCode)).append("\n");
    sb.append("    htTPRequestHeader: ").append(toIndentedString(htTPRequestHeader)).append("\n");
    sb.append("    htTPResponseBody: ").append(toIndentedString(htTPResponseBody)).append("\n");
    sb.append("    htTPResponseHeader: ").append(toIndentedString(htTPResponseHeader)).append("\n");
    sb.append("    locationDetail: ").append(toIndentedString(locationDetail)).append("\n");
    sb.append("    recvCost: ").append(toIndentedString(recvCost)).append("\n");
    sb.append("    redirectCost: ").append(toIndentedString(redirectCost)).append("\n");
    sb.append("    redirectNums: ").append(toIndentedString(redirectNums)).append("\n");
    sb.append("    sendCost: ").append(toIndentedString(sendCost)).append("\n");
    sb.append("    sslCost: ").append(toIndentedString(sslCost)).append("\n");
    sb.append("    tcPCost: ").append(toIndentedString(tcPCost)).append("\n");
    sb.append("    totalCost: ").append(toIndentedString(totalCost)).append("\n");
    sb.append("    ttfbCost: ").append(toIndentedString(ttfbCost)).append("\n");
    sb.append("    uploadSize: ").append(toIndentedString(uploadSize)).append("\n");
    sb.append("    uploadSpeed: ").append(toIndentedString(uploadSpeed)).append("\n");
    sb.append("    uploadTime: ").append(toIndentedString(uploadTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
