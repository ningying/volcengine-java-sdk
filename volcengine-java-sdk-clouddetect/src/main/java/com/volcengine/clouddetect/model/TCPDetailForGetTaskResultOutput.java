/*
 * cloud_detect
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.clouddetect.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.clouddetect.model.DiagnoseDetailForGetTaskResultOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * TCPDetailForGetTaskResultOutput
 */



public class TCPDetailForGetTaskResultOutput {
  @SerializedName("DiagnoseDetail")
  private DiagnoseDetailForGetTaskResultOutput diagnoseDetail = null;

  @SerializedName("TCPResponse")
  private String tcPResponse = null;

  @SerializedName("TCPTimeConnect")
  private Long tcPTimeConnect = null;

  @SerializedName("TCPTimeDNS")
  private Long tcPTimeDNS = null;

  @SerializedName("TCPTimeReceive")
  private Long tcPTimeReceive = null;

  @SerializedName("TCPTimeResponse")
  private Long tcPTimeResponse = null;

  @SerializedName("TCPTimeTotal")
  private Long tcPTimeTotal = null;

  public TCPDetailForGetTaskResultOutput diagnoseDetail(DiagnoseDetailForGetTaskResultOutput diagnoseDetail) {
    this.diagnoseDetail = diagnoseDetail;
    return this;
  }

   /**
   * Get diagnoseDetail
   * @return diagnoseDetail
  **/
  @Valid
  @Schema(description = "")
  public DiagnoseDetailForGetTaskResultOutput getDiagnoseDetail() {
    return diagnoseDetail;
  }

  public void setDiagnoseDetail(DiagnoseDetailForGetTaskResultOutput diagnoseDetail) {
    this.diagnoseDetail = diagnoseDetail;
  }

  public TCPDetailForGetTaskResultOutput tcPResponse(String tcPResponse) {
    this.tcPResponse = tcPResponse;
    return this;
  }

   /**
   * Get tcPResponse
   * @return tcPResponse
  **/
  @Schema(description = "")
  public String getTcPResponse() {
    return tcPResponse;
  }

  public void setTcPResponse(String tcPResponse) {
    this.tcPResponse = tcPResponse;
  }

  public TCPDetailForGetTaskResultOutput tcPTimeConnect(Long tcPTimeConnect) {
    this.tcPTimeConnect = tcPTimeConnect;
    return this;
  }

   /**
   * Get tcPTimeConnect
   * @return tcPTimeConnect
  **/
  @Schema(description = "")
  public Long getTcPTimeConnect() {
    return tcPTimeConnect;
  }

  public void setTcPTimeConnect(Long tcPTimeConnect) {
    this.tcPTimeConnect = tcPTimeConnect;
  }

  public TCPDetailForGetTaskResultOutput tcPTimeDNS(Long tcPTimeDNS) {
    this.tcPTimeDNS = tcPTimeDNS;
    return this;
  }

   /**
   * Get tcPTimeDNS
   * @return tcPTimeDNS
  **/
  @Schema(description = "")
  public Long getTcPTimeDNS() {
    return tcPTimeDNS;
  }

  public void setTcPTimeDNS(Long tcPTimeDNS) {
    this.tcPTimeDNS = tcPTimeDNS;
  }

  public TCPDetailForGetTaskResultOutput tcPTimeReceive(Long tcPTimeReceive) {
    this.tcPTimeReceive = tcPTimeReceive;
    return this;
  }

   /**
   * Get tcPTimeReceive
   * @return tcPTimeReceive
  **/
  @Schema(description = "")
  public Long getTcPTimeReceive() {
    return tcPTimeReceive;
  }

  public void setTcPTimeReceive(Long tcPTimeReceive) {
    this.tcPTimeReceive = tcPTimeReceive;
  }

  public TCPDetailForGetTaskResultOutput tcPTimeResponse(Long tcPTimeResponse) {
    this.tcPTimeResponse = tcPTimeResponse;
    return this;
  }

   /**
   * Get tcPTimeResponse
   * @return tcPTimeResponse
  **/
  @Schema(description = "")
  public Long getTcPTimeResponse() {
    return tcPTimeResponse;
  }

  public void setTcPTimeResponse(Long tcPTimeResponse) {
    this.tcPTimeResponse = tcPTimeResponse;
  }

  public TCPDetailForGetTaskResultOutput tcPTimeTotal(Long tcPTimeTotal) {
    this.tcPTimeTotal = tcPTimeTotal;
    return this;
  }

   /**
   * Get tcPTimeTotal
   * @return tcPTimeTotal
  **/
  @Schema(description = "")
  public Long getTcPTimeTotal() {
    return tcPTimeTotal;
  }

  public void setTcPTimeTotal(Long tcPTimeTotal) {
    this.tcPTimeTotal = tcPTimeTotal;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TCPDetailForGetTaskResultOutput tcPDetailForGetTaskResultOutput = (TCPDetailForGetTaskResultOutput) o;
    return Objects.equals(this.diagnoseDetail, tcPDetailForGetTaskResultOutput.diagnoseDetail) &&
        Objects.equals(this.tcPResponse, tcPDetailForGetTaskResultOutput.tcPResponse) &&
        Objects.equals(this.tcPTimeConnect, tcPDetailForGetTaskResultOutput.tcPTimeConnect) &&
        Objects.equals(this.tcPTimeDNS, tcPDetailForGetTaskResultOutput.tcPTimeDNS) &&
        Objects.equals(this.tcPTimeReceive, tcPDetailForGetTaskResultOutput.tcPTimeReceive) &&
        Objects.equals(this.tcPTimeResponse, tcPDetailForGetTaskResultOutput.tcPTimeResponse) &&
        Objects.equals(this.tcPTimeTotal, tcPDetailForGetTaskResultOutput.tcPTimeTotal);
  }

  @Override
  public int hashCode() {
    return Objects.hash(diagnoseDetail, tcPResponse, tcPTimeConnect, tcPTimeDNS, tcPTimeReceive, tcPTimeResponse, tcPTimeTotal);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TCPDetailForGetTaskResultOutput {\n");
    
    sb.append("    diagnoseDetail: ").append(toIndentedString(diagnoseDetail)).append("\n");
    sb.append("    tcPResponse: ").append(toIndentedString(tcPResponse)).append("\n");
    sb.append("    tcPTimeConnect: ").append(toIndentedString(tcPTimeConnect)).append("\n");
    sb.append("    tcPTimeDNS: ").append(toIndentedString(tcPTimeDNS)).append("\n");
    sb.append("    tcPTimeReceive: ").append(toIndentedString(tcPTimeReceive)).append("\n");
    sb.append("    tcPTimeResponse: ").append(toIndentedString(tcPTimeResponse)).append("\n");
    sb.append("    tcPTimeTotal: ").append(toIndentedString(tcPTimeTotal)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
