/*
 * emr
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.emr.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.emr.model.CommandParamForRunApplicationActionInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * RunApplicationActionRequest
 */



public class RunApplicationActionRequest {
  @SerializedName("ActionName")
  private String actionName = null;

  @SerializedName("ApplicationName")
  private String applicationName = null;

  @SerializedName("ClientToken")
  private String clientToken = null;

  @SerializedName("ClusterId")
  private String clusterId = null;

  @SerializedName("CommandParams")
  private List<CommandParamForRunApplicationActionInput> commandParams = null;

  @SerializedName("Remark")
  private String remark = null;

  @SerializedName("componentName")
  private String componentName = null;

  public RunApplicationActionRequest actionName(String actionName) {
    this.actionName = actionName;
    return this;
  }

   /**
   * Get actionName
   * @return actionName
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getActionName() {
    return actionName;
  }

  public void setActionName(String actionName) {
    this.actionName = actionName;
  }

  public RunApplicationActionRequest applicationName(String applicationName) {
    this.applicationName = applicationName;
    return this;
  }

   /**
   * Get applicationName
   * @return applicationName
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getApplicationName() {
    return applicationName;
  }

  public void setApplicationName(String applicationName) {
    this.applicationName = applicationName;
  }

  public RunApplicationActionRequest clientToken(String clientToken) {
    this.clientToken = clientToken;
    return this;
  }

   /**
   * Get clientToken
   * @return clientToken
  **/
  @Schema(description = "")
  public String getClientToken() {
    return clientToken;
  }

  public void setClientToken(String clientToken) {
    this.clientToken = clientToken;
  }

  public RunApplicationActionRequest clusterId(String clusterId) {
    this.clusterId = clusterId;
    return this;
  }

   /**
   * Get clusterId
   * @return clusterId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getClusterId() {
    return clusterId;
  }

  public void setClusterId(String clusterId) {
    this.clusterId = clusterId;
  }

  public RunApplicationActionRequest commandParams(List<CommandParamForRunApplicationActionInput> commandParams) {
    this.commandParams = commandParams;
    return this;
  }

  public RunApplicationActionRequest addCommandParamsItem(CommandParamForRunApplicationActionInput commandParamsItem) {
    if (this.commandParams == null) {
      this.commandParams = new ArrayList<CommandParamForRunApplicationActionInput>();
    }
    this.commandParams.add(commandParamsItem);
    return this;
  }

   /**
   * Get commandParams
   * @return commandParams
  **/
  @Valid
  @Schema(description = "")
  public List<CommandParamForRunApplicationActionInput> getCommandParams() {
    return commandParams;
  }

  public void setCommandParams(List<CommandParamForRunApplicationActionInput> commandParams) {
    this.commandParams = commandParams;
  }

  public RunApplicationActionRequest remark(String remark) {
    this.remark = remark;
    return this;
  }

   /**
   * Get remark
   * @return remark
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getRemark() {
    return remark;
  }

  public void setRemark(String remark) {
    this.remark = remark;
  }

  public RunApplicationActionRequest componentName(String componentName) {
    this.componentName = componentName;
    return this;
  }

   /**
   * Get componentName
   * @return componentName
  **/
  @Schema(description = "")
  public String getComponentName() {
    return componentName;
  }

  public void setComponentName(String componentName) {
    this.componentName = componentName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RunApplicationActionRequest runApplicationActionRequest = (RunApplicationActionRequest) o;
    return Objects.equals(this.actionName, runApplicationActionRequest.actionName) &&
        Objects.equals(this.applicationName, runApplicationActionRequest.applicationName) &&
        Objects.equals(this.clientToken, runApplicationActionRequest.clientToken) &&
        Objects.equals(this.clusterId, runApplicationActionRequest.clusterId) &&
        Objects.equals(this.commandParams, runApplicationActionRequest.commandParams) &&
        Objects.equals(this.remark, runApplicationActionRequest.remark) &&
        Objects.equals(this.componentName, runApplicationActionRequest.componentName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actionName, applicationName, clientToken, clusterId, commandParams, remark, componentName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RunApplicationActionRequest {\n");
    
    sb.append("    actionName: ").append(toIndentedString(actionName)).append("\n");
    sb.append("    applicationName: ").append(toIndentedString(applicationName)).append("\n");
    sb.append("    clientToken: ").append(toIndentedString(clientToken)).append("\n");
    sb.append("    clusterId: ").append(toIndentedString(clusterId)).append("\n");
    sb.append("    commandParams: ").append(toIndentedString(commandParams)).append("\n");
    sb.append("    remark: ").append(toIndentedString(remark)).append("\n");
    sb.append("    componentName: ").append(toIndentedString(componentName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
