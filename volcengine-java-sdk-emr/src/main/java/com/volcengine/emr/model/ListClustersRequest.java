/*
 * emr
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.emr.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.emr.model.TagForListClustersInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ListClustersRequest
 */



public class ListClustersRequest {
  /**
   * Gets or Sets chargeTypes
   */
  @JsonAdapter(ChargeTypesEnum.Adapter.class)
  public enum ChargeTypesEnum {
    @SerializedName("PRE")
    PRE("PRE"),
    @SerializedName("POST")
    POST("POST");

    private String value;

    ChargeTypesEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ChargeTypesEnum fromValue(String input) {
      for (ChargeTypesEnum b : ChargeTypesEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ChargeTypesEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ChargeTypesEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public ChargeTypesEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return ChargeTypesEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("ChargeTypes")
  private List<ChargeTypesEnum> chargeTypes = null;

  @SerializedName("ClusterId")
  private String clusterId = null;

  @SerializedName("ClusterIds")
  private List<String> clusterIds = null;

  @SerializedName("ClusterName")
  private String clusterName = null;

  /**
   * Gets or Sets clusterStates
   */
  @JsonAdapter(ClusterStatesEnum.Adapter.class)
  public enum ClusterStatesEnum {
    @SerializedName("PENDING_FOR_PAYMENT")
    PENDING_FOR_PAYMENT("PENDING_FOR_PAYMENT"),
    @SerializedName("CREATING")
    CREATING("CREATING"),
    @SerializedName("RUNNING")
    RUNNING("RUNNING"),
    @SerializedName("TERMINATING")
    TERMINATING("TERMINATING"),
    @SerializedName("TERMINATED")
    TERMINATED("TERMINATED"),
    @SerializedName("TERMINATED_WITH_ERROR")
    TERMINATED_WITH_ERROR("TERMINATED_WITH_ERROR"),
    @SerializedName("FAILED")
    FAILED("FAILED"),
    @SerializedName("SHUTDOWN")
    SHUTDOWN("SHUTDOWN");

    private String value;

    ClusterStatesEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ClusterStatesEnum fromValue(String input) {
      for (ClusterStatesEnum b : ClusterStatesEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ClusterStatesEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ClusterStatesEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public ClusterStatesEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return ClusterStatesEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("ClusterStates")
  private List<ClusterStatesEnum> clusterStates = null;

  @SerializedName("ClusterTypes")
  private List<String> clusterTypes = null;

  @SerializedName("CreateTimeAfter")
  private String createTimeAfter = null;

  @SerializedName("CreateTimeBefore")
  private String createTimeBefore = null;

  @SerializedName("MaxResults")
  private Integer maxResults = null;

  @SerializedName("NextToken")
  private String nextToken = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("ReleaseVersion")
  private String releaseVersion = null;

  @SerializedName("Tags")
  private List<TagForListClustersInput> tags = null;

  public ListClustersRequest chargeTypes(List<ChargeTypesEnum> chargeTypes) {
    this.chargeTypes = chargeTypes;
    return this;
  }

  public ListClustersRequest addChargeTypesItem(ChargeTypesEnum chargeTypesItem) {
    if (this.chargeTypes == null) {
      this.chargeTypes = new ArrayList<ChargeTypesEnum>();
    }
    this.chargeTypes.add(chargeTypesItem);
    return this;
  }

   /**
   * Get chargeTypes
   * @return chargeTypes
  **/
  @Schema(description = "")
  public List<ChargeTypesEnum> getChargeTypes() {
    return chargeTypes;
  }

  public void setChargeTypes(List<ChargeTypesEnum> chargeTypes) {
    this.chargeTypes = chargeTypes;
  }

  public ListClustersRequest clusterId(String clusterId) {
    this.clusterId = clusterId;
    return this;
  }

   /**
   * Get clusterId
   * @return clusterId
  **/
  @Schema(description = "")
  public String getClusterId() {
    return clusterId;
  }

  public void setClusterId(String clusterId) {
    this.clusterId = clusterId;
  }

  public ListClustersRequest clusterIds(List<String> clusterIds) {
    this.clusterIds = clusterIds;
    return this;
  }

  public ListClustersRequest addClusterIdsItem(String clusterIdsItem) {
    if (this.clusterIds == null) {
      this.clusterIds = new ArrayList<String>();
    }
    this.clusterIds.add(clusterIdsItem);
    return this;
  }

   /**
   * Get clusterIds
   * @return clusterIds
  **/
  @Schema(description = "")
  public List<String> getClusterIds() {
    return clusterIds;
  }

  public void setClusterIds(List<String> clusterIds) {
    this.clusterIds = clusterIds;
  }

  public ListClustersRequest clusterName(String clusterName) {
    this.clusterName = clusterName;
    return this;
  }

   /**
   * Get clusterName
   * @return clusterName
  **/
  @Schema(description = "")
  public String getClusterName() {
    return clusterName;
  }

  public void setClusterName(String clusterName) {
    this.clusterName = clusterName;
  }

  public ListClustersRequest clusterStates(List<ClusterStatesEnum> clusterStates) {
    this.clusterStates = clusterStates;
    return this;
  }

  public ListClustersRequest addClusterStatesItem(ClusterStatesEnum clusterStatesItem) {
    if (this.clusterStates == null) {
      this.clusterStates = new ArrayList<ClusterStatesEnum>();
    }
    this.clusterStates.add(clusterStatesItem);
    return this;
  }

   /**
   * Get clusterStates
   * @return clusterStates
  **/
  @Schema(description = "")
  public List<ClusterStatesEnum> getClusterStates() {
    return clusterStates;
  }

  public void setClusterStates(List<ClusterStatesEnum> clusterStates) {
    this.clusterStates = clusterStates;
  }

  public ListClustersRequest clusterTypes(List<String> clusterTypes) {
    this.clusterTypes = clusterTypes;
    return this;
  }

  public ListClustersRequest addClusterTypesItem(String clusterTypesItem) {
    if (this.clusterTypes == null) {
      this.clusterTypes = new ArrayList<String>();
    }
    this.clusterTypes.add(clusterTypesItem);
    return this;
  }

   /**
   * Get clusterTypes
   * @return clusterTypes
  **/
  @Schema(description = "")
  public List<String> getClusterTypes() {
    return clusterTypes;
  }

  public void setClusterTypes(List<String> clusterTypes) {
    this.clusterTypes = clusterTypes;
  }

  public ListClustersRequest createTimeAfter(String createTimeAfter) {
    this.createTimeAfter = createTimeAfter;
    return this;
  }

   /**
   * Get createTimeAfter
   * @return createTimeAfter
  **/
  @Schema(description = "")
  public String getCreateTimeAfter() {
    return createTimeAfter;
  }

  public void setCreateTimeAfter(String createTimeAfter) {
    this.createTimeAfter = createTimeAfter;
  }

  public ListClustersRequest createTimeBefore(String createTimeBefore) {
    this.createTimeBefore = createTimeBefore;
    return this;
  }

   /**
   * Get createTimeBefore
   * @return createTimeBefore
  **/
  @Schema(description = "")
  public String getCreateTimeBefore() {
    return createTimeBefore;
  }

  public void setCreateTimeBefore(String createTimeBefore) {
    this.createTimeBefore = createTimeBefore;
  }

  public ListClustersRequest maxResults(Integer maxResults) {
    this.maxResults = maxResults;
    return this;
  }

   /**
   * Get maxResults
   * @return maxResults
  **/
  @Schema(description = "")
  public Integer getMaxResults() {
    return maxResults;
  }

  public void setMaxResults(Integer maxResults) {
    this.maxResults = maxResults;
  }

  public ListClustersRequest nextToken(String nextToken) {
    this.nextToken = nextToken;
    return this;
  }

   /**
   * Get nextToken
   * @return nextToken
  **/
  @Schema(description = "")
  public String getNextToken() {
    return nextToken;
  }

  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }

  public ListClustersRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public ListClustersRequest releaseVersion(String releaseVersion) {
    this.releaseVersion = releaseVersion;
    return this;
  }

   /**
   * Get releaseVersion
   * @return releaseVersion
  **/
  @Schema(description = "")
  public String getReleaseVersion() {
    return releaseVersion;
  }

  public void setReleaseVersion(String releaseVersion) {
    this.releaseVersion = releaseVersion;
  }

  public ListClustersRequest tags(List<TagForListClustersInput> tags) {
    this.tags = tags;
    return this;
  }

  public ListClustersRequest addTagsItem(TagForListClustersInput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForListClustersInput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForListClustersInput> getTags() {
    return tags;
  }

  public void setTags(List<TagForListClustersInput> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListClustersRequest listClustersRequest = (ListClustersRequest) o;
    return Objects.equals(this.chargeTypes, listClustersRequest.chargeTypes) &&
        Objects.equals(this.clusterId, listClustersRequest.clusterId) &&
        Objects.equals(this.clusterIds, listClustersRequest.clusterIds) &&
        Objects.equals(this.clusterName, listClustersRequest.clusterName) &&
        Objects.equals(this.clusterStates, listClustersRequest.clusterStates) &&
        Objects.equals(this.clusterTypes, listClustersRequest.clusterTypes) &&
        Objects.equals(this.createTimeAfter, listClustersRequest.createTimeAfter) &&
        Objects.equals(this.createTimeBefore, listClustersRequest.createTimeBefore) &&
        Objects.equals(this.maxResults, listClustersRequest.maxResults) &&
        Objects.equals(this.nextToken, listClustersRequest.nextToken) &&
        Objects.equals(this.projectName, listClustersRequest.projectName) &&
        Objects.equals(this.releaseVersion, listClustersRequest.releaseVersion) &&
        Objects.equals(this.tags, listClustersRequest.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(chargeTypes, clusterId, clusterIds, clusterName, clusterStates, clusterTypes, createTimeAfter, createTimeBefore, maxResults, nextToken, projectName, releaseVersion, tags);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListClustersRequest {\n");
    
    sb.append("    chargeTypes: ").append(toIndentedString(chargeTypes)).append("\n");
    sb.append("    clusterId: ").append(toIndentedString(clusterId)).append("\n");
    sb.append("    clusterIds: ").append(toIndentedString(clusterIds)).append("\n");
    sb.append("    clusterName: ").append(toIndentedString(clusterName)).append("\n");
    sb.append("    clusterStates: ").append(toIndentedString(clusterStates)).append("\n");
    sb.append("    clusterTypes: ").append(toIndentedString(clusterTypes)).append("\n");
    sb.append("    createTimeAfter: ").append(toIndentedString(createTimeAfter)).append("\n");
    sb.append("    createTimeBefore: ").append(toIndentedString(createTimeBefore)).append("\n");
    sb.append("    maxResults: ").append(toIndentedString(maxResults)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    releaseVersion: ").append(toIndentedString(releaseVersion)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
