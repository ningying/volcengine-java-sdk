/*
 * emr
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.emr.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.emr.model.ApplicationComponentLayoutForCreateClusterInput;
import com.volcengine.emr.model.ApplicationConfigForCreateClusterInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ApplicationExtraForCreateClusterInput
 */



public class ApplicationExtraForCreateClusterInput {
  @SerializedName("ApplicationComponentLayouts")
  private List<ApplicationComponentLayoutForCreateClusterInput> applicationComponentLayouts = null;

  @SerializedName("ApplicationConfigs")
  private List<ApplicationConfigForCreateClusterInput> applicationConfigs = null;

  @SerializedName("ApplicationName")
  private String applicationName = null;

  @SerializedName("ConnectionId")
  private String connectionId = null;

  @SerializedName("ConnectionType")
  private String connectionType = null;

  public ApplicationExtraForCreateClusterInput applicationComponentLayouts(List<ApplicationComponentLayoutForCreateClusterInput> applicationComponentLayouts) {
    this.applicationComponentLayouts = applicationComponentLayouts;
    return this;
  }

  public ApplicationExtraForCreateClusterInput addApplicationComponentLayoutsItem(ApplicationComponentLayoutForCreateClusterInput applicationComponentLayoutsItem) {
    if (this.applicationComponentLayouts == null) {
      this.applicationComponentLayouts = new ArrayList<ApplicationComponentLayoutForCreateClusterInput>();
    }
    this.applicationComponentLayouts.add(applicationComponentLayoutsItem);
    return this;
  }

   /**
   * Get applicationComponentLayouts
   * @return applicationComponentLayouts
  **/
  @Valid
  @Schema(description = "")
  public List<ApplicationComponentLayoutForCreateClusterInput> getApplicationComponentLayouts() {
    return applicationComponentLayouts;
  }

  public void setApplicationComponentLayouts(List<ApplicationComponentLayoutForCreateClusterInput> applicationComponentLayouts) {
    this.applicationComponentLayouts = applicationComponentLayouts;
  }

  public ApplicationExtraForCreateClusterInput applicationConfigs(List<ApplicationConfigForCreateClusterInput> applicationConfigs) {
    this.applicationConfigs = applicationConfigs;
    return this;
  }

  public ApplicationExtraForCreateClusterInput addApplicationConfigsItem(ApplicationConfigForCreateClusterInput applicationConfigsItem) {
    if (this.applicationConfigs == null) {
      this.applicationConfigs = new ArrayList<ApplicationConfigForCreateClusterInput>();
    }
    this.applicationConfigs.add(applicationConfigsItem);
    return this;
  }

   /**
   * Get applicationConfigs
   * @return applicationConfigs
  **/
  @Valid
  @Schema(description = "")
  public List<ApplicationConfigForCreateClusterInput> getApplicationConfigs() {
    return applicationConfigs;
  }

  public void setApplicationConfigs(List<ApplicationConfigForCreateClusterInput> applicationConfigs) {
    this.applicationConfigs = applicationConfigs;
  }

  public ApplicationExtraForCreateClusterInput applicationName(String applicationName) {
    this.applicationName = applicationName;
    return this;
  }

   /**
   * Get applicationName
   * @return applicationName
  **/
  @Schema(description = "")
  public String getApplicationName() {
    return applicationName;
  }

  public void setApplicationName(String applicationName) {
    this.applicationName = applicationName;
  }

  public ApplicationExtraForCreateClusterInput connectionId(String connectionId) {
    this.connectionId = connectionId;
    return this;
  }

   /**
   * Get connectionId
   * @return connectionId
  **/
  @Schema(description = "")
  public String getConnectionId() {
    return connectionId;
  }

  public void setConnectionId(String connectionId) {
    this.connectionId = connectionId;
  }

  public ApplicationExtraForCreateClusterInput connectionType(String connectionType) {
    this.connectionType = connectionType;
    return this;
  }

   /**
   * Get connectionType
   * @return connectionType
  **/
  @Schema(description = "")
  public String getConnectionType() {
    return connectionType;
  }

  public void setConnectionType(String connectionType) {
    this.connectionType = connectionType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicationExtraForCreateClusterInput applicationExtraForCreateClusterInput = (ApplicationExtraForCreateClusterInput) o;
    return Objects.equals(this.applicationComponentLayouts, applicationExtraForCreateClusterInput.applicationComponentLayouts) &&
        Objects.equals(this.applicationConfigs, applicationExtraForCreateClusterInput.applicationConfigs) &&
        Objects.equals(this.applicationName, applicationExtraForCreateClusterInput.applicationName) &&
        Objects.equals(this.connectionId, applicationExtraForCreateClusterInput.connectionId) &&
        Objects.equals(this.connectionType, applicationExtraForCreateClusterInput.connectionType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applicationComponentLayouts, applicationConfigs, applicationName, connectionId, connectionType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicationExtraForCreateClusterInput {\n");
    
    sb.append("    applicationComponentLayouts: ").append(toIndentedString(applicationComponentLayouts)).append("\n");
    sb.append("    applicationConfigs: ").append(toIndentedString(applicationConfigs)).append("\n");
    sb.append("    applicationName: ").append(toIndentedString(applicationName)).append("\n");
    sb.append("    connectionId: ").append(toIndentedString(connectionId)).append("\n");
    sb.append("    connectionType: ").append(toIndentedString(connectionType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
