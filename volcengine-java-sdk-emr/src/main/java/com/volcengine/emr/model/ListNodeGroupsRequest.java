/*
 * emr
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.emr.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ListNodeGroupsRequest
 */



public class ListNodeGroupsRequest {
  @SerializedName("ClusterId")
  private String clusterId = null;

  @SerializedName("MaxResults")
  private Integer maxResults = null;

  @SerializedName("NextToken")
  private String nextToken = null;

  @SerializedName("NodeGroupIds")
  private List<String> nodeGroupIds = null;

  @SerializedName("NodeGroupNames")
  private List<String> nodeGroupNames = null;

  /**
   * Gets or Sets nodeGroupTypes
   */
  @JsonAdapter(NodeGroupTypesEnum.Adapter.class)
  public enum NodeGroupTypesEnum {
    @SerializedName("MASTER")
    MASTER("MASTER"),
    @SerializedName("CORE")
    CORE("CORE"),
    @SerializedName("TASK")
    TASK("TASK");

    private String value;

    NodeGroupTypesEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static NodeGroupTypesEnum fromValue(String input) {
      for (NodeGroupTypesEnum b : NodeGroupTypesEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<NodeGroupTypesEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final NodeGroupTypesEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public NodeGroupTypesEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return NodeGroupTypesEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("NodeGroupTypes")
  private List<NodeGroupTypesEnum> nodeGroupTypes = null;

  public ListNodeGroupsRequest clusterId(String clusterId) {
    this.clusterId = clusterId;
    return this;
  }

   /**
   * Get clusterId
   * @return clusterId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getClusterId() {
    return clusterId;
  }

  public void setClusterId(String clusterId) {
    this.clusterId = clusterId;
  }

  public ListNodeGroupsRequest maxResults(Integer maxResults) {
    this.maxResults = maxResults;
    return this;
  }

   /**
   * Get maxResults
   * minimum: 1
   * maximum: 100
   * @return maxResults
  **/
 @Min(1) @Max(100)  @Schema(description = "")
  public Integer getMaxResults() {
    return maxResults;
  }

  public void setMaxResults(Integer maxResults) {
    this.maxResults = maxResults;
  }

  public ListNodeGroupsRequest nextToken(String nextToken) {
    this.nextToken = nextToken;
    return this;
  }

   /**
   * Get nextToken
   * @return nextToken
  **/
  @Schema(description = "")
  public String getNextToken() {
    return nextToken;
  }

  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }

  public ListNodeGroupsRequest nodeGroupIds(List<String> nodeGroupIds) {
    this.nodeGroupIds = nodeGroupIds;
    return this;
  }

  public ListNodeGroupsRequest addNodeGroupIdsItem(String nodeGroupIdsItem) {
    if (this.nodeGroupIds == null) {
      this.nodeGroupIds = new ArrayList<String>();
    }
    this.nodeGroupIds.add(nodeGroupIdsItem);
    return this;
  }

   /**
   * Get nodeGroupIds
   * @return nodeGroupIds
  **/
  @Schema(description = "")
  public List<String> getNodeGroupIds() {
    return nodeGroupIds;
  }

  public void setNodeGroupIds(List<String> nodeGroupIds) {
    this.nodeGroupIds = nodeGroupIds;
  }

  public ListNodeGroupsRequest nodeGroupNames(List<String> nodeGroupNames) {
    this.nodeGroupNames = nodeGroupNames;
    return this;
  }

  public ListNodeGroupsRequest addNodeGroupNamesItem(String nodeGroupNamesItem) {
    if (this.nodeGroupNames == null) {
      this.nodeGroupNames = new ArrayList<String>();
    }
    this.nodeGroupNames.add(nodeGroupNamesItem);
    return this;
  }

   /**
   * Get nodeGroupNames
   * @return nodeGroupNames
  **/
  @Schema(description = "")
  public List<String> getNodeGroupNames() {
    return nodeGroupNames;
  }

  public void setNodeGroupNames(List<String> nodeGroupNames) {
    this.nodeGroupNames = nodeGroupNames;
  }

  public ListNodeGroupsRequest nodeGroupTypes(List<NodeGroupTypesEnum> nodeGroupTypes) {
    this.nodeGroupTypes = nodeGroupTypes;
    return this;
  }

  public ListNodeGroupsRequest addNodeGroupTypesItem(NodeGroupTypesEnum nodeGroupTypesItem) {
    if (this.nodeGroupTypes == null) {
      this.nodeGroupTypes = new ArrayList<NodeGroupTypesEnum>();
    }
    this.nodeGroupTypes.add(nodeGroupTypesItem);
    return this;
  }

   /**
   * Get nodeGroupTypes
   * @return nodeGroupTypes
  **/
  @Schema(description = "")
  public List<NodeGroupTypesEnum> getNodeGroupTypes() {
    return nodeGroupTypes;
  }

  public void setNodeGroupTypes(List<NodeGroupTypesEnum> nodeGroupTypes) {
    this.nodeGroupTypes = nodeGroupTypes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListNodeGroupsRequest listNodeGroupsRequest = (ListNodeGroupsRequest) o;
    return Objects.equals(this.clusterId, listNodeGroupsRequest.clusterId) &&
        Objects.equals(this.maxResults, listNodeGroupsRequest.maxResults) &&
        Objects.equals(this.nextToken, listNodeGroupsRequest.nextToken) &&
        Objects.equals(this.nodeGroupIds, listNodeGroupsRequest.nodeGroupIds) &&
        Objects.equals(this.nodeGroupNames, listNodeGroupsRequest.nodeGroupNames) &&
        Objects.equals(this.nodeGroupTypes, listNodeGroupsRequest.nodeGroupTypes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clusterId, maxResults, nextToken, nodeGroupIds, nodeGroupNames, nodeGroupTypes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListNodeGroupsRequest {\n");
    
    sb.append("    clusterId: ").append(toIndentedString(clusterId)).append("\n");
    sb.append("    maxResults: ").append(toIndentedString(maxResults)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("    nodeGroupIds: ").append(toIndentedString(nodeGroupIds)).append("\n");
    sb.append("    nodeGroupNames: ").append(toIndentedString(nodeGroupNames)).append("\n");
    sb.append("    nodeGroupTypes: ").append(toIndentedString(nodeGroupTypes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
