/*
 * ark
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.ark.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * GetEndpointCertificateResponse
 */



public class GetEndpointCertificateResponse extends com.volcengine.model.AbstractResponse {
  @SerializedName("NotAfter")
  private Long notAfter = null;

  @SerializedName("NotBefore")
  private Long notBefore = null;

  @SerializedName("PCAHost")
  private String pcAHost = null;

  @SerializedName("PCAInstanceCertificate")
  private String pcAInstanceCertificate = null;

  @SerializedName("PCAName")
  private String pcAName = null;

  @SerializedName("PCARootCACertificate")
  private String pcARootCACertificate = null;

  @SerializedName("PCASubCACertificate")
  private String pcASubCACertificate = null;

  public GetEndpointCertificateResponse notAfter(Long notAfter) {
    this.notAfter = notAfter;
    return this;
  }

   /**
   * Get notAfter
   * @return notAfter
  **/
  @Schema(description = "")
  public Long getNotAfter() {
    return notAfter;
  }

  public void setNotAfter(Long notAfter) {
    this.notAfter = notAfter;
  }

  public GetEndpointCertificateResponse notBefore(Long notBefore) {
    this.notBefore = notBefore;
    return this;
  }

   /**
   * Get notBefore
   * @return notBefore
  **/
  @Schema(description = "")
  public Long getNotBefore() {
    return notBefore;
  }

  public void setNotBefore(Long notBefore) {
    this.notBefore = notBefore;
  }

  public GetEndpointCertificateResponse pcAHost(String pcAHost) {
    this.pcAHost = pcAHost;
    return this;
  }

   /**
   * Get pcAHost
   * @return pcAHost
  **/
  @Schema(description = "")
  public String getPcAHost() {
    return pcAHost;
  }

  public void setPcAHost(String pcAHost) {
    this.pcAHost = pcAHost;
  }

  public GetEndpointCertificateResponse pcAInstanceCertificate(String pcAInstanceCertificate) {
    this.pcAInstanceCertificate = pcAInstanceCertificate;
    return this;
  }

   /**
   * Get pcAInstanceCertificate
   * @return pcAInstanceCertificate
  **/
  @Schema(description = "")
  public String getPcAInstanceCertificate() {
    return pcAInstanceCertificate;
  }

  public void setPcAInstanceCertificate(String pcAInstanceCertificate) {
    this.pcAInstanceCertificate = pcAInstanceCertificate;
  }

  public GetEndpointCertificateResponse pcAName(String pcAName) {
    this.pcAName = pcAName;
    return this;
  }

   /**
   * Get pcAName
   * @return pcAName
  **/
  @Schema(description = "")
  public String getPcAName() {
    return pcAName;
  }

  public void setPcAName(String pcAName) {
    this.pcAName = pcAName;
  }

  public GetEndpointCertificateResponse pcARootCACertificate(String pcARootCACertificate) {
    this.pcARootCACertificate = pcARootCACertificate;
    return this;
  }

   /**
   * Get pcARootCACertificate
   * @return pcARootCACertificate
  **/
  @Schema(description = "")
  public String getPcARootCACertificate() {
    return pcARootCACertificate;
  }

  public void setPcARootCACertificate(String pcARootCACertificate) {
    this.pcARootCACertificate = pcARootCACertificate;
  }

  public GetEndpointCertificateResponse pcASubCACertificate(String pcASubCACertificate) {
    this.pcASubCACertificate = pcASubCACertificate;
    return this;
  }

   /**
   * Get pcASubCACertificate
   * @return pcASubCACertificate
  **/
  @Schema(description = "")
  public String getPcASubCACertificate() {
    return pcASubCACertificate;
  }

  public void setPcASubCACertificate(String pcASubCACertificate) {
    this.pcASubCACertificate = pcASubCACertificate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetEndpointCertificateResponse getEndpointCertificateResponse = (GetEndpointCertificateResponse) o;
    return Objects.equals(this.notAfter, getEndpointCertificateResponse.notAfter) &&
        Objects.equals(this.notBefore, getEndpointCertificateResponse.notBefore) &&
        Objects.equals(this.pcAHost, getEndpointCertificateResponse.pcAHost) &&
        Objects.equals(this.pcAInstanceCertificate, getEndpointCertificateResponse.pcAInstanceCertificate) &&
        Objects.equals(this.pcAName, getEndpointCertificateResponse.pcAName) &&
        Objects.equals(this.pcARootCACertificate, getEndpointCertificateResponse.pcARootCACertificate) &&
        Objects.equals(this.pcASubCACertificate, getEndpointCertificateResponse.pcASubCACertificate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(notAfter, notBefore, pcAHost, pcAInstanceCertificate, pcAName, pcARootCACertificate, pcASubCACertificate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetEndpointCertificateResponse {\n");
    
    sb.append("    notAfter: ").append(toIndentedString(notAfter)).append("\n");
    sb.append("    notBefore: ").append(toIndentedString(notBefore)).append("\n");
    sb.append("    pcAHost: ").append(toIndentedString(pcAHost)).append("\n");
    sb.append("    pcAInstanceCertificate: ").append(toIndentedString(pcAInstanceCertificate)).append("\n");
    sb.append("    pcAName: ").append(toIndentedString(pcAName)).append("\n");
    sb.append("    pcARootCACertificate: ").append(toIndentedString(pcARootCACertificate)).append("\n");
    sb.append("    pcASubCACertificate: ").append(toIndentedString(pcASubCACertificate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
