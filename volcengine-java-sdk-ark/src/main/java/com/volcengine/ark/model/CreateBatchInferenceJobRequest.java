/*
 * ark
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.ark.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.ark.model.InputFileTosLocationForCreateBatchInferenceJobInput;
import com.volcengine.ark.model.ModelReferenceForCreateBatchInferenceJobInput;
import com.volcengine.ark.model.OutputDirTosLocationForCreateBatchInferenceJobInput;
import com.volcengine.ark.model.TagForCreateBatchInferenceJobInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CreateBatchInferenceJobRequest
 */



public class CreateBatchInferenceJobRequest {
  @SerializedName("CompletionWindow")
  private String completionWindow = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("DryRun")
  private Boolean dryRun = null;

  @SerializedName("InputFileTosLocation")
  private InputFileTosLocationForCreateBatchInferenceJobInput inputFileTosLocation = null;

  @SerializedName("ModelReference")
  private ModelReferenceForCreateBatchInferenceJobInput modelReference = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("OutputDirTosLocation")
  private OutputDirTosLocationForCreateBatchInferenceJobInput outputDirTosLocation = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("Tags")
  private List<TagForCreateBatchInferenceJobInput> tags = null;

  public CreateBatchInferenceJobRequest completionWindow(String completionWindow) {
    this.completionWindow = completionWindow;
    return this;
  }

   /**
   * Get completionWindow
   * @return completionWindow
  **/
  @Schema(description = "")
  public String getCompletionWindow() {
    return completionWindow;
  }

  public void setCompletionWindow(String completionWindow) {
    this.completionWindow = completionWindow;
  }

  public CreateBatchInferenceJobRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CreateBatchInferenceJobRequest dryRun(Boolean dryRun) {
    this.dryRun = dryRun;
    return this;
  }

   /**
   * Get dryRun
   * @return dryRun
  **/
  @Schema(description = "")
  public Boolean isDryRun() {
    return dryRun;
  }

  public void setDryRun(Boolean dryRun) {
    this.dryRun = dryRun;
  }

  public CreateBatchInferenceJobRequest inputFileTosLocation(InputFileTosLocationForCreateBatchInferenceJobInput inputFileTosLocation) {
    this.inputFileTosLocation = inputFileTosLocation;
    return this;
  }

   /**
   * Get inputFileTosLocation
   * @return inputFileTosLocation
  **/
  @Valid
  @Schema(description = "")
  public InputFileTosLocationForCreateBatchInferenceJobInput getInputFileTosLocation() {
    return inputFileTosLocation;
  }

  public void setInputFileTosLocation(InputFileTosLocationForCreateBatchInferenceJobInput inputFileTosLocation) {
    this.inputFileTosLocation = inputFileTosLocation;
  }

  public CreateBatchInferenceJobRequest modelReference(ModelReferenceForCreateBatchInferenceJobInput modelReference) {
    this.modelReference = modelReference;
    return this;
  }

   /**
   * Get modelReference
   * @return modelReference
  **/
  @Valid
  @Schema(description = "")
  public ModelReferenceForCreateBatchInferenceJobInput getModelReference() {
    return modelReference;
  }

  public void setModelReference(ModelReferenceForCreateBatchInferenceJobInput modelReference) {
    this.modelReference = modelReference;
  }

  public CreateBatchInferenceJobRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CreateBatchInferenceJobRequest outputDirTosLocation(OutputDirTosLocationForCreateBatchInferenceJobInput outputDirTosLocation) {
    this.outputDirTosLocation = outputDirTosLocation;
    return this;
  }

   /**
   * Get outputDirTosLocation
   * @return outputDirTosLocation
  **/
  @Valid
  @Schema(description = "")
  public OutputDirTosLocationForCreateBatchInferenceJobInput getOutputDirTosLocation() {
    return outputDirTosLocation;
  }

  public void setOutputDirTosLocation(OutputDirTosLocationForCreateBatchInferenceJobInput outputDirTosLocation) {
    this.outputDirTosLocation = outputDirTosLocation;
  }

  public CreateBatchInferenceJobRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public CreateBatchInferenceJobRequest tags(List<TagForCreateBatchInferenceJobInput> tags) {
    this.tags = tags;
    return this;
  }

  public CreateBatchInferenceJobRequest addTagsItem(TagForCreateBatchInferenceJobInput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForCreateBatchInferenceJobInput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForCreateBatchInferenceJobInput> getTags() {
    return tags;
  }

  public void setTags(List<TagForCreateBatchInferenceJobInput> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateBatchInferenceJobRequest createBatchInferenceJobRequest = (CreateBatchInferenceJobRequest) o;
    return Objects.equals(this.completionWindow, createBatchInferenceJobRequest.completionWindow) &&
        Objects.equals(this.description, createBatchInferenceJobRequest.description) &&
        Objects.equals(this.dryRun, createBatchInferenceJobRequest.dryRun) &&
        Objects.equals(this.inputFileTosLocation, createBatchInferenceJobRequest.inputFileTosLocation) &&
        Objects.equals(this.modelReference, createBatchInferenceJobRequest.modelReference) &&
        Objects.equals(this.name, createBatchInferenceJobRequest.name) &&
        Objects.equals(this.outputDirTosLocation, createBatchInferenceJobRequest.outputDirTosLocation) &&
        Objects.equals(this.projectName, createBatchInferenceJobRequest.projectName) &&
        Objects.equals(this.tags, createBatchInferenceJobRequest.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(completionWindow, description, dryRun, inputFileTosLocation, modelReference, name, outputDirTosLocation, projectName, tags);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateBatchInferenceJobRequest {\n");
    
    sb.append("    completionWindow: ").append(toIndentedString(completionWindow)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    dryRun: ").append(toIndentedString(dryRun)).append("\n");
    sb.append("    inputFileTosLocation: ").append(toIndentedString(inputFileTosLocation)).append("\n");
    sb.append("    modelReference: ").append(toIndentedString(modelReference)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    outputDirTosLocation: ").append(toIndentedString(outputDirTosLocation)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
