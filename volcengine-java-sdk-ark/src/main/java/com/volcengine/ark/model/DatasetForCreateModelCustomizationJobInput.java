/*
 * ark
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.ark.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DatasetForCreateModelCustomizationJobInput
 */



public class DatasetForCreateModelCustomizationJobInput {
  @SerializedName("DatasetId")
  private String datasetId = null;

  @SerializedName("DatasetVersionId")
  private String datasetVersionId = null;

  @SerializedName("Multiplier")
  private Double multiplier = null;

  @SerializedName("SampleCount")
  private Long sampleCount = null;

  public DatasetForCreateModelCustomizationJobInput datasetId(String datasetId) {
    this.datasetId = datasetId;
    return this;
  }

   /**
   * Get datasetId
   * @return datasetId
  **/
  @Schema(description = "")
  public String getDatasetId() {
    return datasetId;
  }

  public void setDatasetId(String datasetId) {
    this.datasetId = datasetId;
  }

  public DatasetForCreateModelCustomizationJobInput datasetVersionId(String datasetVersionId) {
    this.datasetVersionId = datasetVersionId;
    return this;
  }

   /**
   * Get datasetVersionId
   * @return datasetVersionId
  **/
  @Schema(description = "")
  public String getDatasetVersionId() {
    return datasetVersionId;
  }

  public void setDatasetVersionId(String datasetVersionId) {
    this.datasetVersionId = datasetVersionId;
  }

  public DatasetForCreateModelCustomizationJobInput multiplier(Double multiplier) {
    this.multiplier = multiplier;
    return this;
  }

   /**
   * Get multiplier
   * @return multiplier
  **/
  @Schema(description = "")
  public Double getMultiplier() {
    return multiplier;
  }

  public void setMultiplier(Double multiplier) {
    this.multiplier = multiplier;
  }

  public DatasetForCreateModelCustomizationJobInput sampleCount(Long sampleCount) {
    this.sampleCount = sampleCount;
    return this;
  }

   /**
   * Get sampleCount
   * @return sampleCount
  **/
  @Schema(description = "")
  public Long getSampleCount() {
    return sampleCount;
  }

  public void setSampleCount(Long sampleCount) {
    this.sampleCount = sampleCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DatasetForCreateModelCustomizationJobInput datasetForCreateModelCustomizationJobInput = (DatasetForCreateModelCustomizationJobInput) o;
    return Objects.equals(this.datasetId, datasetForCreateModelCustomizationJobInput.datasetId) &&
        Objects.equals(this.datasetVersionId, datasetForCreateModelCustomizationJobInput.datasetVersionId) &&
        Objects.equals(this.multiplier, datasetForCreateModelCustomizationJobInput.multiplier) &&
        Objects.equals(this.sampleCount, datasetForCreateModelCustomizationJobInput.sampleCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(datasetId, datasetVersionId, multiplier, sampleCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DatasetForCreateModelCustomizationJobInput {\n");
    
    sb.append("    datasetId: ").append(toIndentedString(datasetId)).append("\n");
    sb.append("    datasetVersionId: ").append(toIndentedString(datasetVersionId)).append("\n");
    sb.append("    multiplier: ").append(toIndentedString(multiplier)).append("\n");
    sb.append("    sampleCount: ").append(toIndentedString(sampleCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
