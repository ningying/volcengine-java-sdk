/*
 * alb
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.alb.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeListenerHealthRequest
 */



public class DescribeListenerHealthRequest {
  @SerializedName("ListenerIds")
  private List<String> listenerIds = null;

  @SerializedName("OnlyUnHealthy")
  private String onlyUnHealthy = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  public DescribeListenerHealthRequest listenerIds(List<String> listenerIds) {
    this.listenerIds = listenerIds;
    return this;
  }

  public DescribeListenerHealthRequest addListenerIdsItem(String listenerIdsItem) {
    if (this.listenerIds == null) {
      this.listenerIds = new ArrayList<String>();
    }
    this.listenerIds.add(listenerIdsItem);
    return this;
  }

   /**
   * Get listenerIds
   * @return listenerIds
  **/
  @Schema(description = "")
  public List<String> getListenerIds() {
    return listenerIds;
  }

  public void setListenerIds(List<String> listenerIds) {
    this.listenerIds = listenerIds;
  }

  public DescribeListenerHealthRequest onlyUnHealthy(String onlyUnHealthy) {
    this.onlyUnHealthy = onlyUnHealthy;
    return this;
  }

   /**
   * Get onlyUnHealthy
   * @return onlyUnHealthy
  **/
  @Schema(description = "")
  public String getOnlyUnHealthy() {
    return onlyUnHealthy;
  }

  public void setOnlyUnHealthy(String onlyUnHealthy) {
    this.onlyUnHealthy = onlyUnHealthy;
  }

  public DescribeListenerHealthRequest projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeListenerHealthRequest describeListenerHealthRequest = (DescribeListenerHealthRequest) o;
    return Objects.equals(this.listenerIds, describeListenerHealthRequest.listenerIds) &&
        Objects.equals(this.onlyUnHealthy, describeListenerHealthRequest.onlyUnHealthy) &&
        Objects.equals(this.projectName, describeListenerHealthRequest.projectName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(listenerIds, onlyUnHealthy, projectName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeListenerHealthRequest {\n");
    
    sb.append("    listenerIds: ").append(toIndentedString(listenerIds)).append("\n");
    sb.append("    onlyUnHealthy: ").append(toIndentedString(onlyUnHealthy)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
