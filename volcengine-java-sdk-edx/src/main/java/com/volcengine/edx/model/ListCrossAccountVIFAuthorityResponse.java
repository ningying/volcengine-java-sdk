/*
 * edx
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.edx.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.edx.model.AuthorityListForListCrossAccountVIFAuthorityOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ListCrossAccountVIFAuthorityResponse
 */



public class ListCrossAccountVIFAuthorityResponse extends com.volcengine.model.AbstractResponse {
  @SerializedName("AuthorityList")
  private List<AuthorityListForListCrossAccountVIFAuthorityOutput> authorityList = null;

  @SerializedName("AuthorizedCount")
  private Integer authorizedCount = null;

  @SerializedName("AuthorizingCount")
  private Integer authorizingCount = null;

  @SerializedName("CanceledCount")
  private Integer canceledCount = null;

  @SerializedName("PageNumber")
  private Integer pageNumber = null;

  @SerializedName("PageSize")
  private Integer pageSize = null;

  @SerializedName("RejectCount")
  private Integer rejectCount = null;

  @SerializedName("TotalCount")
  private Integer totalCount = null;

  public ListCrossAccountVIFAuthorityResponse authorityList(List<AuthorityListForListCrossAccountVIFAuthorityOutput> authorityList) {
    this.authorityList = authorityList;
    return this;
  }

  public ListCrossAccountVIFAuthorityResponse addAuthorityListItem(AuthorityListForListCrossAccountVIFAuthorityOutput authorityListItem) {
    if (this.authorityList == null) {
      this.authorityList = new ArrayList<AuthorityListForListCrossAccountVIFAuthorityOutput>();
    }
    this.authorityList.add(authorityListItem);
    return this;
  }

   /**
   * Get authorityList
   * @return authorityList
  **/
  @Valid
  @Schema(description = "")
  public List<AuthorityListForListCrossAccountVIFAuthorityOutput> getAuthorityList() {
    return authorityList;
  }

  public void setAuthorityList(List<AuthorityListForListCrossAccountVIFAuthorityOutput> authorityList) {
    this.authorityList = authorityList;
  }

  public ListCrossAccountVIFAuthorityResponse authorizedCount(Integer authorizedCount) {
    this.authorizedCount = authorizedCount;
    return this;
  }

   /**
   * Get authorizedCount
   * @return authorizedCount
  **/
  @Schema(description = "")
  public Integer getAuthorizedCount() {
    return authorizedCount;
  }

  public void setAuthorizedCount(Integer authorizedCount) {
    this.authorizedCount = authorizedCount;
  }

  public ListCrossAccountVIFAuthorityResponse authorizingCount(Integer authorizingCount) {
    this.authorizingCount = authorizingCount;
    return this;
  }

   /**
   * Get authorizingCount
   * @return authorizingCount
  **/
  @Schema(description = "")
  public Integer getAuthorizingCount() {
    return authorizingCount;
  }

  public void setAuthorizingCount(Integer authorizingCount) {
    this.authorizingCount = authorizingCount;
  }

  public ListCrossAccountVIFAuthorityResponse canceledCount(Integer canceledCount) {
    this.canceledCount = canceledCount;
    return this;
  }

   /**
   * Get canceledCount
   * @return canceledCount
  **/
  @Schema(description = "")
  public Integer getCanceledCount() {
    return canceledCount;
  }

  public void setCanceledCount(Integer canceledCount) {
    this.canceledCount = canceledCount;
  }

  public ListCrossAccountVIFAuthorityResponse pageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

   /**
   * Get pageNumber
   * @return pageNumber
  **/
  @Schema(description = "")
  public Integer getPageNumber() {
    return pageNumber;
  }

  public void setPageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
  }

  public ListCrossAccountVIFAuthorityResponse pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @Schema(description = "")
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  public ListCrossAccountVIFAuthorityResponse rejectCount(Integer rejectCount) {
    this.rejectCount = rejectCount;
    return this;
  }

   /**
   * Get rejectCount
   * @return rejectCount
  **/
  @Schema(description = "")
  public Integer getRejectCount() {
    return rejectCount;
  }

  public void setRejectCount(Integer rejectCount) {
    this.rejectCount = rejectCount;
  }

  public ListCrossAccountVIFAuthorityResponse totalCount(Integer totalCount) {
    this.totalCount = totalCount;
    return this;
  }

   /**
   * Get totalCount
   * @return totalCount
  **/
  @Schema(description = "")
  public Integer getTotalCount() {
    return totalCount;
  }

  public void setTotalCount(Integer totalCount) {
    this.totalCount = totalCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListCrossAccountVIFAuthorityResponse listCrossAccountVIFAuthorityResponse = (ListCrossAccountVIFAuthorityResponse) o;
    return Objects.equals(this.authorityList, listCrossAccountVIFAuthorityResponse.authorityList) &&
        Objects.equals(this.authorizedCount, listCrossAccountVIFAuthorityResponse.authorizedCount) &&
        Objects.equals(this.authorizingCount, listCrossAccountVIFAuthorityResponse.authorizingCount) &&
        Objects.equals(this.canceledCount, listCrossAccountVIFAuthorityResponse.canceledCount) &&
        Objects.equals(this.pageNumber, listCrossAccountVIFAuthorityResponse.pageNumber) &&
        Objects.equals(this.pageSize, listCrossAccountVIFAuthorityResponse.pageSize) &&
        Objects.equals(this.rejectCount, listCrossAccountVIFAuthorityResponse.rejectCount) &&
        Objects.equals(this.totalCount, listCrossAccountVIFAuthorityResponse.totalCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authorityList, authorizedCount, authorizingCount, canceledCount, pageNumber, pageSize, rejectCount, totalCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListCrossAccountVIFAuthorityResponse {\n");
    
    sb.append("    authorityList: ").append(toIndentedString(authorityList)).append("\n");
    sb.append("    authorizedCount: ").append(toIndentedString(authorizedCount)).append("\n");
    sb.append("    authorizingCount: ").append(toIndentedString(authorizingCount)).append("\n");
    sb.append("    canceledCount: ").append(toIndentedString(canceledCount)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    rejectCount: ").append(toIndentedString(rejectCount)).append("\n");
    sb.append("    totalCount: ").append(toIndentedString(totalCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
