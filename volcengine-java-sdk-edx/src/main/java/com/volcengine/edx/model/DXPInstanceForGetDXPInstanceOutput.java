/*
 * edx
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.edx.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.edx.model.ConnectionInfoForGetDXPInstanceOutput;
import com.volcengine.edx.model.ConstructionInfoForGetDXPInstanceOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DXPInstanceForGetDXPInstanceOutput
 */



public class DXPInstanceForGetDXPInstanceOutput {
  @SerializedName("AP")
  private String AP = null;

  @SerializedName("Area")
  private String area = null;

  @SerializedName("AutoRenew")
  private String autoRenew = null;

  @SerializedName("Bandwidth")
  private String bandwidth = null;

  @SerializedName("ConnectionInfo")
  private ConnectionInfoForGetDXPInstanceOutput connectionInfo = null;

  @SerializedName("ConstructionInfo")
  private ConstructionInfoForGetDXPInstanceOutput constructionInfo = null;

  @SerializedName("HealthStatus")
  private Boolean healthStatus = null;

  @SerializedName("ISP")
  private String ISP = null;

  @SerializedName("InstanceId")
  private String instanceId = null;

  @SerializedName("InstanceName")
  private String instanceName = null;

  @SerializedName("InstanceNo")
  private String instanceNo = null;

  @SerializedName("ModuleType")
  private String moduleType = null;

  @SerializedName("PortType")
  private String portType = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("VIFIdList")
  private List<String> viFIdList = null;

  public DXPInstanceForGetDXPInstanceOutput AP(String AP) {
    this.AP = AP;
    return this;
  }

   /**
   * Get AP
   * @return AP
  **/
  @Schema(description = "")
  public String getAP() {
    return AP;
  }

  public void setAP(String AP) {
    this.AP = AP;
  }

  public DXPInstanceForGetDXPInstanceOutput area(String area) {
    this.area = area;
    return this;
  }

   /**
   * Get area
   * @return area
  **/
  @Schema(description = "")
  public String getArea() {
    return area;
  }

  public void setArea(String area) {
    this.area = area;
  }

  public DXPInstanceForGetDXPInstanceOutput autoRenew(String autoRenew) {
    this.autoRenew = autoRenew;
    return this;
  }

   /**
   * Get autoRenew
   * @return autoRenew
  **/
  @Schema(description = "")
  public String getAutoRenew() {
    return autoRenew;
  }

  public void setAutoRenew(String autoRenew) {
    this.autoRenew = autoRenew;
  }

  public DXPInstanceForGetDXPInstanceOutput bandwidth(String bandwidth) {
    this.bandwidth = bandwidth;
    return this;
  }

   /**
   * Get bandwidth
   * @return bandwidth
  **/
  @Schema(description = "")
  public String getBandwidth() {
    return bandwidth;
  }

  public void setBandwidth(String bandwidth) {
    this.bandwidth = bandwidth;
  }

  public DXPInstanceForGetDXPInstanceOutput connectionInfo(ConnectionInfoForGetDXPInstanceOutput connectionInfo) {
    this.connectionInfo = connectionInfo;
    return this;
  }

   /**
   * Get connectionInfo
   * @return connectionInfo
  **/
  @Valid
  @Schema(description = "")
  public ConnectionInfoForGetDXPInstanceOutput getConnectionInfo() {
    return connectionInfo;
  }

  public void setConnectionInfo(ConnectionInfoForGetDXPInstanceOutput connectionInfo) {
    this.connectionInfo = connectionInfo;
  }

  public DXPInstanceForGetDXPInstanceOutput constructionInfo(ConstructionInfoForGetDXPInstanceOutput constructionInfo) {
    this.constructionInfo = constructionInfo;
    return this;
  }

   /**
   * Get constructionInfo
   * @return constructionInfo
  **/
  @Valid
  @Schema(description = "")
  public ConstructionInfoForGetDXPInstanceOutput getConstructionInfo() {
    return constructionInfo;
  }

  public void setConstructionInfo(ConstructionInfoForGetDXPInstanceOutput constructionInfo) {
    this.constructionInfo = constructionInfo;
  }

  public DXPInstanceForGetDXPInstanceOutput healthStatus(Boolean healthStatus) {
    this.healthStatus = healthStatus;
    return this;
  }

   /**
   * Get healthStatus
   * @return healthStatus
  **/
  @Schema(description = "")
  public Boolean isHealthStatus() {
    return healthStatus;
  }

  public void setHealthStatus(Boolean healthStatus) {
    this.healthStatus = healthStatus;
  }

  public DXPInstanceForGetDXPInstanceOutput ISP(String ISP) {
    this.ISP = ISP;
    return this;
  }

   /**
   * Get ISP
   * @return ISP
  **/
  @Schema(description = "")
  public String getISP() {
    return ISP;
  }

  public void setISP(String ISP) {
    this.ISP = ISP;
  }

  public DXPInstanceForGetDXPInstanceOutput instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * Get instanceId
   * @return instanceId
  **/
  @Schema(description = "")
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }

  public DXPInstanceForGetDXPInstanceOutput instanceName(String instanceName) {
    this.instanceName = instanceName;
    return this;
  }

   /**
   * Get instanceName
   * @return instanceName
  **/
  @Schema(description = "")
  public String getInstanceName() {
    return instanceName;
  }

  public void setInstanceName(String instanceName) {
    this.instanceName = instanceName;
  }

  public DXPInstanceForGetDXPInstanceOutput instanceNo(String instanceNo) {
    this.instanceNo = instanceNo;
    return this;
  }

   /**
   * Get instanceNo
   * @return instanceNo
  **/
  @Schema(description = "")
  public String getInstanceNo() {
    return instanceNo;
  }

  public void setInstanceNo(String instanceNo) {
    this.instanceNo = instanceNo;
  }

  public DXPInstanceForGetDXPInstanceOutput moduleType(String moduleType) {
    this.moduleType = moduleType;
    return this;
  }

   /**
   * Get moduleType
   * @return moduleType
  **/
  @Schema(description = "")
  public String getModuleType() {
    return moduleType;
  }

  public void setModuleType(String moduleType) {
    this.moduleType = moduleType;
  }

  public DXPInstanceForGetDXPInstanceOutput portType(String portType) {
    this.portType = portType;
    return this;
  }

   /**
   * Get portType
   * @return portType
  **/
  @Schema(description = "")
  public String getPortType() {
    return portType;
  }

  public void setPortType(String portType) {
    this.portType = portType;
  }

  public DXPInstanceForGetDXPInstanceOutput status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public DXPInstanceForGetDXPInstanceOutput viFIdList(List<String> viFIdList) {
    this.viFIdList = viFIdList;
    return this;
  }

  public DXPInstanceForGetDXPInstanceOutput addViFIdListItem(String viFIdListItem) {
    if (this.viFIdList == null) {
      this.viFIdList = new ArrayList<String>();
    }
    this.viFIdList.add(viFIdListItem);
    return this;
  }

   /**
   * Get viFIdList
   * @return viFIdList
  **/
  @Schema(description = "")
  public List<String> getViFIdList() {
    return viFIdList;
  }

  public void setViFIdList(List<String> viFIdList) {
    this.viFIdList = viFIdList;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DXPInstanceForGetDXPInstanceOutput dxPInstanceForGetDXPInstanceOutput = (DXPInstanceForGetDXPInstanceOutput) o;
    return Objects.equals(this.AP, dxPInstanceForGetDXPInstanceOutput.AP) &&
        Objects.equals(this.area, dxPInstanceForGetDXPInstanceOutput.area) &&
        Objects.equals(this.autoRenew, dxPInstanceForGetDXPInstanceOutput.autoRenew) &&
        Objects.equals(this.bandwidth, dxPInstanceForGetDXPInstanceOutput.bandwidth) &&
        Objects.equals(this.connectionInfo, dxPInstanceForGetDXPInstanceOutput.connectionInfo) &&
        Objects.equals(this.constructionInfo, dxPInstanceForGetDXPInstanceOutput.constructionInfo) &&
        Objects.equals(this.healthStatus, dxPInstanceForGetDXPInstanceOutput.healthStatus) &&
        Objects.equals(this.ISP, dxPInstanceForGetDXPInstanceOutput.ISP) &&
        Objects.equals(this.instanceId, dxPInstanceForGetDXPInstanceOutput.instanceId) &&
        Objects.equals(this.instanceName, dxPInstanceForGetDXPInstanceOutput.instanceName) &&
        Objects.equals(this.instanceNo, dxPInstanceForGetDXPInstanceOutput.instanceNo) &&
        Objects.equals(this.moduleType, dxPInstanceForGetDXPInstanceOutput.moduleType) &&
        Objects.equals(this.portType, dxPInstanceForGetDXPInstanceOutput.portType) &&
        Objects.equals(this.status, dxPInstanceForGetDXPInstanceOutput.status) &&
        Objects.equals(this.viFIdList, dxPInstanceForGetDXPInstanceOutput.viFIdList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(AP, area, autoRenew, bandwidth, connectionInfo, constructionInfo, healthStatus, ISP, instanceId, instanceName, instanceNo, moduleType, portType, status, viFIdList);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DXPInstanceForGetDXPInstanceOutput {\n");
    
    sb.append("    AP: ").append(toIndentedString(AP)).append("\n");
    sb.append("    area: ").append(toIndentedString(area)).append("\n");
    sb.append("    autoRenew: ").append(toIndentedString(autoRenew)).append("\n");
    sb.append("    bandwidth: ").append(toIndentedString(bandwidth)).append("\n");
    sb.append("    connectionInfo: ").append(toIndentedString(connectionInfo)).append("\n");
    sb.append("    constructionInfo: ").append(toIndentedString(constructionInfo)).append("\n");
    sb.append("    healthStatus: ").append(toIndentedString(healthStatus)).append("\n");
    sb.append("    ISP: ").append(toIndentedString(ISP)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    instanceName: ").append(toIndentedString(instanceName)).append("\n");
    sb.append("    instanceNo: ").append(toIndentedString(instanceNo)).append("\n");
    sb.append("    moduleType: ").append(toIndentedString(moduleType)).append("\n");
    sb.append("    portType: ").append(toIndentedString(portType)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    viFIdList: ").append(toIndentedString(viFIdList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
