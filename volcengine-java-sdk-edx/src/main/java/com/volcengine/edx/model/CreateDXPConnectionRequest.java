/*
 * edx
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.edx.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.edx.model.FieldEngineerForCreateDXPConnectionInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * CreateDXPConnectionRequest
 */



public class CreateDXPConnectionRequest {
  @SerializedName("Bandwidth")
  private String bandwidth = null;

  @SerializedName("ContactName")
  private String contactName = null;

  @SerializedName("ContactPhone")
  private String contactPhone = null;

  @SerializedName("FieldEngineer")
  private List<FieldEngineerForCreateDXPConnectionInput> fieldEngineer = null;

  @SerializedName("IDCAddr")
  private String idCAddr = null;

  @SerializedName("IDCCode")
  private String idCCode = null;

  @SerializedName("IDCLocation")
  private String idCLocation = null;

  @SerializedName("InstanceId")
  private String instanceId = null;

  @SerializedName("LicenseURL")
  private String licenseURL = null;

  public CreateDXPConnectionRequest bandwidth(String bandwidth) {
    this.bandwidth = bandwidth;
    return this;
  }

   /**
   * Get bandwidth
   * @return bandwidth
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getBandwidth() {
    return bandwidth;
  }

  public void setBandwidth(String bandwidth) {
    this.bandwidth = bandwidth;
  }

  public CreateDXPConnectionRequest contactName(String contactName) {
    this.contactName = contactName;
    return this;
  }

   /**
   * Get contactName
   * @return contactName
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getContactName() {
    return contactName;
  }

  public void setContactName(String contactName) {
    this.contactName = contactName;
  }

  public CreateDXPConnectionRequest contactPhone(String contactPhone) {
    this.contactPhone = contactPhone;
    return this;
  }

   /**
   * Get contactPhone
   * @return contactPhone
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getContactPhone() {
    return contactPhone;
  }

  public void setContactPhone(String contactPhone) {
    this.contactPhone = contactPhone;
  }

  public CreateDXPConnectionRequest fieldEngineer(List<FieldEngineerForCreateDXPConnectionInput> fieldEngineer) {
    this.fieldEngineer = fieldEngineer;
    return this;
  }

  public CreateDXPConnectionRequest addFieldEngineerItem(FieldEngineerForCreateDXPConnectionInput fieldEngineerItem) {
    if (this.fieldEngineer == null) {
      this.fieldEngineer = new ArrayList<FieldEngineerForCreateDXPConnectionInput>();
    }
    this.fieldEngineer.add(fieldEngineerItem);
    return this;
  }

   /**
   * Get fieldEngineer
   * @return fieldEngineer
  **/
  @Valid
  @Schema(description = "")
  public List<FieldEngineerForCreateDXPConnectionInput> getFieldEngineer() {
    return fieldEngineer;
  }

  public void setFieldEngineer(List<FieldEngineerForCreateDXPConnectionInput> fieldEngineer) {
    this.fieldEngineer = fieldEngineer;
  }

  public CreateDXPConnectionRequest idCAddr(String idCAddr) {
    this.idCAddr = idCAddr;
    return this;
  }

   /**
   * Get idCAddr
   * @return idCAddr
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getIdCAddr() {
    return idCAddr;
  }

  public void setIdCAddr(String idCAddr) {
    this.idCAddr = idCAddr;
  }

  public CreateDXPConnectionRequest idCCode(String idCCode) {
    this.idCCode = idCCode;
    return this;
  }

   /**
   * Get idCCode
   * @return idCCode
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getIdCCode() {
    return idCCode;
  }

  public void setIdCCode(String idCCode) {
    this.idCCode = idCCode;
  }

  public CreateDXPConnectionRequest idCLocation(String idCLocation) {
    this.idCLocation = idCLocation;
    return this;
  }

   /**
   * Get idCLocation
   * @return idCLocation
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getIdCLocation() {
    return idCLocation;
  }

  public void setIdCLocation(String idCLocation) {
    this.idCLocation = idCLocation;
  }

  public CreateDXPConnectionRequest instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * Get instanceId
   * @return instanceId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }

  public CreateDXPConnectionRequest licenseURL(String licenseURL) {
    this.licenseURL = licenseURL;
    return this;
  }

   /**
   * Get licenseURL
   * @return licenseURL
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getLicenseURL() {
    return licenseURL;
  }

  public void setLicenseURL(String licenseURL) {
    this.licenseURL = licenseURL;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateDXPConnectionRequest createDXPConnectionRequest = (CreateDXPConnectionRequest) o;
    return Objects.equals(this.bandwidth, createDXPConnectionRequest.bandwidth) &&
        Objects.equals(this.contactName, createDXPConnectionRequest.contactName) &&
        Objects.equals(this.contactPhone, createDXPConnectionRequest.contactPhone) &&
        Objects.equals(this.fieldEngineer, createDXPConnectionRequest.fieldEngineer) &&
        Objects.equals(this.idCAddr, createDXPConnectionRequest.idCAddr) &&
        Objects.equals(this.idCCode, createDXPConnectionRequest.idCCode) &&
        Objects.equals(this.idCLocation, createDXPConnectionRequest.idCLocation) &&
        Objects.equals(this.instanceId, createDXPConnectionRequest.instanceId) &&
        Objects.equals(this.licenseURL, createDXPConnectionRequest.licenseURL);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bandwidth, contactName, contactPhone, fieldEngineer, idCAddr, idCCode, idCLocation, instanceId, licenseURL);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateDXPConnectionRequest {\n");
    
    sb.append("    bandwidth: ").append(toIndentedString(bandwidth)).append("\n");
    sb.append("    contactName: ").append(toIndentedString(contactName)).append("\n");
    sb.append("    contactPhone: ").append(toIndentedString(contactPhone)).append("\n");
    sb.append("    fieldEngineer: ").append(toIndentedString(fieldEngineer)).append("\n");
    sb.append("    idCAddr: ").append(toIndentedString(idCAddr)).append("\n");
    sb.append("    idCCode: ").append(toIndentedString(idCCode)).append("\n");
    sb.append("    idCLocation: ").append(toIndentedString(idCLocation)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    licenseURL: ").append(toIndentedString(licenseURL)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
