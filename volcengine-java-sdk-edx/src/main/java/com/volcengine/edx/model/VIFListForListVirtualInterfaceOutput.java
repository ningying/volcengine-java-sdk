/*
 * edx
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.edx.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * VIFListForListVirtualInterfaceOutput
 */



public class VIFListForListVirtualInterfaceOutput {
  @SerializedName("AccessPoint")
  private String accessPoint = null;

  @SerializedName("AccountId")
  private Integer accountId = null;

  @SerializedName("CreateTime")
  private String createTime = null;

  @SerializedName("CrossAccount")
  private Boolean crossAccount = null;

  @SerializedName("DXPInstanceId")
  private String dxPInstanceId = null;

  @SerializedName("DXPInstanceName")
  private String dxPInstanceName = null;

  @SerializedName("InstanceId")
  private String instanceId = null;

  @SerializedName("LocalIP")
  private String localIP = null;

  @SerializedName("MaxBandwidth")
  private Integer maxBandwidth = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("PeerIP")
  private String peerIP = null;

  @SerializedName("State")
  private String state = null;

  @SerializedName("VIFVGWInstanceId")
  private String viFVGWInstanceId = null;

  @SerializedName("VlanId")
  private Integer vlanId = null;

  public VIFListForListVirtualInterfaceOutput accessPoint(String accessPoint) {
    this.accessPoint = accessPoint;
    return this;
  }

   /**
   * Get accessPoint
   * @return accessPoint
  **/
  @Schema(description = "")
  public String getAccessPoint() {
    return accessPoint;
  }

  public void setAccessPoint(String accessPoint) {
    this.accessPoint = accessPoint;
  }

  public VIFListForListVirtualInterfaceOutput accountId(Integer accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @Schema(description = "")
  public Integer getAccountId() {
    return accountId;
  }

  public void setAccountId(Integer accountId) {
    this.accountId = accountId;
  }

  public VIFListForListVirtualInterfaceOutput createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @Schema(description = "")
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }

  public VIFListForListVirtualInterfaceOutput crossAccount(Boolean crossAccount) {
    this.crossAccount = crossAccount;
    return this;
  }

   /**
   * Get crossAccount
   * @return crossAccount
  **/
  @Schema(description = "")
  public Boolean isCrossAccount() {
    return crossAccount;
  }

  public void setCrossAccount(Boolean crossAccount) {
    this.crossAccount = crossAccount;
  }

  public VIFListForListVirtualInterfaceOutput dxPInstanceId(String dxPInstanceId) {
    this.dxPInstanceId = dxPInstanceId;
    return this;
  }

   /**
   * Get dxPInstanceId
   * @return dxPInstanceId
  **/
  @Schema(description = "")
  public String getDxPInstanceId() {
    return dxPInstanceId;
  }

  public void setDxPInstanceId(String dxPInstanceId) {
    this.dxPInstanceId = dxPInstanceId;
  }

  public VIFListForListVirtualInterfaceOutput dxPInstanceName(String dxPInstanceName) {
    this.dxPInstanceName = dxPInstanceName;
    return this;
  }

   /**
   * Get dxPInstanceName
   * @return dxPInstanceName
  **/
  @Schema(description = "")
  public String getDxPInstanceName() {
    return dxPInstanceName;
  }

  public void setDxPInstanceName(String dxPInstanceName) {
    this.dxPInstanceName = dxPInstanceName;
  }

  public VIFListForListVirtualInterfaceOutput instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * Get instanceId
   * @return instanceId
  **/
  @Schema(description = "")
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }

  public VIFListForListVirtualInterfaceOutput localIP(String localIP) {
    this.localIP = localIP;
    return this;
  }

   /**
   * Get localIP
   * @return localIP
  **/
  @Schema(description = "")
  public String getLocalIP() {
    return localIP;
  }

  public void setLocalIP(String localIP) {
    this.localIP = localIP;
  }

  public VIFListForListVirtualInterfaceOutput maxBandwidth(Integer maxBandwidth) {
    this.maxBandwidth = maxBandwidth;
    return this;
  }

   /**
   * Get maxBandwidth
   * @return maxBandwidth
  **/
  @Schema(description = "")
  public Integer getMaxBandwidth() {
    return maxBandwidth;
  }

  public void setMaxBandwidth(Integer maxBandwidth) {
    this.maxBandwidth = maxBandwidth;
  }

  public VIFListForListVirtualInterfaceOutput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public VIFListForListVirtualInterfaceOutput peerIP(String peerIP) {
    this.peerIP = peerIP;
    return this;
  }

   /**
   * Get peerIP
   * @return peerIP
  **/
  @Schema(description = "")
  public String getPeerIP() {
    return peerIP;
  }

  public void setPeerIP(String peerIP) {
    this.peerIP = peerIP;
  }

  public VIFListForListVirtualInterfaceOutput state(String state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @Schema(description = "")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public VIFListForListVirtualInterfaceOutput viFVGWInstanceId(String viFVGWInstanceId) {
    this.viFVGWInstanceId = viFVGWInstanceId;
    return this;
  }

   /**
   * Get viFVGWInstanceId
   * @return viFVGWInstanceId
  **/
  @Schema(description = "")
  public String getViFVGWInstanceId() {
    return viFVGWInstanceId;
  }

  public void setViFVGWInstanceId(String viFVGWInstanceId) {
    this.viFVGWInstanceId = viFVGWInstanceId;
  }

  public VIFListForListVirtualInterfaceOutput vlanId(Integer vlanId) {
    this.vlanId = vlanId;
    return this;
  }

   /**
   * Get vlanId
   * @return vlanId
  **/
  @Schema(description = "")
  public Integer getVlanId() {
    return vlanId;
  }

  public void setVlanId(Integer vlanId) {
    this.vlanId = vlanId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VIFListForListVirtualInterfaceOutput viFListForListVirtualInterfaceOutput = (VIFListForListVirtualInterfaceOutput) o;
    return Objects.equals(this.accessPoint, viFListForListVirtualInterfaceOutput.accessPoint) &&
        Objects.equals(this.accountId, viFListForListVirtualInterfaceOutput.accountId) &&
        Objects.equals(this.createTime, viFListForListVirtualInterfaceOutput.createTime) &&
        Objects.equals(this.crossAccount, viFListForListVirtualInterfaceOutput.crossAccount) &&
        Objects.equals(this.dxPInstanceId, viFListForListVirtualInterfaceOutput.dxPInstanceId) &&
        Objects.equals(this.dxPInstanceName, viFListForListVirtualInterfaceOutput.dxPInstanceName) &&
        Objects.equals(this.instanceId, viFListForListVirtualInterfaceOutput.instanceId) &&
        Objects.equals(this.localIP, viFListForListVirtualInterfaceOutput.localIP) &&
        Objects.equals(this.maxBandwidth, viFListForListVirtualInterfaceOutput.maxBandwidth) &&
        Objects.equals(this.name, viFListForListVirtualInterfaceOutput.name) &&
        Objects.equals(this.peerIP, viFListForListVirtualInterfaceOutput.peerIP) &&
        Objects.equals(this.state, viFListForListVirtualInterfaceOutput.state) &&
        Objects.equals(this.viFVGWInstanceId, viFListForListVirtualInterfaceOutput.viFVGWInstanceId) &&
        Objects.equals(this.vlanId, viFListForListVirtualInterfaceOutput.vlanId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessPoint, accountId, createTime, crossAccount, dxPInstanceId, dxPInstanceName, instanceId, localIP, maxBandwidth, name, peerIP, state, viFVGWInstanceId, vlanId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VIFListForListVirtualInterfaceOutput {\n");
    
    sb.append("    accessPoint: ").append(toIndentedString(accessPoint)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    crossAccount: ").append(toIndentedString(crossAccount)).append("\n");
    sb.append("    dxPInstanceId: ").append(toIndentedString(dxPInstanceId)).append("\n");
    sb.append("    dxPInstanceName: ").append(toIndentedString(dxPInstanceName)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    localIP: ").append(toIndentedString(localIP)).append("\n");
    sb.append("    maxBandwidth: ").append(toIndentedString(maxBandwidth)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    peerIP: ").append(toIndentedString(peerIP)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    viFVGWInstanceId: ").append(toIndentedString(viFVGWInstanceId)).append("\n");
    sb.append("    vlanId: ").append(toIndentedString(vlanId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
