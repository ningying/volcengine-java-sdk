/*
 * edx
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.edx.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ListCrossAccountVIFAuthorityRequest
 */



public class ListCrossAccountVIFAuthorityRequest {
  @SerializedName("PageNumber")
  private Integer pageNumber = null;

  @SerializedName("PageSize")
  private Integer pageSize = null;

  @SerializedName("State")
  private String state = null;

  @SerializedName("VGWAccountID")
  private Integer vgWAccountID = null;

  @SerializedName("VIFInstanceID")
  private String viFInstanceID = null;

  public ListCrossAccountVIFAuthorityRequest pageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

   /**
   * Get pageNumber
   * @return pageNumber
  **/
  @Schema(description = "")
  public Integer getPageNumber() {
    return pageNumber;
  }

  public void setPageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
  }

  public ListCrossAccountVIFAuthorityRequest pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @Schema(description = "")
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  public ListCrossAccountVIFAuthorityRequest state(String state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @Schema(description = "")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public ListCrossAccountVIFAuthorityRequest vgWAccountID(Integer vgWAccountID) {
    this.vgWAccountID = vgWAccountID;
    return this;
  }

   /**
   * Get vgWAccountID
   * @return vgWAccountID
  **/
  @Schema(description = "")
  public Integer getVgWAccountID() {
    return vgWAccountID;
  }

  public void setVgWAccountID(Integer vgWAccountID) {
    this.vgWAccountID = vgWAccountID;
  }

  public ListCrossAccountVIFAuthorityRequest viFInstanceID(String viFInstanceID) {
    this.viFInstanceID = viFInstanceID;
    return this;
  }

   /**
   * Get viFInstanceID
   * @return viFInstanceID
  **/
  @Schema(description = "")
  public String getViFInstanceID() {
    return viFInstanceID;
  }

  public void setViFInstanceID(String viFInstanceID) {
    this.viFInstanceID = viFInstanceID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListCrossAccountVIFAuthorityRequest listCrossAccountVIFAuthorityRequest = (ListCrossAccountVIFAuthorityRequest) o;
    return Objects.equals(this.pageNumber, listCrossAccountVIFAuthorityRequest.pageNumber) &&
        Objects.equals(this.pageSize, listCrossAccountVIFAuthorityRequest.pageSize) &&
        Objects.equals(this.state, listCrossAccountVIFAuthorityRequest.state) &&
        Objects.equals(this.vgWAccountID, listCrossAccountVIFAuthorityRequest.vgWAccountID) &&
        Objects.equals(this.viFInstanceID, listCrossAccountVIFAuthorityRequest.viFInstanceID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pageNumber, pageSize, state, vgWAccountID, viFInstanceID);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListCrossAccountVIFAuthorityRequest {\n");
    
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    vgWAccountID: ").append(toIndentedString(vgWAccountID)).append("\n");
    sb.append("    viFInstanceID: ").append(toIndentedString(viFInstanceID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
