/*
 * vefaas
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vefaas.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ItemForListTriggersOutput
 */



public class ItemForListTriggersOutput {
  @SerializedName("AccountID")
  private String accountID = null;

  @SerializedName("CreationTime")
  private String creationTime = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("DetailedConfig")
  private String detailedConfig = null;

  @SerializedName("Enabled")
  private Boolean enabled = null;

  @SerializedName("FunctionID")
  private String functionID = null;

  @SerializedName("Id")
  private String id = null;

  @SerializedName("ImageVersion")
  private String imageVersion = null;

  @SerializedName("LastUpdateTime")
  private String lastUpdateTime = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Type")
  private String type = null;

  public ItemForListTriggersOutput accountID(String accountID) {
    this.accountID = accountID;
    return this;
  }

   /**
   * Get accountID
   * @return accountID
  **/
  @Schema(description = "")
  public String getAccountID() {
    return accountID;
  }

  public void setAccountID(String accountID) {
    this.accountID = accountID;
  }

  public ItemForListTriggersOutput creationTime(String creationTime) {
    this.creationTime = creationTime;
    return this;
  }

   /**
   * Get creationTime
   * @return creationTime
  **/
  @Schema(description = "")
  public String getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(String creationTime) {
    this.creationTime = creationTime;
  }

  public ItemForListTriggersOutput description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ItemForListTriggersOutput detailedConfig(String detailedConfig) {
    this.detailedConfig = detailedConfig;
    return this;
  }

   /**
   * Get detailedConfig
   * @return detailedConfig
  **/
  @Schema(description = "")
  public String getDetailedConfig() {
    return detailedConfig;
  }

  public void setDetailedConfig(String detailedConfig) {
    this.detailedConfig = detailedConfig;
  }

  public ItemForListTriggersOutput enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @Schema(description = "")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public ItemForListTriggersOutput functionID(String functionID) {
    this.functionID = functionID;
    return this;
  }

   /**
   * Get functionID
   * @return functionID
  **/
  @Schema(description = "")
  public String getFunctionID() {
    return functionID;
  }

  public void setFunctionID(String functionID) {
    this.functionID = functionID;
  }

  public ItemForListTriggersOutput id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ItemForListTriggersOutput imageVersion(String imageVersion) {
    this.imageVersion = imageVersion;
    return this;
  }

   /**
   * Get imageVersion
   * @return imageVersion
  **/
  @Schema(description = "")
  public String getImageVersion() {
    return imageVersion;
  }

  public void setImageVersion(String imageVersion) {
    this.imageVersion = imageVersion;
  }

  public ItemForListTriggersOutput lastUpdateTime(String lastUpdateTime) {
    this.lastUpdateTime = lastUpdateTime;
    return this;
  }

   /**
   * Get lastUpdateTime
   * @return lastUpdateTime
  **/
  @Schema(description = "")
  public String getLastUpdateTime() {
    return lastUpdateTime;
  }

  public void setLastUpdateTime(String lastUpdateTime) {
    this.lastUpdateTime = lastUpdateTime;
  }

  public ItemForListTriggersOutput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ItemForListTriggersOutput type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemForListTriggersOutput itemForListTriggersOutput = (ItemForListTriggersOutput) o;
    return Objects.equals(this.accountID, itemForListTriggersOutput.accountID) &&
        Objects.equals(this.creationTime, itemForListTriggersOutput.creationTime) &&
        Objects.equals(this.description, itemForListTriggersOutput.description) &&
        Objects.equals(this.detailedConfig, itemForListTriggersOutput.detailedConfig) &&
        Objects.equals(this.enabled, itemForListTriggersOutput.enabled) &&
        Objects.equals(this.functionID, itemForListTriggersOutput.functionID) &&
        Objects.equals(this.id, itemForListTriggersOutput.id) &&
        Objects.equals(this.imageVersion, itemForListTriggersOutput.imageVersion) &&
        Objects.equals(this.lastUpdateTime, itemForListTriggersOutput.lastUpdateTime) &&
        Objects.equals(this.name, itemForListTriggersOutput.name) &&
        Objects.equals(this.type, itemForListTriggersOutput.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountID, creationTime, description, detailedConfig, enabled, functionID, id, imageVersion, lastUpdateTime, name, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemForListTriggersOutput {\n");
    
    sb.append("    accountID: ").append(toIndentedString(accountID)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    detailedConfig: ").append(toIndentedString(detailedConfig)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    functionID: ").append(toIndentedString(functionID)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    imageVersion: ").append(toIndentedString(imageVersion)).append("\n");
    sb.append("    lastUpdateTime: ").append(toIndentedString(lastUpdateTime)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
