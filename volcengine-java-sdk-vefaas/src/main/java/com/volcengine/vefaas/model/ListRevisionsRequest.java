/*
 * vefaas
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vefaas.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vefaas.model.FilterForListRevisionsInput;
import com.volcengine.vefaas.model.TopParamForListRevisionsInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ListRevisionsRequest
 */



public class ListRevisionsRequest {
  @SerializedName("Filters")
  private List<FilterForListRevisionsInput> filters = null;

  @SerializedName("FunctionId")
  private String functionId = null;

  @SerializedName("PageNumber")
  private Integer pageNumber = null;

  @SerializedName("PageSize")
  private Integer pageSize = null;

  @SerializedName("TopParam")
  private TopParamForListRevisionsInput topParam = null;

  public ListRevisionsRequest filters(List<FilterForListRevisionsInput> filters) {
    this.filters = filters;
    return this;
  }

  public ListRevisionsRequest addFiltersItem(FilterForListRevisionsInput filtersItem) {
    if (this.filters == null) {
      this.filters = new ArrayList<FilterForListRevisionsInput>();
    }
    this.filters.add(filtersItem);
    return this;
  }

   /**
   * Get filters
   * @return filters
  **/
  @Valid
  @Schema(description = "")
  public List<FilterForListRevisionsInput> getFilters() {
    return filters;
  }

  public void setFilters(List<FilterForListRevisionsInput> filters) {
    this.filters = filters;
  }

  public ListRevisionsRequest functionId(String functionId) {
    this.functionId = functionId;
    return this;
  }

   /**
   * Get functionId
   * @return functionId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getFunctionId() {
    return functionId;
  }

  public void setFunctionId(String functionId) {
    this.functionId = functionId;
  }

  public ListRevisionsRequest pageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

   /**
   * Get pageNumber
   * @return pageNumber
  **/
  @Schema(description = "")
  public Integer getPageNumber() {
    return pageNumber;
  }

  public void setPageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
  }

  public ListRevisionsRequest pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @Schema(description = "")
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }

  public ListRevisionsRequest topParam(TopParamForListRevisionsInput topParam) {
    this.topParam = topParam;
    return this;
  }

   /**
   * Get topParam
   * @return topParam
  **/
  @Valid
  @Schema(description = "")
  public TopParamForListRevisionsInput getTopParam() {
    return topParam;
  }

  public void setTopParam(TopParamForListRevisionsInput topParam) {
    this.topParam = topParam;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListRevisionsRequest listRevisionsRequest = (ListRevisionsRequest) o;
    return Objects.equals(this.filters, listRevisionsRequest.filters) &&
        Objects.equals(this.functionId, listRevisionsRequest.functionId) &&
        Objects.equals(this.pageNumber, listRevisionsRequest.pageNumber) &&
        Objects.equals(this.pageSize, listRevisionsRequest.pageSize) &&
        Objects.equals(this.topParam, listRevisionsRequest.topParam);
  }

  @Override
  public int hashCode() {
    return Objects.hash(filters, functionId, pageNumber, pageSize, topParam);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListRevisionsRequest {\n");
    
    sb.append("    filters: ").append(toIndentedString(filters)).append("\n");
    sb.append("    functionId: ").append(toIndentedString(functionId)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    topParam: ").append(toIndentedString(topParam)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
