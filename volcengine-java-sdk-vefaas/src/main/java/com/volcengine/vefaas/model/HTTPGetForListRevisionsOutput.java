/*
 * vefaas
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.vefaas.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.vefaas.model.HTTPHeaderForListRevisionsOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * HTTPGetForListRevisionsOutput
 */



public class HTTPGetForListRevisionsOutput {
  @SerializedName("HTTPHeaders")
  private List<HTTPHeaderForListRevisionsOutput> htTPHeaders = null;

  @SerializedName("Path")
  private String path = null;

  @SerializedName("Port")
  private Integer port = null;

  @SerializedName("Scheme")
  private String scheme = null;

  public HTTPGetForListRevisionsOutput htTPHeaders(List<HTTPHeaderForListRevisionsOutput> htTPHeaders) {
    this.htTPHeaders = htTPHeaders;
    return this;
  }

  public HTTPGetForListRevisionsOutput addHtTPHeadersItem(HTTPHeaderForListRevisionsOutput htTPHeadersItem) {
    if (this.htTPHeaders == null) {
      this.htTPHeaders = new ArrayList<HTTPHeaderForListRevisionsOutput>();
    }
    this.htTPHeaders.add(htTPHeadersItem);
    return this;
  }

   /**
   * Get htTPHeaders
   * @return htTPHeaders
  **/
  @Valid
  @Schema(description = "")
  public List<HTTPHeaderForListRevisionsOutput> getHtTPHeaders() {
    return htTPHeaders;
  }

  public void setHtTPHeaders(List<HTTPHeaderForListRevisionsOutput> htTPHeaders) {
    this.htTPHeaders = htTPHeaders;
  }

  public HTTPGetForListRevisionsOutput path(String path) {
    this.path = path;
    return this;
  }

   /**
   * Get path
   * @return path
  **/
  @Schema(description = "")
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }

  public HTTPGetForListRevisionsOutput port(Integer port) {
    this.port = port;
    return this;
  }

   /**
   * Get port
   * @return port
  **/
  @Schema(description = "")
  public Integer getPort() {
    return port;
  }

  public void setPort(Integer port) {
    this.port = port;
  }

  public HTTPGetForListRevisionsOutput scheme(String scheme) {
    this.scheme = scheme;
    return this;
  }

   /**
   * Get scheme
   * @return scheme
  **/
  @Schema(description = "")
  public String getScheme() {
    return scheme;
  }

  public void setScheme(String scheme) {
    this.scheme = scheme;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HTTPGetForListRevisionsOutput htTPGetForListRevisionsOutput = (HTTPGetForListRevisionsOutput) o;
    return Objects.equals(this.htTPHeaders, htTPGetForListRevisionsOutput.htTPHeaders) &&
        Objects.equals(this.path, htTPGetForListRevisionsOutput.path) &&
        Objects.equals(this.port, htTPGetForListRevisionsOutput.port) &&
        Objects.equals(this.scheme, htTPGetForListRevisionsOutput.scheme);
  }

  @Override
  public int hashCode() {
    return Objects.hash(htTPHeaders, path, port, scheme);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HTTPGetForListRevisionsOutput {\n");
    
    sb.append("    htTPHeaders: ").append(toIndentedString(htTPHeaders)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    scheme: ").append(toIndentedString(scheme)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
