/*
 * rds_mssql
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.rdsmssql.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * InstanceParameterForDescribeDBInstanceParametersOutput
 */


public class InstanceParameterForDescribeDBInstanceParametersOutput {
  @SerializedName("CheckingCode")
  private String checkingCode = null;

  @SerializedName("ForceModify")
  private Boolean forceModify = null;

  @SerializedName("ForceRestart")
  private Boolean forceRestart = null;

  @SerializedName("ParameterDefaultValue")
  private String parameterDefaultValue = null;

  @SerializedName("ParameterDescription")
  private String parameterDescription = null;

  @SerializedName("ParameterName")
  private String parameterName = null;

  @SerializedName("ParameterType")
  private String parameterType = null;

  @SerializedName("ParameterValue")
  private String parameterValue = null;

  public InstanceParameterForDescribeDBInstanceParametersOutput checkingCode(String checkingCode) {
    this.checkingCode = checkingCode;
    return this;
  }

   /**
   * Get checkingCode
   * @return checkingCode
  **/
  @Schema(description = "")
  public String getCheckingCode() {
    return checkingCode;
  }

  public void setCheckingCode(String checkingCode) {
    this.checkingCode = checkingCode;
  }

  public InstanceParameterForDescribeDBInstanceParametersOutput forceModify(Boolean forceModify) {
    this.forceModify = forceModify;
    return this;
  }

   /**
   * Get forceModify
   * @return forceModify
  **/
  @Schema(description = "")
  public Boolean isForceModify() {
    return forceModify;
  }

  public void setForceModify(Boolean forceModify) {
    this.forceModify = forceModify;
  }

  public InstanceParameterForDescribeDBInstanceParametersOutput forceRestart(Boolean forceRestart) {
    this.forceRestart = forceRestart;
    return this;
  }

   /**
   * Get forceRestart
   * @return forceRestart
  **/
  @Schema(description = "")
  public Boolean isForceRestart() {
    return forceRestart;
  }

  public void setForceRestart(Boolean forceRestart) {
    this.forceRestart = forceRestart;
  }

  public InstanceParameterForDescribeDBInstanceParametersOutput parameterDefaultValue(String parameterDefaultValue) {
    this.parameterDefaultValue = parameterDefaultValue;
    return this;
  }

   /**
   * Get parameterDefaultValue
   * @return parameterDefaultValue
  **/
  @Schema(description = "")
  public String getParameterDefaultValue() {
    return parameterDefaultValue;
  }

  public void setParameterDefaultValue(String parameterDefaultValue) {
    this.parameterDefaultValue = parameterDefaultValue;
  }

  public InstanceParameterForDescribeDBInstanceParametersOutput parameterDescription(String parameterDescription) {
    this.parameterDescription = parameterDescription;
    return this;
  }

   /**
   * Get parameterDescription
   * @return parameterDescription
  **/
  @Schema(description = "")
  public String getParameterDescription() {
    return parameterDescription;
  }

  public void setParameterDescription(String parameterDescription) {
    this.parameterDescription = parameterDescription;
  }

  public InstanceParameterForDescribeDBInstanceParametersOutput parameterName(String parameterName) {
    this.parameterName = parameterName;
    return this;
  }

   /**
   * Get parameterName
   * @return parameterName
  **/
  @Schema(description = "")
  public String getParameterName() {
    return parameterName;
  }

  public void setParameterName(String parameterName) {
    this.parameterName = parameterName;
  }

  public InstanceParameterForDescribeDBInstanceParametersOutput parameterType(String parameterType) {
    this.parameterType = parameterType;
    return this;
  }

   /**
   * Get parameterType
   * @return parameterType
  **/
  @Schema(description = "")
  public String getParameterType() {
    return parameterType;
  }

  public void setParameterType(String parameterType) {
    this.parameterType = parameterType;
  }

  public InstanceParameterForDescribeDBInstanceParametersOutput parameterValue(String parameterValue) {
    this.parameterValue = parameterValue;
    return this;
  }

   /**
   * Get parameterValue
   * @return parameterValue
  **/
  @Schema(description = "")
  public String getParameterValue() {
    return parameterValue;
  }

  public void setParameterValue(String parameterValue) {
    this.parameterValue = parameterValue;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstanceParameterForDescribeDBInstanceParametersOutput instanceParameterForDescribeDBInstanceParametersOutput = (InstanceParameterForDescribeDBInstanceParametersOutput) o;
    return Objects.equals(this.checkingCode, instanceParameterForDescribeDBInstanceParametersOutput.checkingCode) &&
        Objects.equals(this.forceModify, instanceParameterForDescribeDBInstanceParametersOutput.forceModify) &&
        Objects.equals(this.forceRestart, instanceParameterForDescribeDBInstanceParametersOutput.forceRestart) &&
        Objects.equals(this.parameterDefaultValue, instanceParameterForDescribeDBInstanceParametersOutput.parameterDefaultValue) &&
        Objects.equals(this.parameterDescription, instanceParameterForDescribeDBInstanceParametersOutput.parameterDescription) &&
        Objects.equals(this.parameterName, instanceParameterForDescribeDBInstanceParametersOutput.parameterName) &&
        Objects.equals(this.parameterType, instanceParameterForDescribeDBInstanceParametersOutput.parameterType) &&
        Objects.equals(this.parameterValue, instanceParameterForDescribeDBInstanceParametersOutput.parameterValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(checkingCode, forceModify, forceRestart, parameterDefaultValue, parameterDescription, parameterName, parameterType, parameterValue);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstanceParameterForDescribeDBInstanceParametersOutput {\n");
    
    sb.append("    checkingCode: ").append(toIndentedString(checkingCode)).append("\n");
    sb.append("    forceModify: ").append(toIndentedString(forceModify)).append("\n");
    sb.append("    forceRestart: ").append(toIndentedString(forceRestart)).append("\n");
    sb.append("    parameterDefaultValue: ").append(toIndentedString(parameterDefaultValue)).append("\n");
    sb.append("    parameterDescription: ").append(toIndentedString(parameterDescription)).append("\n");
    sb.append("    parameterName: ").append(toIndentedString(parameterName)).append("\n");
    sb.append("    parameterType: ").append(toIndentedString(parameterType)).append("\n");
    sb.append("    parameterValue: ").append(toIndentedString(parameterValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
