/*
 * rds_mssql
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.rdsmssql.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.rdsmssql.model.DatabaseForRestoreToExistedInstanceInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * RestoreToExistedInstanceRequest
 */



public class RestoreToExistedInstanceRequest {
  @SerializedName("BackupId")
  private String backupId = null;

  @SerializedName("Databases")
  private List<DatabaseForRestoreToExistedInstanceInput> databases = null;

  @SerializedName("RestoreTime")
  private String restoreTime = null;

  @SerializedName("SourceDBInstanceId")
  private String sourceDBInstanceId = null;

  @SerializedName("TargetDBInstanceId")
  private String targetDBInstanceId = null;

  public RestoreToExistedInstanceRequest backupId(String backupId) {
    this.backupId = backupId;
    return this;
  }

   /**
   * Get backupId
   * @return backupId
  **/
  @Schema(description = "")
  public String getBackupId() {
    return backupId;
  }

  public void setBackupId(String backupId) {
    this.backupId = backupId;
  }

  public RestoreToExistedInstanceRequest databases(List<DatabaseForRestoreToExistedInstanceInput> databases) {
    this.databases = databases;
    return this;
  }

  public RestoreToExistedInstanceRequest addDatabasesItem(DatabaseForRestoreToExistedInstanceInput databasesItem) {
    if (this.databases == null) {
      this.databases = new ArrayList<DatabaseForRestoreToExistedInstanceInput>();
    }
    this.databases.add(databasesItem);
    return this;
  }

   /**
   * Get databases
   * @return databases
  **/
  @Valid
  @Schema(description = "")
  public List<DatabaseForRestoreToExistedInstanceInput> getDatabases() {
    return databases;
  }

  public void setDatabases(List<DatabaseForRestoreToExistedInstanceInput> databases) {
    this.databases = databases;
  }

  public RestoreToExistedInstanceRequest restoreTime(String restoreTime) {
    this.restoreTime = restoreTime;
    return this;
  }

   /**
   * Get restoreTime
   * @return restoreTime
  **/
  @Schema(description = "")
  public String getRestoreTime() {
    return restoreTime;
  }

  public void setRestoreTime(String restoreTime) {
    this.restoreTime = restoreTime;
  }

  public RestoreToExistedInstanceRequest sourceDBInstanceId(String sourceDBInstanceId) {
    this.sourceDBInstanceId = sourceDBInstanceId;
    return this;
  }

   /**
   * Get sourceDBInstanceId
   * @return sourceDBInstanceId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getSourceDBInstanceId() {
    return sourceDBInstanceId;
  }

  public void setSourceDBInstanceId(String sourceDBInstanceId) {
    this.sourceDBInstanceId = sourceDBInstanceId;
  }

  public RestoreToExistedInstanceRequest targetDBInstanceId(String targetDBInstanceId) {
    this.targetDBInstanceId = targetDBInstanceId;
    return this;
  }

   /**
   * Get targetDBInstanceId
   * @return targetDBInstanceId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getTargetDBInstanceId() {
    return targetDBInstanceId;
  }

  public void setTargetDBInstanceId(String targetDBInstanceId) {
    this.targetDBInstanceId = targetDBInstanceId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RestoreToExistedInstanceRequest restoreToExistedInstanceRequest = (RestoreToExistedInstanceRequest) o;
    return Objects.equals(this.backupId, restoreToExistedInstanceRequest.backupId) &&
        Objects.equals(this.databases, restoreToExistedInstanceRequest.databases) &&
        Objects.equals(this.restoreTime, restoreToExistedInstanceRequest.restoreTime) &&
        Objects.equals(this.sourceDBInstanceId, restoreToExistedInstanceRequest.sourceDBInstanceId) &&
        Objects.equals(this.targetDBInstanceId, restoreToExistedInstanceRequest.targetDBInstanceId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backupId, databases, restoreTime, sourceDBInstanceId, targetDBInstanceId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RestoreToExistedInstanceRequest {\n");
    
    sb.append("    backupId: ").append(toIndentedString(backupId)).append("\n");
    sb.append("    databases: ").append(toIndentedString(databases)).append("\n");
    sb.append("    restoreTime: ").append(toIndentedString(restoreTime)).append("\n");
    sb.append("    sourceDBInstanceId: ").append(toIndentedString(sourceDBInstanceId)).append("\n");
    sb.append("    targetDBInstanceId: ").append(toIndentedString(targetDBInstanceId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
