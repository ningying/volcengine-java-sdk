/*
 * rds_mssql
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.rdsmssql.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.rdsmssql.model.TagForDescribeDBInstanceDetailOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * BasicInfoForDescribeDBInstanceDetailOutput
 */


public class BasicInfoForDescribeDBInstanceDetailOutput {
  @SerializedName("BackupUse")
  private Float backupUse = null;

  @SerializedName("CreateTime")
  private String createTime = null;

  @SerializedName("DBEngineVersion")
  private String dbEngineVersion = null;

  @SerializedName("InnerVersion")
  private String innerVersion = null;

  @SerializedName("InstanceId")
  private String instanceId = null;

  @SerializedName("InstanceName")
  private String instanceName = null;

  @SerializedName("InstanceStatus")
  private String instanceStatus = null;

  @SerializedName("InstanceType")
  private String instanceType = null;

  @SerializedName("Memory")
  private Integer memory = null;

  @SerializedName("NodeSpec")
  private String nodeSpec = null;

  @SerializedName("PrimaryInstanceId")
  private String primaryInstanceId = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("ReadOnlyNumber")
  private Integer readOnlyNumber = null;

  @SerializedName("RegionId")
  private String regionId = null;

  @SerializedName("ServerCollation")
  private String serverCollation = null;

  @SerializedName("SlowQueryEnable")
  private Boolean slowQueryEnable = null;

  @SerializedName("SlowQueryTime")
  private String slowQueryTime = null;

  @SerializedName("StorageSpace")
  private Integer storageSpace = null;

  @SerializedName("StorageType")
  private String storageType = null;

  @SerializedName("StorageUse")
  private Float storageUse = null;

  @SerializedName("SubnetId")
  private String subnetId = null;

  @SerializedName("Tags")
  private List<TagForDescribeDBInstanceDetailOutput> tags = null;

  @SerializedName("TimeZone")
  private String timeZone = null;

  @SerializedName("UpdateTime")
  private String updateTime = null;

  @SerializedName("VCPU")
  private Integer VCPU = null;

  @SerializedName("VpcId")
  private String vpcId = null;

  @SerializedName("ZoneId")
  private String zoneId = null;

  public BasicInfoForDescribeDBInstanceDetailOutput backupUse(Float backupUse) {
    this.backupUse = backupUse;
    return this;
  }

   /**
   * Get backupUse
   * @return backupUse
  **/
  @Schema(description = "")
  public Float getBackupUse() {
    return backupUse;
  }

  public void setBackupUse(Float backupUse) {
    this.backupUse = backupUse;
  }

  public BasicInfoForDescribeDBInstanceDetailOutput createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @Schema(description = "")
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }

  public BasicInfoForDescribeDBInstanceDetailOutput dbEngineVersion(String dbEngineVersion) {
    this.dbEngineVersion = dbEngineVersion;
    return this;
  }

   /**
   * Get dbEngineVersion
   * @return dbEngineVersion
  **/
  @Schema(description = "")
  public String getDbEngineVersion() {
    return dbEngineVersion;
  }

  public void setDbEngineVersion(String dbEngineVersion) {
    this.dbEngineVersion = dbEngineVersion;
  }

  public BasicInfoForDescribeDBInstanceDetailOutput innerVersion(String innerVersion) {
    this.innerVersion = innerVersion;
    return this;
  }

   /**
   * Get innerVersion
   * @return innerVersion
  **/
  @Schema(description = "")
  public String getInnerVersion() {
    return innerVersion;
  }

  public void setInnerVersion(String innerVersion) {
    this.innerVersion = innerVersion;
  }

  public BasicInfoForDescribeDBInstanceDetailOutput instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * Get instanceId
   * @return instanceId
  **/
  @Schema(description = "")
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }

  public BasicInfoForDescribeDBInstanceDetailOutput instanceName(String instanceName) {
    this.instanceName = instanceName;
    return this;
  }

   /**
   * Get instanceName
   * @return instanceName
  **/
  @Schema(description = "")
  public String getInstanceName() {
    return instanceName;
  }

  public void setInstanceName(String instanceName) {
    this.instanceName = instanceName;
  }

  public BasicInfoForDescribeDBInstanceDetailOutput instanceStatus(String instanceStatus) {
    this.instanceStatus = instanceStatus;
    return this;
  }

   /**
   * Get instanceStatus
   * @return instanceStatus
  **/
  @Schema(description = "")
  public String getInstanceStatus() {
    return instanceStatus;
  }

  public void setInstanceStatus(String instanceStatus) {
    this.instanceStatus = instanceStatus;
  }

  public BasicInfoForDescribeDBInstanceDetailOutput instanceType(String instanceType) {
    this.instanceType = instanceType;
    return this;
  }

   /**
   * Get instanceType
   * @return instanceType
  **/
  @Schema(description = "")
  public String getInstanceType() {
    return instanceType;
  }

  public void setInstanceType(String instanceType) {
    this.instanceType = instanceType;
  }

  public BasicInfoForDescribeDBInstanceDetailOutput memory(Integer memory) {
    this.memory = memory;
    return this;
  }

   /**
   * Get memory
   * @return memory
  **/
  @Schema(description = "")
  public Integer getMemory() {
    return memory;
  }

  public void setMemory(Integer memory) {
    this.memory = memory;
  }

  public BasicInfoForDescribeDBInstanceDetailOutput nodeSpec(String nodeSpec) {
    this.nodeSpec = nodeSpec;
    return this;
  }

   /**
   * Get nodeSpec
   * @return nodeSpec
  **/
  @Schema(description = "")
  public String getNodeSpec() {
    return nodeSpec;
  }

  public void setNodeSpec(String nodeSpec) {
    this.nodeSpec = nodeSpec;
  }

  public BasicInfoForDescribeDBInstanceDetailOutput primaryInstanceId(String primaryInstanceId) {
    this.primaryInstanceId = primaryInstanceId;
    return this;
  }

   /**
   * Get primaryInstanceId
   * @return primaryInstanceId
  **/
  @Schema(description = "")
  public String getPrimaryInstanceId() {
    return primaryInstanceId;
  }

  public void setPrimaryInstanceId(String primaryInstanceId) {
    this.primaryInstanceId = primaryInstanceId;
  }

  public BasicInfoForDescribeDBInstanceDetailOutput projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public BasicInfoForDescribeDBInstanceDetailOutput readOnlyNumber(Integer readOnlyNumber) {
    this.readOnlyNumber = readOnlyNumber;
    return this;
  }

   /**
   * Get readOnlyNumber
   * @return readOnlyNumber
  **/
  @Schema(description = "")
  public Integer getReadOnlyNumber() {
    return readOnlyNumber;
  }

  public void setReadOnlyNumber(Integer readOnlyNumber) {
    this.readOnlyNumber = readOnlyNumber;
  }

  public BasicInfoForDescribeDBInstanceDetailOutput regionId(String regionId) {
    this.regionId = regionId;
    return this;
  }

   /**
   * Get regionId
   * @return regionId
  **/
  @Schema(description = "")
  public String getRegionId() {
    return regionId;
  }

  public void setRegionId(String regionId) {
    this.regionId = regionId;
  }

  public BasicInfoForDescribeDBInstanceDetailOutput serverCollation(String serverCollation) {
    this.serverCollation = serverCollation;
    return this;
  }

   /**
   * Get serverCollation
   * @return serverCollation
  **/
  @Schema(description = "")
  public String getServerCollation() {
    return serverCollation;
  }

  public void setServerCollation(String serverCollation) {
    this.serverCollation = serverCollation;
  }

  public BasicInfoForDescribeDBInstanceDetailOutput slowQueryEnable(Boolean slowQueryEnable) {
    this.slowQueryEnable = slowQueryEnable;
    return this;
  }

   /**
   * Get slowQueryEnable
   * @return slowQueryEnable
  **/
  @Schema(description = "")
  public Boolean isSlowQueryEnable() {
    return slowQueryEnable;
  }

  public void setSlowQueryEnable(Boolean slowQueryEnable) {
    this.slowQueryEnable = slowQueryEnable;
  }

  public BasicInfoForDescribeDBInstanceDetailOutput slowQueryTime(String slowQueryTime) {
    this.slowQueryTime = slowQueryTime;
    return this;
  }

   /**
   * Get slowQueryTime
   * @return slowQueryTime
  **/
  @Schema(description = "")
  public String getSlowQueryTime() {
    return slowQueryTime;
  }

  public void setSlowQueryTime(String slowQueryTime) {
    this.slowQueryTime = slowQueryTime;
  }

  public BasicInfoForDescribeDBInstanceDetailOutput storageSpace(Integer storageSpace) {
    this.storageSpace = storageSpace;
    return this;
  }

   /**
   * Get storageSpace
   * @return storageSpace
  **/
  @Schema(description = "")
  public Integer getStorageSpace() {
    return storageSpace;
  }

  public void setStorageSpace(Integer storageSpace) {
    this.storageSpace = storageSpace;
  }

  public BasicInfoForDescribeDBInstanceDetailOutput storageType(String storageType) {
    this.storageType = storageType;
    return this;
  }

   /**
   * Get storageType
   * @return storageType
  **/
  @Schema(description = "")
  public String getStorageType() {
    return storageType;
  }

  public void setStorageType(String storageType) {
    this.storageType = storageType;
  }

  public BasicInfoForDescribeDBInstanceDetailOutput storageUse(Float storageUse) {
    this.storageUse = storageUse;
    return this;
  }

   /**
   * Get storageUse
   * @return storageUse
  **/
  @Schema(description = "")
  public Float getStorageUse() {
    return storageUse;
  }

  public void setStorageUse(Float storageUse) {
    this.storageUse = storageUse;
  }

  public BasicInfoForDescribeDBInstanceDetailOutput subnetId(String subnetId) {
    this.subnetId = subnetId;
    return this;
  }

   /**
   * Get subnetId
   * @return subnetId
  **/
  @Schema(description = "")
  public String getSubnetId() {
    return subnetId;
  }

  public void setSubnetId(String subnetId) {
    this.subnetId = subnetId;
  }

  public BasicInfoForDescribeDBInstanceDetailOutput tags(List<TagForDescribeDBInstanceDetailOutput> tags) {
    this.tags = tags;
    return this;
  }

  public BasicInfoForDescribeDBInstanceDetailOutput addTagsItem(TagForDescribeDBInstanceDetailOutput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForDescribeDBInstanceDetailOutput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForDescribeDBInstanceDetailOutput> getTags() {
    return tags;
  }

  public void setTags(List<TagForDescribeDBInstanceDetailOutput> tags) {
    this.tags = tags;
  }

  public BasicInfoForDescribeDBInstanceDetailOutput timeZone(String timeZone) {
    this.timeZone = timeZone;
    return this;
  }

   /**
   * Get timeZone
   * @return timeZone
  **/
  @Schema(description = "")
  public String getTimeZone() {
    return timeZone;
  }

  public void setTimeZone(String timeZone) {
    this.timeZone = timeZone;
  }

  public BasicInfoForDescribeDBInstanceDetailOutput updateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @Schema(description = "")
  public String getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }

  public BasicInfoForDescribeDBInstanceDetailOutput VCPU(Integer VCPU) {
    this.VCPU = VCPU;
    return this;
  }

   /**
   * Get VCPU
   * @return VCPU
  **/
  @Schema(description = "")
  public Integer getVCPU() {
    return VCPU;
  }

  public void setVCPU(Integer VCPU) {
    this.VCPU = VCPU;
  }

  public BasicInfoForDescribeDBInstanceDetailOutput vpcId(String vpcId) {
    this.vpcId = vpcId;
    return this;
  }

   /**
   * Get vpcId
   * @return vpcId
  **/
  @Schema(description = "")
  public String getVpcId() {
    return vpcId;
  }

  public void setVpcId(String vpcId) {
    this.vpcId = vpcId;
  }

  public BasicInfoForDescribeDBInstanceDetailOutput zoneId(String zoneId) {
    this.zoneId = zoneId;
    return this;
  }

   /**
   * Get zoneId
   * @return zoneId
  **/
  @Schema(description = "")
  public String getZoneId() {
    return zoneId;
  }

  public void setZoneId(String zoneId) {
    this.zoneId = zoneId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BasicInfoForDescribeDBInstanceDetailOutput basicInfoForDescribeDBInstanceDetailOutput = (BasicInfoForDescribeDBInstanceDetailOutput) o;
    return Objects.equals(this.backupUse, basicInfoForDescribeDBInstanceDetailOutput.backupUse) &&
        Objects.equals(this.createTime, basicInfoForDescribeDBInstanceDetailOutput.createTime) &&
        Objects.equals(this.dbEngineVersion, basicInfoForDescribeDBInstanceDetailOutput.dbEngineVersion) &&
        Objects.equals(this.innerVersion, basicInfoForDescribeDBInstanceDetailOutput.innerVersion) &&
        Objects.equals(this.instanceId, basicInfoForDescribeDBInstanceDetailOutput.instanceId) &&
        Objects.equals(this.instanceName, basicInfoForDescribeDBInstanceDetailOutput.instanceName) &&
        Objects.equals(this.instanceStatus, basicInfoForDescribeDBInstanceDetailOutput.instanceStatus) &&
        Objects.equals(this.instanceType, basicInfoForDescribeDBInstanceDetailOutput.instanceType) &&
        Objects.equals(this.memory, basicInfoForDescribeDBInstanceDetailOutput.memory) &&
        Objects.equals(this.nodeSpec, basicInfoForDescribeDBInstanceDetailOutput.nodeSpec) &&
        Objects.equals(this.primaryInstanceId, basicInfoForDescribeDBInstanceDetailOutput.primaryInstanceId) &&
        Objects.equals(this.projectName, basicInfoForDescribeDBInstanceDetailOutput.projectName) &&
        Objects.equals(this.readOnlyNumber, basicInfoForDescribeDBInstanceDetailOutput.readOnlyNumber) &&
        Objects.equals(this.regionId, basicInfoForDescribeDBInstanceDetailOutput.regionId) &&
        Objects.equals(this.serverCollation, basicInfoForDescribeDBInstanceDetailOutput.serverCollation) &&
        Objects.equals(this.slowQueryEnable, basicInfoForDescribeDBInstanceDetailOutput.slowQueryEnable) &&
        Objects.equals(this.slowQueryTime, basicInfoForDescribeDBInstanceDetailOutput.slowQueryTime) &&
        Objects.equals(this.storageSpace, basicInfoForDescribeDBInstanceDetailOutput.storageSpace) &&
        Objects.equals(this.storageType, basicInfoForDescribeDBInstanceDetailOutput.storageType) &&
        Objects.equals(this.storageUse, basicInfoForDescribeDBInstanceDetailOutput.storageUse) &&
        Objects.equals(this.subnetId, basicInfoForDescribeDBInstanceDetailOutput.subnetId) &&
        Objects.equals(this.tags, basicInfoForDescribeDBInstanceDetailOutput.tags) &&
        Objects.equals(this.timeZone, basicInfoForDescribeDBInstanceDetailOutput.timeZone) &&
        Objects.equals(this.updateTime, basicInfoForDescribeDBInstanceDetailOutput.updateTime) &&
        Objects.equals(this.VCPU, basicInfoForDescribeDBInstanceDetailOutput.VCPU) &&
        Objects.equals(this.vpcId, basicInfoForDescribeDBInstanceDetailOutput.vpcId) &&
        Objects.equals(this.zoneId, basicInfoForDescribeDBInstanceDetailOutput.zoneId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backupUse, createTime, dbEngineVersion, innerVersion, instanceId, instanceName, instanceStatus, instanceType, memory, nodeSpec, primaryInstanceId, projectName, readOnlyNumber, regionId, serverCollation, slowQueryEnable, slowQueryTime, storageSpace, storageType, storageUse, subnetId, tags, timeZone, updateTime, VCPU, vpcId, zoneId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BasicInfoForDescribeDBInstanceDetailOutput {\n");
    
    sb.append("    backupUse: ").append(toIndentedString(backupUse)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    dbEngineVersion: ").append(toIndentedString(dbEngineVersion)).append("\n");
    sb.append("    innerVersion: ").append(toIndentedString(innerVersion)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    instanceName: ").append(toIndentedString(instanceName)).append("\n");
    sb.append("    instanceStatus: ").append(toIndentedString(instanceStatus)).append("\n");
    sb.append("    instanceType: ").append(toIndentedString(instanceType)).append("\n");
    sb.append("    memory: ").append(toIndentedString(memory)).append("\n");
    sb.append("    nodeSpec: ").append(toIndentedString(nodeSpec)).append("\n");
    sb.append("    primaryInstanceId: ").append(toIndentedString(primaryInstanceId)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    readOnlyNumber: ").append(toIndentedString(readOnlyNumber)).append("\n");
    sb.append("    regionId: ").append(toIndentedString(regionId)).append("\n");
    sb.append("    serverCollation: ").append(toIndentedString(serverCollation)).append("\n");
    sb.append("    slowQueryEnable: ").append(toIndentedString(slowQueryEnable)).append("\n");
    sb.append("    slowQueryTime: ").append(toIndentedString(slowQueryTime)).append("\n");
    sb.append("    storageSpace: ").append(toIndentedString(storageSpace)).append("\n");
    sb.append("    storageType: ").append(toIndentedString(storageType)).append("\n");
    sb.append("    storageUse: ").append(toIndentedString(storageUse)).append("\n");
    sb.append("    subnetId: ").append(toIndentedString(subnetId)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    timeZone: ").append(toIndentedString(timeZone)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    VCPU: ").append(toIndentedString(VCPU)).append("\n");
    sb.append("    vpcId: ").append(toIndentedString(vpcId)).append("\n");
    sb.append("    zoneId: ").append(toIndentedString(zoneId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
