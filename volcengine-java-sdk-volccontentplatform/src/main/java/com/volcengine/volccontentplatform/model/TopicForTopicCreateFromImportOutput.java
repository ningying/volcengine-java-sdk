/*
 * volc_content_platform
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.volccontentplatform.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * TopicForTopicCreateFromImportOutput
 */



public class TopicForTopicCreateFromImportOutput {
  @SerializedName("CoverImgUrl")
  private String coverImgUrl = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("ExtInfo")
  private String extInfo = null;

  @SerializedName("Id")
  private String id = null;

  @SerializedName("LandingPageUrl")
  private String landingPageUrl = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("OpenId")
  private String openId = null;

  @SerializedName("PublishTime")
  private Long publishTime = null;

  @SerializedName("ShareImgUrl")
  private String shareImgUrl = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("TopicSource")
  private String topicSource = null;

  public TopicForTopicCreateFromImportOutput coverImgUrl(String coverImgUrl) {
    this.coverImgUrl = coverImgUrl;
    return this;
  }

   /**
   * Get coverImgUrl
   * @return coverImgUrl
  **/
  @Schema(description = "")
  public String getCoverImgUrl() {
    return coverImgUrl;
  }

  public void setCoverImgUrl(String coverImgUrl) {
    this.coverImgUrl = coverImgUrl;
  }

  public TopicForTopicCreateFromImportOutput description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public TopicForTopicCreateFromImportOutput extInfo(String extInfo) {
    this.extInfo = extInfo;
    return this;
  }

   /**
   * Get extInfo
   * @return extInfo
  **/
  @Schema(description = "")
  public String getExtInfo() {
    return extInfo;
  }

  public void setExtInfo(String extInfo) {
    this.extInfo = extInfo;
  }

  public TopicForTopicCreateFromImportOutput id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public TopicForTopicCreateFromImportOutput landingPageUrl(String landingPageUrl) {
    this.landingPageUrl = landingPageUrl;
    return this;
  }

   /**
   * Get landingPageUrl
   * @return landingPageUrl
  **/
  @Schema(description = "")
  public String getLandingPageUrl() {
    return landingPageUrl;
  }

  public void setLandingPageUrl(String landingPageUrl) {
    this.landingPageUrl = landingPageUrl;
  }

  public TopicForTopicCreateFromImportOutput name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public TopicForTopicCreateFromImportOutput openId(String openId) {
    this.openId = openId;
    return this;
  }

   /**
   * Get openId
   * @return openId
  **/
  @Schema(description = "")
  public String getOpenId() {
    return openId;
  }

  public void setOpenId(String openId) {
    this.openId = openId;
  }

  public TopicForTopicCreateFromImportOutput publishTime(Long publishTime) {
    this.publishTime = publishTime;
    return this;
  }

   /**
   * Get publishTime
   * @return publishTime
  **/
  @Schema(description = "")
  public Long getPublishTime() {
    return publishTime;
  }

  public void setPublishTime(Long publishTime) {
    this.publishTime = publishTime;
  }

  public TopicForTopicCreateFromImportOutput shareImgUrl(String shareImgUrl) {
    this.shareImgUrl = shareImgUrl;
    return this;
  }

   /**
   * Get shareImgUrl
   * @return shareImgUrl
  **/
  @Schema(description = "")
  public String getShareImgUrl() {
    return shareImgUrl;
  }

  public void setShareImgUrl(String shareImgUrl) {
    this.shareImgUrl = shareImgUrl;
  }

  public TopicForTopicCreateFromImportOutput status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public TopicForTopicCreateFromImportOutput topicSource(String topicSource) {
    this.topicSource = topicSource;
    return this;
  }

   /**
   * Get topicSource
   * @return topicSource
  **/
  @Schema(description = "")
  public String getTopicSource() {
    return topicSource;
  }

  public void setTopicSource(String topicSource) {
    this.topicSource = topicSource;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TopicForTopicCreateFromImportOutput topicForTopicCreateFromImportOutput = (TopicForTopicCreateFromImportOutput) o;
    return Objects.equals(this.coverImgUrl, topicForTopicCreateFromImportOutput.coverImgUrl) &&
        Objects.equals(this.description, topicForTopicCreateFromImportOutput.description) &&
        Objects.equals(this.extInfo, topicForTopicCreateFromImportOutput.extInfo) &&
        Objects.equals(this.id, topicForTopicCreateFromImportOutput.id) &&
        Objects.equals(this.landingPageUrl, topicForTopicCreateFromImportOutput.landingPageUrl) &&
        Objects.equals(this.name, topicForTopicCreateFromImportOutput.name) &&
        Objects.equals(this.openId, topicForTopicCreateFromImportOutput.openId) &&
        Objects.equals(this.publishTime, topicForTopicCreateFromImportOutput.publishTime) &&
        Objects.equals(this.shareImgUrl, topicForTopicCreateFromImportOutput.shareImgUrl) &&
        Objects.equals(this.status, topicForTopicCreateFromImportOutput.status) &&
        Objects.equals(this.topicSource, topicForTopicCreateFromImportOutput.topicSource);
  }

  @Override
  public int hashCode() {
    return Objects.hash(coverImgUrl, description, extInfo, id, landingPageUrl, name, openId, publishTime, shareImgUrl, status, topicSource);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TopicForTopicCreateFromImportOutput {\n");
    
    sb.append("    coverImgUrl: ").append(toIndentedString(coverImgUrl)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    extInfo: ").append(toIndentedString(extInfo)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    landingPageUrl: ").append(toIndentedString(landingPageUrl)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    openId: ").append(toIndentedString(openId)).append("\n");
    sb.append("    publishTime: ").append(toIndentedString(publishTime)).append("\n");
    sb.append("    shareImgUrl: ").append(toIndentedString(shareImgUrl)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    topicSource: ").append(toIndentedString(topicSource)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
