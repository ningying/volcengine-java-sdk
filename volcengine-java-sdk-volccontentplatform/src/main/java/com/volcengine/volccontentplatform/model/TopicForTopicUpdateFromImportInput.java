/*
 * volc_content_platform
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.volccontentplatform.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.volccontentplatform.model.HierarchyTagForTopicUpdateFromImportInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * TopicForTopicUpdateFromImportInput
 */



public class TopicForTopicUpdateFromImportInput {
  @SerializedName("CoverImgUrl")
  private String coverImgUrl = null;

  @SerializedName("Desc")
  private String desc = null;

  @SerializedName("ExtInfo")
  private String extInfo = null;

  @SerializedName("HierarchyTags")
  private List<HierarchyTagForTopicUpdateFromImportInput> hierarchyTags = null;

  @SerializedName("Id")
  private Long id = null;

  @SerializedName("LandingPageUrl")
  private String landingPageUrl = null;

  @SerializedName("OpenId")
  private String openId = null;

  @SerializedName("PublishTime")
  private Long publishTime = null;

  @SerializedName("ShareImgUrl")
  private String shareImgUrl = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("TopicName")
  private String topicName = null;

  @SerializedName("TopicSource")
  private String topicSource = null;

  public TopicForTopicUpdateFromImportInput coverImgUrl(String coverImgUrl) {
    this.coverImgUrl = coverImgUrl;
    return this;
  }

   /**
   * Get coverImgUrl
   * @return coverImgUrl
  **/
  @Schema(description = "")
  public String getCoverImgUrl() {
    return coverImgUrl;
  }

  public void setCoverImgUrl(String coverImgUrl) {
    this.coverImgUrl = coverImgUrl;
  }

  public TopicForTopicUpdateFromImportInput desc(String desc) {
    this.desc = desc;
    return this;
  }

   /**
   * Get desc
   * @return desc
  **/
  @Schema(description = "")
  public String getDesc() {
    return desc;
  }

  public void setDesc(String desc) {
    this.desc = desc;
  }

  public TopicForTopicUpdateFromImportInput extInfo(String extInfo) {
    this.extInfo = extInfo;
    return this;
  }

   /**
   * Get extInfo
   * @return extInfo
  **/
  @Schema(description = "")
  public String getExtInfo() {
    return extInfo;
  }

  public void setExtInfo(String extInfo) {
    this.extInfo = extInfo;
  }

  public TopicForTopicUpdateFromImportInput hierarchyTags(List<HierarchyTagForTopicUpdateFromImportInput> hierarchyTags) {
    this.hierarchyTags = hierarchyTags;
    return this;
  }

  public TopicForTopicUpdateFromImportInput addHierarchyTagsItem(HierarchyTagForTopicUpdateFromImportInput hierarchyTagsItem) {
    if (this.hierarchyTags == null) {
      this.hierarchyTags = new ArrayList<HierarchyTagForTopicUpdateFromImportInput>();
    }
    this.hierarchyTags.add(hierarchyTagsItem);
    return this;
  }

   /**
   * Get hierarchyTags
   * @return hierarchyTags
  **/
  @Valid
  @Schema(description = "")
  public List<HierarchyTagForTopicUpdateFromImportInput> getHierarchyTags() {
    return hierarchyTags;
  }

  public void setHierarchyTags(List<HierarchyTagForTopicUpdateFromImportInput> hierarchyTags) {
    this.hierarchyTags = hierarchyTags;
  }

  public TopicForTopicUpdateFromImportInput id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public TopicForTopicUpdateFromImportInput landingPageUrl(String landingPageUrl) {
    this.landingPageUrl = landingPageUrl;
    return this;
  }

   /**
   * Get landingPageUrl
   * @return landingPageUrl
  **/
  @Schema(description = "")
  public String getLandingPageUrl() {
    return landingPageUrl;
  }

  public void setLandingPageUrl(String landingPageUrl) {
    this.landingPageUrl = landingPageUrl;
  }

  public TopicForTopicUpdateFromImportInput openId(String openId) {
    this.openId = openId;
    return this;
  }

   /**
   * Get openId
   * @return openId
  **/
  @Schema(description = "")
  public String getOpenId() {
    return openId;
  }

  public void setOpenId(String openId) {
    this.openId = openId;
  }

  public TopicForTopicUpdateFromImportInput publishTime(Long publishTime) {
    this.publishTime = publishTime;
    return this;
  }

   /**
   * Get publishTime
   * @return publishTime
  **/
  @Schema(description = "")
  public Long getPublishTime() {
    return publishTime;
  }

  public void setPublishTime(Long publishTime) {
    this.publishTime = publishTime;
  }

  public TopicForTopicUpdateFromImportInput shareImgUrl(String shareImgUrl) {
    this.shareImgUrl = shareImgUrl;
    return this;
  }

   /**
   * Get shareImgUrl
   * @return shareImgUrl
  **/
  @Schema(description = "")
  public String getShareImgUrl() {
    return shareImgUrl;
  }

  public void setShareImgUrl(String shareImgUrl) {
    this.shareImgUrl = shareImgUrl;
  }

  public TopicForTopicUpdateFromImportInput status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public TopicForTopicUpdateFromImportInput topicName(String topicName) {
    this.topicName = topicName;
    return this;
  }

   /**
   * Get topicName
   * @return topicName
  **/
  @Schema(description = "")
  public String getTopicName() {
    return topicName;
  }

  public void setTopicName(String topicName) {
    this.topicName = topicName;
  }

  public TopicForTopicUpdateFromImportInput topicSource(String topicSource) {
    this.topicSource = topicSource;
    return this;
  }

   /**
   * Get topicSource
   * @return topicSource
  **/
  @Schema(description = "")
  public String getTopicSource() {
    return topicSource;
  }

  public void setTopicSource(String topicSource) {
    this.topicSource = topicSource;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TopicForTopicUpdateFromImportInput topicForTopicUpdateFromImportInput = (TopicForTopicUpdateFromImportInput) o;
    return Objects.equals(this.coverImgUrl, topicForTopicUpdateFromImportInput.coverImgUrl) &&
        Objects.equals(this.desc, topicForTopicUpdateFromImportInput.desc) &&
        Objects.equals(this.extInfo, topicForTopicUpdateFromImportInput.extInfo) &&
        Objects.equals(this.hierarchyTags, topicForTopicUpdateFromImportInput.hierarchyTags) &&
        Objects.equals(this.id, topicForTopicUpdateFromImportInput.id) &&
        Objects.equals(this.landingPageUrl, topicForTopicUpdateFromImportInput.landingPageUrl) &&
        Objects.equals(this.openId, topicForTopicUpdateFromImportInput.openId) &&
        Objects.equals(this.publishTime, topicForTopicUpdateFromImportInput.publishTime) &&
        Objects.equals(this.shareImgUrl, topicForTopicUpdateFromImportInput.shareImgUrl) &&
        Objects.equals(this.status, topicForTopicUpdateFromImportInput.status) &&
        Objects.equals(this.topicName, topicForTopicUpdateFromImportInput.topicName) &&
        Objects.equals(this.topicSource, topicForTopicUpdateFromImportInput.topicSource);
  }

  @Override
  public int hashCode() {
    return Objects.hash(coverImgUrl, desc, extInfo, hierarchyTags, id, landingPageUrl, openId, publishTime, shareImgUrl, status, topicName, topicSource);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TopicForTopicUpdateFromImportInput {\n");
    
    sb.append("    coverImgUrl: ").append(toIndentedString(coverImgUrl)).append("\n");
    sb.append("    desc: ").append(toIndentedString(desc)).append("\n");
    sb.append("    extInfo: ").append(toIndentedString(extInfo)).append("\n");
    sb.append("    hierarchyTags: ").append(toIndentedString(hierarchyTags)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    landingPageUrl: ").append(toIndentedString(landingPageUrl)).append("\n");
    sb.append("    openId: ").append(toIndentedString(openId)).append("\n");
    sb.append("    publishTime: ").append(toIndentedString(publishTime)).append("\n");
    sb.append("    shareImgUrl: ").append(toIndentedString(shareImgUrl)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    topicName: ").append(toIndentedString(topicName)).append("\n");
    sb.append("    topicSource: ").append(toIndentedString(topicSource)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
