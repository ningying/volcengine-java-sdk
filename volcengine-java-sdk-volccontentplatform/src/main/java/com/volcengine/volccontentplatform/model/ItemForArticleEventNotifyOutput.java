/*
 * volc_content_platform
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.volccontentplatform.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ItemForArticleEventNotifyOutput
 */



public class ItemForArticleEventNotifyOutput {
  @SerializedName("ArticleId")
  private Long articleId = null;

  @SerializedName("EventDetail")
  private String eventDetail = null;

  @SerializedName("EventTime")
  private Long eventTime = null;

  @SerializedName("EventType")
  private String eventType = null;

  @SerializedName("GenerateType")
  private String generateType = null;

  @SerializedName("SubEventType")
  private String subEventType = null;

  public ItemForArticleEventNotifyOutput articleId(Long articleId) {
    this.articleId = articleId;
    return this;
  }

   /**
   * Get articleId
   * @return articleId
  **/
  @Schema(description = "")
  public Long getArticleId() {
    return articleId;
  }

  public void setArticleId(Long articleId) {
    this.articleId = articleId;
  }

  public ItemForArticleEventNotifyOutput eventDetail(String eventDetail) {
    this.eventDetail = eventDetail;
    return this;
  }

   /**
   * Get eventDetail
   * @return eventDetail
  **/
  @Schema(description = "")
  public String getEventDetail() {
    return eventDetail;
  }

  public void setEventDetail(String eventDetail) {
    this.eventDetail = eventDetail;
  }

  public ItemForArticleEventNotifyOutput eventTime(Long eventTime) {
    this.eventTime = eventTime;
    return this;
  }

   /**
   * Get eventTime
   * @return eventTime
  **/
  @Schema(description = "")
  public Long getEventTime() {
    return eventTime;
  }

  public void setEventTime(Long eventTime) {
    this.eventTime = eventTime;
  }

  public ItemForArticleEventNotifyOutput eventType(String eventType) {
    this.eventType = eventType;
    return this;
  }

   /**
   * Get eventType
   * @return eventType
  **/
  @Schema(description = "")
  public String getEventType() {
    return eventType;
  }

  public void setEventType(String eventType) {
    this.eventType = eventType;
  }

  public ItemForArticleEventNotifyOutput generateType(String generateType) {
    this.generateType = generateType;
    return this;
  }

   /**
   * Get generateType
   * @return generateType
  **/
  @Schema(description = "")
  public String getGenerateType() {
    return generateType;
  }

  public void setGenerateType(String generateType) {
    this.generateType = generateType;
  }

  public ItemForArticleEventNotifyOutput subEventType(String subEventType) {
    this.subEventType = subEventType;
    return this;
  }

   /**
   * Get subEventType
   * @return subEventType
  **/
  @Schema(description = "")
  public String getSubEventType() {
    return subEventType;
  }

  public void setSubEventType(String subEventType) {
    this.subEventType = subEventType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItemForArticleEventNotifyOutput itemForArticleEventNotifyOutput = (ItemForArticleEventNotifyOutput) o;
    return Objects.equals(this.articleId, itemForArticleEventNotifyOutput.articleId) &&
        Objects.equals(this.eventDetail, itemForArticleEventNotifyOutput.eventDetail) &&
        Objects.equals(this.eventTime, itemForArticleEventNotifyOutput.eventTime) &&
        Objects.equals(this.eventType, itemForArticleEventNotifyOutput.eventType) &&
        Objects.equals(this.generateType, itemForArticleEventNotifyOutput.generateType) &&
        Objects.equals(this.subEventType, itemForArticleEventNotifyOutput.subEventType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(articleId, eventDetail, eventTime, eventType, generateType, subEventType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItemForArticleEventNotifyOutput {\n");
    
    sb.append("    articleId: ").append(toIndentedString(articleId)).append("\n");
    sb.append("    eventDetail: ").append(toIndentedString(eventDetail)).append("\n");
    sb.append("    eventTime: ").append(toIndentedString(eventTime)).append("\n");
    sb.append("    eventType: ").append(toIndentedString(eventType)).append("\n");
    sb.append("    generateType: ").append(toIndentedString(generateType)).append("\n");
    sb.append("    subEventType: ").append(toIndentedString(subEventType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
