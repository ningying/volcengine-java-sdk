/*
 * redis
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.redis.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.redis.model.ConfigureNewNodeForIncreaseDBInstanceNodeNumberInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * IncreaseDBInstanceNodeNumberRequest
 */



public class IncreaseDBInstanceNodeNumberRequest {
  @SerializedName("ApplyImmediately")
  private Boolean applyImmediately = null;

  @SerializedName("BackupPointName")
  private String backupPointName = null;

  @SerializedName("ClientToken")
  private String clientToken = null;

  @SerializedName("ConfigureNewNodes")
  private List<ConfigureNewNodeForIncreaseDBInstanceNodeNumberInput> configureNewNodes = null;

  @SerializedName("CreateBackup")
  private Boolean createBackup = null;

  @SerializedName("InstanceId")
  private String instanceId = null;

  @SerializedName("NodesNumberToIncrease")
  private Integer nodesNumberToIncrease = null;

  public IncreaseDBInstanceNodeNumberRequest applyImmediately(Boolean applyImmediately) {
    this.applyImmediately = applyImmediately;
    return this;
  }

   /**
   * Get applyImmediately
   * @return applyImmediately
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Boolean isApplyImmediately() {
    return applyImmediately;
  }

  public void setApplyImmediately(Boolean applyImmediately) {
    this.applyImmediately = applyImmediately;
  }

  public IncreaseDBInstanceNodeNumberRequest backupPointName(String backupPointName) {
    this.backupPointName = backupPointName;
    return this;
  }

   /**
   * Get backupPointName
   * @return backupPointName
  **/
  @Schema(description = "")
  public String getBackupPointName() {
    return backupPointName;
  }

  public void setBackupPointName(String backupPointName) {
    this.backupPointName = backupPointName;
  }

  public IncreaseDBInstanceNodeNumberRequest clientToken(String clientToken) {
    this.clientToken = clientToken;
    return this;
  }

   /**
   * Get clientToken
   * @return clientToken
  **/
  @Schema(description = "")
  public String getClientToken() {
    return clientToken;
  }

  public void setClientToken(String clientToken) {
    this.clientToken = clientToken;
  }

  public IncreaseDBInstanceNodeNumberRequest configureNewNodes(List<ConfigureNewNodeForIncreaseDBInstanceNodeNumberInput> configureNewNodes) {
    this.configureNewNodes = configureNewNodes;
    return this;
  }

  public IncreaseDBInstanceNodeNumberRequest addConfigureNewNodesItem(ConfigureNewNodeForIncreaseDBInstanceNodeNumberInput configureNewNodesItem) {
    if (this.configureNewNodes == null) {
      this.configureNewNodes = new ArrayList<ConfigureNewNodeForIncreaseDBInstanceNodeNumberInput>();
    }
    this.configureNewNodes.add(configureNewNodesItem);
    return this;
  }

   /**
   * Get configureNewNodes
   * @return configureNewNodes
  **/
  @Valid
  @Schema(description = "")
  public List<ConfigureNewNodeForIncreaseDBInstanceNodeNumberInput> getConfigureNewNodes() {
    return configureNewNodes;
  }

  public void setConfigureNewNodes(List<ConfigureNewNodeForIncreaseDBInstanceNodeNumberInput> configureNewNodes) {
    this.configureNewNodes = configureNewNodes;
  }

  public IncreaseDBInstanceNodeNumberRequest createBackup(Boolean createBackup) {
    this.createBackup = createBackup;
    return this;
  }

   /**
   * Get createBackup
   * @return createBackup
  **/
  @Schema(description = "")
  public Boolean isCreateBackup() {
    return createBackup;
  }

  public void setCreateBackup(Boolean createBackup) {
    this.createBackup = createBackup;
  }

  public IncreaseDBInstanceNodeNumberRequest instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * Get instanceId
   * @return instanceId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }

  public IncreaseDBInstanceNodeNumberRequest nodesNumberToIncrease(Integer nodesNumberToIncrease) {
    this.nodesNumberToIncrease = nodesNumberToIncrease;
    return this;
  }

   /**
   * Get nodesNumberToIncrease
   * @return nodesNumberToIncrease
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Integer getNodesNumberToIncrease() {
    return nodesNumberToIncrease;
  }

  public void setNodesNumberToIncrease(Integer nodesNumberToIncrease) {
    this.nodesNumberToIncrease = nodesNumberToIncrease;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IncreaseDBInstanceNodeNumberRequest increaseDBInstanceNodeNumberRequest = (IncreaseDBInstanceNodeNumberRequest) o;
    return Objects.equals(this.applyImmediately, increaseDBInstanceNodeNumberRequest.applyImmediately) &&
        Objects.equals(this.backupPointName, increaseDBInstanceNodeNumberRequest.backupPointName) &&
        Objects.equals(this.clientToken, increaseDBInstanceNodeNumberRequest.clientToken) &&
        Objects.equals(this.configureNewNodes, increaseDBInstanceNodeNumberRequest.configureNewNodes) &&
        Objects.equals(this.createBackup, increaseDBInstanceNodeNumberRequest.createBackup) &&
        Objects.equals(this.instanceId, increaseDBInstanceNodeNumberRequest.instanceId) &&
        Objects.equals(this.nodesNumberToIncrease, increaseDBInstanceNodeNumberRequest.nodesNumberToIncrease);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applyImmediately, backupPointName, clientToken, configureNewNodes, createBackup, instanceId, nodesNumberToIncrease);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IncreaseDBInstanceNodeNumberRequest {\n");
    
    sb.append("    applyImmediately: ").append(toIndentedString(applyImmediately)).append("\n");
    sb.append("    backupPointName: ").append(toIndentedString(backupPointName)).append("\n");
    sb.append("    clientToken: ").append(toIndentedString(clientToken)).append("\n");
    sb.append("    configureNewNodes: ").append(toIndentedString(configureNewNodes)).append("\n");
    sb.append("    createBackup: ").append(toIndentedString(createBackup)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    nodesNumberToIncrease: ").append(toIndentedString(nodesNumberToIncrease)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
