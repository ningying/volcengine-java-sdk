/*
 * redis
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.redis.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.redis.model.NodesToRemoveForDecreaseDBInstanceNodeNumberInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DecreaseDBInstanceNodeNumberRequest
 */



public class DecreaseDBInstanceNodeNumberRequest {
  @SerializedName("ApplyImmediately")
  private Boolean applyImmediately = null;

  @SerializedName("BackupPointName")
  private String backupPointName = null;

  @SerializedName("ClientToken")
  private String clientToken = null;

  @SerializedName("CreateBackup")
  private Boolean createBackup = null;

  @SerializedName("InstanceId")
  private String instanceId = null;

  @SerializedName("NodesNumberToDecrease")
  private Integer nodesNumberToDecrease = null;

  @SerializedName("NodesToRemove")
  private List<NodesToRemoveForDecreaseDBInstanceNodeNumberInput> nodesToRemove = null;

  public DecreaseDBInstanceNodeNumberRequest applyImmediately(Boolean applyImmediately) {
    this.applyImmediately = applyImmediately;
    return this;
  }

   /**
   * Get applyImmediately
   * @return applyImmediately
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Boolean isApplyImmediately() {
    return applyImmediately;
  }

  public void setApplyImmediately(Boolean applyImmediately) {
    this.applyImmediately = applyImmediately;
  }

  public DecreaseDBInstanceNodeNumberRequest backupPointName(String backupPointName) {
    this.backupPointName = backupPointName;
    return this;
  }

   /**
   * Get backupPointName
   * @return backupPointName
  **/
  @Schema(description = "")
  public String getBackupPointName() {
    return backupPointName;
  }

  public void setBackupPointName(String backupPointName) {
    this.backupPointName = backupPointName;
  }

  public DecreaseDBInstanceNodeNumberRequest clientToken(String clientToken) {
    this.clientToken = clientToken;
    return this;
  }

   /**
   * Get clientToken
   * @return clientToken
  **/
  @Schema(description = "")
  public String getClientToken() {
    return clientToken;
  }

  public void setClientToken(String clientToken) {
    this.clientToken = clientToken;
  }

  public DecreaseDBInstanceNodeNumberRequest createBackup(Boolean createBackup) {
    this.createBackup = createBackup;
    return this;
  }

   /**
   * Get createBackup
   * @return createBackup
  **/
  @Schema(description = "")
  public Boolean isCreateBackup() {
    return createBackup;
  }

  public void setCreateBackup(Boolean createBackup) {
    this.createBackup = createBackup;
  }

  public DecreaseDBInstanceNodeNumberRequest instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * Get instanceId
   * @return instanceId
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }

  public DecreaseDBInstanceNodeNumberRequest nodesNumberToDecrease(Integer nodesNumberToDecrease) {
    this.nodesNumberToDecrease = nodesNumberToDecrease;
    return this;
  }

   /**
   * Get nodesNumberToDecrease
   * @return nodesNumberToDecrease
  **/
  @NotNull
  @Schema(required = true, description = "")
  public Integer getNodesNumberToDecrease() {
    return nodesNumberToDecrease;
  }

  public void setNodesNumberToDecrease(Integer nodesNumberToDecrease) {
    this.nodesNumberToDecrease = nodesNumberToDecrease;
  }

  public DecreaseDBInstanceNodeNumberRequest nodesToRemove(List<NodesToRemoveForDecreaseDBInstanceNodeNumberInput> nodesToRemove) {
    this.nodesToRemove = nodesToRemove;
    return this;
  }

  public DecreaseDBInstanceNodeNumberRequest addNodesToRemoveItem(NodesToRemoveForDecreaseDBInstanceNodeNumberInput nodesToRemoveItem) {
    if (this.nodesToRemove == null) {
      this.nodesToRemove = new ArrayList<NodesToRemoveForDecreaseDBInstanceNodeNumberInput>();
    }
    this.nodesToRemove.add(nodesToRemoveItem);
    return this;
  }

   /**
   * Get nodesToRemove
   * @return nodesToRemove
  **/
  @Valid
  @Schema(description = "")
  public List<NodesToRemoveForDecreaseDBInstanceNodeNumberInput> getNodesToRemove() {
    return nodesToRemove;
  }

  public void setNodesToRemove(List<NodesToRemoveForDecreaseDBInstanceNodeNumberInput> nodesToRemove) {
    this.nodesToRemove = nodesToRemove;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DecreaseDBInstanceNodeNumberRequest decreaseDBInstanceNodeNumberRequest = (DecreaseDBInstanceNodeNumberRequest) o;
    return Objects.equals(this.applyImmediately, decreaseDBInstanceNodeNumberRequest.applyImmediately) &&
        Objects.equals(this.backupPointName, decreaseDBInstanceNodeNumberRequest.backupPointName) &&
        Objects.equals(this.clientToken, decreaseDBInstanceNodeNumberRequest.clientToken) &&
        Objects.equals(this.createBackup, decreaseDBInstanceNodeNumberRequest.createBackup) &&
        Objects.equals(this.instanceId, decreaseDBInstanceNodeNumberRequest.instanceId) &&
        Objects.equals(this.nodesNumberToDecrease, decreaseDBInstanceNodeNumberRequest.nodesNumberToDecrease) &&
        Objects.equals(this.nodesToRemove, decreaseDBInstanceNodeNumberRequest.nodesToRemove);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applyImmediately, backupPointName, clientToken, createBackup, instanceId, nodesNumberToDecrease, nodesToRemove);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DecreaseDBInstanceNodeNumberRequest {\n");
    
    sb.append("    applyImmediately: ").append(toIndentedString(applyImmediately)).append("\n");
    sb.append("    backupPointName: ").append(toIndentedString(backupPointName)).append("\n");
    sb.append("    clientToken: ").append(toIndentedString(clientToken)).append("\n");
    sb.append("    createBackup: ").append(toIndentedString(createBackup)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    nodesNumberToDecrease: ").append(toIndentedString(nodesNumberToDecrease)).append("\n");
    sb.append("    nodesToRemove: ").append(toIndentedString(nodesToRemove)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
