/*
 * redis
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.redis.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.redis.model.CapacityForDescribeDBInstanceDetailOutput;
import com.volcengine.redis.model.ConfigureNodeForDescribeDBInstanceDetailOutput;
import com.volcengine.redis.model.TagForDescribeDBInstanceDetailOutput;
import com.volcengine.redis.model.VisitAddrForDescribeDBInstanceDetailOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * DescribeDBInstanceDetailResponse
 */



public class DescribeDBInstanceDetailResponse extends com.volcengine.model.AbstractResponse {
  @SerializedName("AutoRenew")
  private Boolean autoRenew = null;

  @SerializedName("Capacity")
  private CapacityForDescribeDBInstanceDetailOutput capacity = null;

  @SerializedName("ChargeType")
  private String chargeType = null;

  @SerializedName("ConfigureNodes")
  private List<ConfigureNodeForDescribeDBInstanceDetailOutput> configureNodes = null;

  @SerializedName("CreateTime")
  private String createTime = null;

  @SerializedName("DataLayout")
  private String dataLayout = null;

  @SerializedName("DeletionProtection")
  private String deletionProtection = null;

  @SerializedName("EngineVersion")
  private String engineVersion = null;

  @SerializedName("ExpiredTime")
  private String expiredTime = null;

  @SerializedName("InstanceClass")
  private String instanceClass = null;

  @SerializedName("InstanceId")
  private String instanceId = null;

  @SerializedName("InstanceName")
  private String instanceName = null;

  @SerializedName("MaintenanceTime")
  private String maintenanceTime = null;

  @SerializedName("MaxConnections")
  private Integer maxConnections = null;

  @SerializedName("MultiAZ")
  private String multiAZ = null;

  @SerializedName("NodeNumber")
  private Integer nodeNumber = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("RegionId")
  private String regionId = null;

  @SerializedName("ShardCapacity")
  private Double shardCapacity = null;

  @SerializedName("ShardCapacityV2")
  private Long shardCapacityV2 = null;

  @SerializedName("ShardNumber")
  private Integer shardNumber = null;

  @SerializedName("ShardedCluster")
  private Integer shardedCluster = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("SubnetId")
  private String subnetId = null;

  @SerializedName("Tags")
  private List<TagForDescribeDBInstanceDetailOutput> tags = null;

  @SerializedName("VisitAddrs")
  private List<VisitAddrForDescribeDBInstanceDetailOutput> visitAddrs = null;

  @SerializedName("VpcAuthMode")
  private String vpcAuthMode = null;

  @SerializedName("VpcId")
  private String vpcId = null;

  @SerializedName("ZoneIds")
  private List<String> zoneIds = null;

  public DescribeDBInstanceDetailResponse autoRenew(Boolean autoRenew) {
    this.autoRenew = autoRenew;
    return this;
  }

   /**
   * Get autoRenew
   * @return autoRenew
  **/
  @Schema(description = "")
  public Boolean isAutoRenew() {
    return autoRenew;
  }

  public void setAutoRenew(Boolean autoRenew) {
    this.autoRenew = autoRenew;
  }

  public DescribeDBInstanceDetailResponse capacity(CapacityForDescribeDBInstanceDetailOutput capacity) {
    this.capacity = capacity;
    return this;
  }

   /**
   * Get capacity
   * @return capacity
  **/
  @Valid
  @Schema(description = "")
  public CapacityForDescribeDBInstanceDetailOutput getCapacity() {
    return capacity;
  }

  public void setCapacity(CapacityForDescribeDBInstanceDetailOutput capacity) {
    this.capacity = capacity;
  }

  public DescribeDBInstanceDetailResponse chargeType(String chargeType) {
    this.chargeType = chargeType;
    return this;
  }

   /**
   * Get chargeType
   * @return chargeType
  **/
  @Schema(description = "")
  public String getChargeType() {
    return chargeType;
  }

  public void setChargeType(String chargeType) {
    this.chargeType = chargeType;
  }

  public DescribeDBInstanceDetailResponse configureNodes(List<ConfigureNodeForDescribeDBInstanceDetailOutput> configureNodes) {
    this.configureNodes = configureNodes;
    return this;
  }

  public DescribeDBInstanceDetailResponse addConfigureNodesItem(ConfigureNodeForDescribeDBInstanceDetailOutput configureNodesItem) {
    if (this.configureNodes == null) {
      this.configureNodes = new ArrayList<ConfigureNodeForDescribeDBInstanceDetailOutput>();
    }
    this.configureNodes.add(configureNodesItem);
    return this;
  }

   /**
   * Get configureNodes
   * @return configureNodes
  **/
  @Valid
  @Schema(description = "")
  public List<ConfigureNodeForDescribeDBInstanceDetailOutput> getConfigureNodes() {
    return configureNodes;
  }

  public void setConfigureNodes(List<ConfigureNodeForDescribeDBInstanceDetailOutput> configureNodes) {
    this.configureNodes = configureNodes;
  }

  public DescribeDBInstanceDetailResponse createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @Schema(description = "")
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }

  public DescribeDBInstanceDetailResponse dataLayout(String dataLayout) {
    this.dataLayout = dataLayout;
    return this;
  }

   /**
   * Get dataLayout
   * @return dataLayout
  **/
  @Schema(description = "")
  public String getDataLayout() {
    return dataLayout;
  }

  public void setDataLayout(String dataLayout) {
    this.dataLayout = dataLayout;
  }

  public DescribeDBInstanceDetailResponse deletionProtection(String deletionProtection) {
    this.deletionProtection = deletionProtection;
    return this;
  }

   /**
   * Get deletionProtection
   * @return deletionProtection
  **/
  @Schema(description = "")
  public String getDeletionProtection() {
    return deletionProtection;
  }

  public void setDeletionProtection(String deletionProtection) {
    this.deletionProtection = deletionProtection;
  }

  public DescribeDBInstanceDetailResponse engineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
    return this;
  }

   /**
   * Get engineVersion
   * @return engineVersion
  **/
  @Schema(description = "")
  public String getEngineVersion() {
    return engineVersion;
  }

  public void setEngineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
  }

  public DescribeDBInstanceDetailResponse expiredTime(String expiredTime) {
    this.expiredTime = expiredTime;
    return this;
  }

   /**
   * Get expiredTime
   * @return expiredTime
  **/
  @Schema(description = "")
  public String getExpiredTime() {
    return expiredTime;
  }

  public void setExpiredTime(String expiredTime) {
    this.expiredTime = expiredTime;
  }

  public DescribeDBInstanceDetailResponse instanceClass(String instanceClass) {
    this.instanceClass = instanceClass;
    return this;
  }

   /**
   * Get instanceClass
   * @return instanceClass
  **/
  @Schema(description = "")
  public String getInstanceClass() {
    return instanceClass;
  }

  public void setInstanceClass(String instanceClass) {
    this.instanceClass = instanceClass;
  }

  public DescribeDBInstanceDetailResponse instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * Get instanceId
   * @return instanceId
  **/
  @Schema(description = "")
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }

  public DescribeDBInstanceDetailResponse instanceName(String instanceName) {
    this.instanceName = instanceName;
    return this;
  }

   /**
   * Get instanceName
   * @return instanceName
  **/
  @Schema(description = "")
  public String getInstanceName() {
    return instanceName;
  }

  public void setInstanceName(String instanceName) {
    this.instanceName = instanceName;
  }

  public DescribeDBInstanceDetailResponse maintenanceTime(String maintenanceTime) {
    this.maintenanceTime = maintenanceTime;
    return this;
  }

   /**
   * Get maintenanceTime
   * @return maintenanceTime
  **/
  @Schema(description = "")
  public String getMaintenanceTime() {
    return maintenanceTime;
  }

  public void setMaintenanceTime(String maintenanceTime) {
    this.maintenanceTime = maintenanceTime;
  }

  public DescribeDBInstanceDetailResponse maxConnections(Integer maxConnections) {
    this.maxConnections = maxConnections;
    return this;
  }

   /**
   * Get maxConnections
   * @return maxConnections
  **/
  @Schema(description = "")
  public Integer getMaxConnections() {
    return maxConnections;
  }

  public void setMaxConnections(Integer maxConnections) {
    this.maxConnections = maxConnections;
  }

  public DescribeDBInstanceDetailResponse multiAZ(String multiAZ) {
    this.multiAZ = multiAZ;
    return this;
  }

   /**
   * Get multiAZ
   * @return multiAZ
  **/
  @Schema(description = "")
  public String getMultiAZ() {
    return multiAZ;
  }

  public void setMultiAZ(String multiAZ) {
    this.multiAZ = multiAZ;
  }

  public DescribeDBInstanceDetailResponse nodeNumber(Integer nodeNumber) {
    this.nodeNumber = nodeNumber;
    return this;
  }

   /**
   * Get nodeNumber
   * @return nodeNumber
  **/
  @Schema(description = "")
  public Integer getNodeNumber() {
    return nodeNumber;
  }

  public void setNodeNumber(Integer nodeNumber) {
    this.nodeNumber = nodeNumber;
  }

  public DescribeDBInstanceDetailResponse projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @Schema(description = "")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public DescribeDBInstanceDetailResponse regionId(String regionId) {
    this.regionId = regionId;
    return this;
  }

   /**
   * Get regionId
   * @return regionId
  **/
  @Schema(description = "")
  public String getRegionId() {
    return regionId;
  }

  public void setRegionId(String regionId) {
    this.regionId = regionId;
  }

  public DescribeDBInstanceDetailResponse shardCapacity(Double shardCapacity) {
    this.shardCapacity = shardCapacity;
    return this;
  }

   /**
   * Get shardCapacity
   * @return shardCapacity
  **/
  @Schema(description = "")
  public Double getShardCapacity() {
    return shardCapacity;
  }

  public void setShardCapacity(Double shardCapacity) {
    this.shardCapacity = shardCapacity;
  }

  public DescribeDBInstanceDetailResponse shardCapacityV2(Long shardCapacityV2) {
    this.shardCapacityV2 = shardCapacityV2;
    return this;
  }

   /**
   * Get shardCapacityV2
   * @return shardCapacityV2
  **/
  @Schema(description = "")
  public Long getShardCapacityV2() {
    return shardCapacityV2;
  }

  public void setShardCapacityV2(Long shardCapacityV2) {
    this.shardCapacityV2 = shardCapacityV2;
  }

  public DescribeDBInstanceDetailResponse shardNumber(Integer shardNumber) {
    this.shardNumber = shardNumber;
    return this;
  }

   /**
   * Get shardNumber
   * @return shardNumber
  **/
  @Schema(description = "")
  public Integer getShardNumber() {
    return shardNumber;
  }

  public void setShardNumber(Integer shardNumber) {
    this.shardNumber = shardNumber;
  }

  public DescribeDBInstanceDetailResponse shardedCluster(Integer shardedCluster) {
    this.shardedCluster = shardedCluster;
    return this;
  }

   /**
   * Get shardedCluster
   * @return shardedCluster
  **/
  @Schema(description = "")
  public Integer getShardedCluster() {
    return shardedCluster;
  }

  public void setShardedCluster(Integer shardedCluster) {
    this.shardedCluster = shardedCluster;
  }

  public DescribeDBInstanceDetailResponse status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public DescribeDBInstanceDetailResponse subnetId(String subnetId) {
    this.subnetId = subnetId;
    return this;
  }

   /**
   * Get subnetId
   * @return subnetId
  **/
  @Schema(description = "")
  public String getSubnetId() {
    return subnetId;
  }

  public void setSubnetId(String subnetId) {
    this.subnetId = subnetId;
  }

  public DescribeDBInstanceDetailResponse tags(List<TagForDescribeDBInstanceDetailOutput> tags) {
    this.tags = tags;
    return this;
  }

  public DescribeDBInstanceDetailResponse addTagsItem(TagForDescribeDBInstanceDetailOutput tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagForDescribeDBInstanceDetailOutput>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Valid
  @Schema(description = "")
  public List<TagForDescribeDBInstanceDetailOutput> getTags() {
    return tags;
  }

  public void setTags(List<TagForDescribeDBInstanceDetailOutput> tags) {
    this.tags = tags;
  }

  public DescribeDBInstanceDetailResponse visitAddrs(List<VisitAddrForDescribeDBInstanceDetailOutput> visitAddrs) {
    this.visitAddrs = visitAddrs;
    return this;
  }

  public DescribeDBInstanceDetailResponse addVisitAddrsItem(VisitAddrForDescribeDBInstanceDetailOutput visitAddrsItem) {
    if (this.visitAddrs == null) {
      this.visitAddrs = new ArrayList<VisitAddrForDescribeDBInstanceDetailOutput>();
    }
    this.visitAddrs.add(visitAddrsItem);
    return this;
  }

   /**
   * Get visitAddrs
   * @return visitAddrs
  **/
  @Valid
  @Schema(description = "")
  public List<VisitAddrForDescribeDBInstanceDetailOutput> getVisitAddrs() {
    return visitAddrs;
  }

  public void setVisitAddrs(List<VisitAddrForDescribeDBInstanceDetailOutput> visitAddrs) {
    this.visitAddrs = visitAddrs;
  }

  public DescribeDBInstanceDetailResponse vpcAuthMode(String vpcAuthMode) {
    this.vpcAuthMode = vpcAuthMode;
    return this;
  }

   /**
   * Get vpcAuthMode
   * @return vpcAuthMode
  **/
  @Schema(description = "")
  public String getVpcAuthMode() {
    return vpcAuthMode;
  }

  public void setVpcAuthMode(String vpcAuthMode) {
    this.vpcAuthMode = vpcAuthMode;
  }

  public DescribeDBInstanceDetailResponse vpcId(String vpcId) {
    this.vpcId = vpcId;
    return this;
  }

   /**
   * Get vpcId
   * @return vpcId
  **/
  @Schema(description = "")
  public String getVpcId() {
    return vpcId;
  }

  public void setVpcId(String vpcId) {
    this.vpcId = vpcId;
  }

  public DescribeDBInstanceDetailResponse zoneIds(List<String> zoneIds) {
    this.zoneIds = zoneIds;
    return this;
  }

  public DescribeDBInstanceDetailResponse addZoneIdsItem(String zoneIdsItem) {
    if (this.zoneIds == null) {
      this.zoneIds = new ArrayList<String>();
    }
    this.zoneIds.add(zoneIdsItem);
    return this;
  }

   /**
   * Get zoneIds
   * @return zoneIds
  **/
  @Schema(description = "")
  public List<String> getZoneIds() {
    return zoneIds;
  }

  public void setZoneIds(List<String> zoneIds) {
    this.zoneIds = zoneIds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DescribeDBInstanceDetailResponse describeDBInstanceDetailResponse = (DescribeDBInstanceDetailResponse) o;
    return Objects.equals(this.autoRenew, describeDBInstanceDetailResponse.autoRenew) &&
        Objects.equals(this.capacity, describeDBInstanceDetailResponse.capacity) &&
        Objects.equals(this.chargeType, describeDBInstanceDetailResponse.chargeType) &&
        Objects.equals(this.configureNodes, describeDBInstanceDetailResponse.configureNodes) &&
        Objects.equals(this.createTime, describeDBInstanceDetailResponse.createTime) &&
        Objects.equals(this.dataLayout, describeDBInstanceDetailResponse.dataLayout) &&
        Objects.equals(this.deletionProtection, describeDBInstanceDetailResponse.deletionProtection) &&
        Objects.equals(this.engineVersion, describeDBInstanceDetailResponse.engineVersion) &&
        Objects.equals(this.expiredTime, describeDBInstanceDetailResponse.expiredTime) &&
        Objects.equals(this.instanceClass, describeDBInstanceDetailResponse.instanceClass) &&
        Objects.equals(this.instanceId, describeDBInstanceDetailResponse.instanceId) &&
        Objects.equals(this.instanceName, describeDBInstanceDetailResponse.instanceName) &&
        Objects.equals(this.maintenanceTime, describeDBInstanceDetailResponse.maintenanceTime) &&
        Objects.equals(this.maxConnections, describeDBInstanceDetailResponse.maxConnections) &&
        Objects.equals(this.multiAZ, describeDBInstanceDetailResponse.multiAZ) &&
        Objects.equals(this.nodeNumber, describeDBInstanceDetailResponse.nodeNumber) &&
        Objects.equals(this.projectName, describeDBInstanceDetailResponse.projectName) &&
        Objects.equals(this.regionId, describeDBInstanceDetailResponse.regionId) &&
        Objects.equals(this.shardCapacity, describeDBInstanceDetailResponse.shardCapacity) &&
        Objects.equals(this.shardCapacityV2, describeDBInstanceDetailResponse.shardCapacityV2) &&
        Objects.equals(this.shardNumber, describeDBInstanceDetailResponse.shardNumber) &&
        Objects.equals(this.shardedCluster, describeDBInstanceDetailResponse.shardedCluster) &&
        Objects.equals(this.status, describeDBInstanceDetailResponse.status) &&
        Objects.equals(this.subnetId, describeDBInstanceDetailResponse.subnetId) &&
        Objects.equals(this.tags, describeDBInstanceDetailResponse.tags) &&
        Objects.equals(this.visitAddrs, describeDBInstanceDetailResponse.visitAddrs) &&
        Objects.equals(this.vpcAuthMode, describeDBInstanceDetailResponse.vpcAuthMode) &&
        Objects.equals(this.vpcId, describeDBInstanceDetailResponse.vpcId) &&
        Objects.equals(this.zoneIds, describeDBInstanceDetailResponse.zoneIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autoRenew, capacity, chargeType, configureNodes, createTime, dataLayout, deletionProtection, engineVersion, expiredTime, instanceClass, instanceId, instanceName, maintenanceTime, maxConnections, multiAZ, nodeNumber, projectName, regionId, shardCapacity, shardCapacityV2, shardNumber, shardedCluster, status, subnetId, tags, visitAddrs, vpcAuthMode, vpcId, zoneIds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DescribeDBInstanceDetailResponse {\n");
    
    sb.append("    autoRenew: ").append(toIndentedString(autoRenew)).append("\n");
    sb.append("    capacity: ").append(toIndentedString(capacity)).append("\n");
    sb.append("    chargeType: ").append(toIndentedString(chargeType)).append("\n");
    sb.append("    configureNodes: ").append(toIndentedString(configureNodes)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    dataLayout: ").append(toIndentedString(dataLayout)).append("\n");
    sb.append("    deletionProtection: ").append(toIndentedString(deletionProtection)).append("\n");
    sb.append("    engineVersion: ").append(toIndentedString(engineVersion)).append("\n");
    sb.append("    expiredTime: ").append(toIndentedString(expiredTime)).append("\n");
    sb.append("    instanceClass: ").append(toIndentedString(instanceClass)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    instanceName: ").append(toIndentedString(instanceName)).append("\n");
    sb.append("    maintenanceTime: ").append(toIndentedString(maintenanceTime)).append("\n");
    sb.append("    maxConnections: ").append(toIndentedString(maxConnections)).append("\n");
    sb.append("    multiAZ: ").append(toIndentedString(multiAZ)).append("\n");
    sb.append("    nodeNumber: ").append(toIndentedString(nodeNumber)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    regionId: ").append(toIndentedString(regionId)).append("\n");
    sb.append("    shardCapacity: ").append(toIndentedString(shardCapacity)).append("\n");
    sb.append("    shardCapacityV2: ").append(toIndentedString(shardCapacityV2)).append("\n");
    sb.append("    shardNumber: ").append(toIndentedString(shardNumber)).append("\n");
    sb.append("    shardedCluster: ").append(toIndentedString(shardedCluster)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    subnetId: ").append(toIndentedString(subnetId)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    visitAddrs: ").append(toIndentedString(visitAddrs)).append("\n");
    sb.append("    vpcAuthMode: ").append(toIndentedString(vpcAuthMode)).append("\n");
    sb.append("    vpcId: ").append(toIndentedString(vpcId)).append("\n");
    sb.append("    zoneIds: ").append(toIndentedString(zoneIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
