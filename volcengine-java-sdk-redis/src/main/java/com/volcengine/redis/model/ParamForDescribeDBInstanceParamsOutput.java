/*
 * redis
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.redis.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.redis.model.OptionForDescribeDBInstanceParamsOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ParamForDescribeDBInstanceParamsOutput
 */



public class ParamForDescribeDBInstanceParamsOutput {
  @SerializedName("CurrentValue")
  private String currentValue = null;

  @SerializedName("DefaultValue")
  private String defaultValue = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("EditableForInstance")
  private Boolean editableForInstance = null;

  @SerializedName("NeedReboot")
  private Boolean needReboot = null;

  @SerializedName("Options")
  private List<OptionForDescribeDBInstanceParamsOutput> options = null;

  @SerializedName("ParamName")
  private String paramName = null;

  @SerializedName("Range")
  private String range = null;

  @SerializedName("Type")
  private String type = null;

  @SerializedName("Unit")
  private String unit = null;

  public ParamForDescribeDBInstanceParamsOutput currentValue(String currentValue) {
    this.currentValue = currentValue;
    return this;
  }

   /**
   * Get currentValue
   * @return currentValue
  **/
  @Schema(description = "")
  public String getCurrentValue() {
    return currentValue;
  }

  public void setCurrentValue(String currentValue) {
    this.currentValue = currentValue;
  }

  public ParamForDescribeDBInstanceParamsOutput defaultValue(String defaultValue) {
    this.defaultValue = defaultValue;
    return this;
  }

   /**
   * Get defaultValue
   * @return defaultValue
  **/
  @Schema(description = "")
  public String getDefaultValue() {
    return defaultValue;
  }

  public void setDefaultValue(String defaultValue) {
    this.defaultValue = defaultValue;
  }

  public ParamForDescribeDBInstanceParamsOutput description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ParamForDescribeDBInstanceParamsOutput editableForInstance(Boolean editableForInstance) {
    this.editableForInstance = editableForInstance;
    return this;
  }

   /**
   * Get editableForInstance
   * @return editableForInstance
  **/
  @Schema(description = "")
  public Boolean isEditableForInstance() {
    return editableForInstance;
  }

  public void setEditableForInstance(Boolean editableForInstance) {
    this.editableForInstance = editableForInstance;
  }

  public ParamForDescribeDBInstanceParamsOutput needReboot(Boolean needReboot) {
    this.needReboot = needReboot;
    return this;
  }

   /**
   * Get needReboot
   * @return needReboot
  **/
  @Schema(description = "")
  public Boolean isNeedReboot() {
    return needReboot;
  }

  public void setNeedReboot(Boolean needReboot) {
    this.needReboot = needReboot;
  }

  public ParamForDescribeDBInstanceParamsOutput options(List<OptionForDescribeDBInstanceParamsOutput> options) {
    this.options = options;
    return this;
  }

  public ParamForDescribeDBInstanceParamsOutput addOptionsItem(OptionForDescribeDBInstanceParamsOutput optionsItem) {
    if (this.options == null) {
      this.options = new ArrayList<OptionForDescribeDBInstanceParamsOutput>();
    }
    this.options.add(optionsItem);
    return this;
  }

   /**
   * Get options
   * @return options
  **/
  @Valid
  @Schema(description = "")
  public List<OptionForDescribeDBInstanceParamsOutput> getOptions() {
    return options;
  }

  public void setOptions(List<OptionForDescribeDBInstanceParamsOutput> options) {
    this.options = options;
  }

  public ParamForDescribeDBInstanceParamsOutput paramName(String paramName) {
    this.paramName = paramName;
    return this;
  }

   /**
   * Get paramName
   * @return paramName
  **/
  @Schema(description = "")
  public String getParamName() {
    return paramName;
  }

  public void setParamName(String paramName) {
    this.paramName = paramName;
  }

  public ParamForDescribeDBInstanceParamsOutput range(String range) {
    this.range = range;
    return this;
  }

   /**
   * Get range
   * @return range
  **/
  @Schema(description = "")
  public String getRange() {
    return range;
  }

  public void setRange(String range) {
    this.range = range;
  }

  public ParamForDescribeDBInstanceParamsOutput type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public ParamForDescribeDBInstanceParamsOutput unit(String unit) {
    this.unit = unit;
    return this;
  }

   /**
   * Get unit
   * @return unit
  **/
  @Schema(description = "")
  public String getUnit() {
    return unit;
  }

  public void setUnit(String unit) {
    this.unit = unit;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ParamForDescribeDBInstanceParamsOutput paramForDescribeDBInstanceParamsOutput = (ParamForDescribeDBInstanceParamsOutput) o;
    return Objects.equals(this.currentValue, paramForDescribeDBInstanceParamsOutput.currentValue) &&
        Objects.equals(this.defaultValue, paramForDescribeDBInstanceParamsOutput.defaultValue) &&
        Objects.equals(this.description, paramForDescribeDBInstanceParamsOutput.description) &&
        Objects.equals(this.editableForInstance, paramForDescribeDBInstanceParamsOutput.editableForInstance) &&
        Objects.equals(this.needReboot, paramForDescribeDBInstanceParamsOutput.needReboot) &&
        Objects.equals(this.options, paramForDescribeDBInstanceParamsOutput.options) &&
        Objects.equals(this.paramName, paramForDescribeDBInstanceParamsOutput.paramName) &&
        Objects.equals(this.range, paramForDescribeDBInstanceParamsOutput.range) &&
        Objects.equals(this.type, paramForDescribeDBInstanceParamsOutput.type) &&
        Objects.equals(this.unit, paramForDescribeDBInstanceParamsOutput.unit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currentValue, defaultValue, description, editableForInstance, needReboot, options, paramName, range, type, unit);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ParamForDescribeDBInstanceParamsOutput {\n");
    
    sb.append("    currentValue: ").append(toIndentedString(currentValue)).append("\n");
    sb.append("    defaultValue: ").append(toIndentedString(defaultValue)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    editableForInstance: ").append(toIndentedString(editableForInstance)).append("\n");
    sb.append("    needReboot: ").append(toIndentedString(needReboot)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    paramName: ").append(toIndentedString(paramName)).append("\n");
    sb.append("    range: ").append(toIndentedString(range)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
