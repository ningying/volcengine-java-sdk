/*
 * redis
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.redis.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.redis.model.VpcInfoForDescribeBackupsOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * InstanceDetailForDescribeBackupsOutput
 */



public class InstanceDetailForDescribeBackupsOutput {
  @SerializedName("AccountId")
  private Long accountId = null;

  @SerializedName("ArchType")
  private String archType = null;

  @SerializedName("AutoRenew")
  private Boolean autoRenew = null;

  @SerializedName("ChargeType")
  private String chargeType = null;

  @SerializedName("EngineVersion")
  private String engineVersion = null;

  @SerializedName("ExpiredTime")
  private String expiredTime = null;

  @SerializedName("InstanceId")
  private String instanceId = null;

  @SerializedName("InstanceName")
  private String instanceName = null;

  @SerializedName("MaintenanceTime")
  private String maintenanceTime = null;

  @SerializedName("NetworkType")
  private String networkType = null;

  @SerializedName("RegionId")
  private String regionId = null;

  @SerializedName("Replicas")
  private Integer replicas = null;

  @SerializedName("ShardCapacity")
  private Long shardCapacity = null;

  @SerializedName("ShardCount")
  private Integer shardCount = null;

  @SerializedName("TotalCapacity")
  private Long totalCapacity = null;

  @SerializedName("UsedCapacity")
  private Long usedCapacity = null;

  @SerializedName("VpcInfo")
  private VpcInfoForDescribeBackupsOutput vpcInfo = null;

  @SerializedName("ZoneIds")
  private List<String> zoneIds = null;

  public InstanceDetailForDescribeBackupsOutput accountId(Long accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @Schema(description = "")
  public Long getAccountId() {
    return accountId;
  }

  public void setAccountId(Long accountId) {
    this.accountId = accountId;
  }

  public InstanceDetailForDescribeBackupsOutput archType(String archType) {
    this.archType = archType;
    return this;
  }

   /**
   * Get archType
   * @return archType
  **/
  @Schema(description = "")
  public String getArchType() {
    return archType;
  }

  public void setArchType(String archType) {
    this.archType = archType;
  }

  public InstanceDetailForDescribeBackupsOutput autoRenew(Boolean autoRenew) {
    this.autoRenew = autoRenew;
    return this;
  }

   /**
   * Get autoRenew
   * @return autoRenew
  **/
  @Schema(description = "")
  public Boolean isAutoRenew() {
    return autoRenew;
  }

  public void setAutoRenew(Boolean autoRenew) {
    this.autoRenew = autoRenew;
  }

  public InstanceDetailForDescribeBackupsOutput chargeType(String chargeType) {
    this.chargeType = chargeType;
    return this;
  }

   /**
   * Get chargeType
   * @return chargeType
  **/
  @Schema(description = "")
  public String getChargeType() {
    return chargeType;
  }

  public void setChargeType(String chargeType) {
    this.chargeType = chargeType;
  }

  public InstanceDetailForDescribeBackupsOutput engineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
    return this;
  }

   /**
   * Get engineVersion
   * @return engineVersion
  **/
  @Schema(description = "")
  public String getEngineVersion() {
    return engineVersion;
  }

  public void setEngineVersion(String engineVersion) {
    this.engineVersion = engineVersion;
  }

  public InstanceDetailForDescribeBackupsOutput expiredTime(String expiredTime) {
    this.expiredTime = expiredTime;
    return this;
  }

   /**
   * Get expiredTime
   * @return expiredTime
  **/
  @Schema(description = "")
  public String getExpiredTime() {
    return expiredTime;
  }

  public void setExpiredTime(String expiredTime) {
    this.expiredTime = expiredTime;
  }

  public InstanceDetailForDescribeBackupsOutput instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * Get instanceId
   * @return instanceId
  **/
  @Schema(description = "")
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }

  public InstanceDetailForDescribeBackupsOutput instanceName(String instanceName) {
    this.instanceName = instanceName;
    return this;
  }

   /**
   * Get instanceName
   * @return instanceName
  **/
  @Schema(description = "")
  public String getInstanceName() {
    return instanceName;
  }

  public void setInstanceName(String instanceName) {
    this.instanceName = instanceName;
  }

  public InstanceDetailForDescribeBackupsOutput maintenanceTime(String maintenanceTime) {
    this.maintenanceTime = maintenanceTime;
    return this;
  }

   /**
   * Get maintenanceTime
   * @return maintenanceTime
  **/
  @Schema(description = "")
  public String getMaintenanceTime() {
    return maintenanceTime;
  }

  public void setMaintenanceTime(String maintenanceTime) {
    this.maintenanceTime = maintenanceTime;
  }

  public InstanceDetailForDescribeBackupsOutput networkType(String networkType) {
    this.networkType = networkType;
    return this;
  }

   /**
   * Get networkType
   * @return networkType
  **/
  @Schema(description = "")
  public String getNetworkType() {
    return networkType;
  }

  public void setNetworkType(String networkType) {
    this.networkType = networkType;
  }

  public InstanceDetailForDescribeBackupsOutput regionId(String regionId) {
    this.regionId = regionId;
    return this;
  }

   /**
   * Get regionId
   * @return regionId
  **/
  @Schema(description = "")
  public String getRegionId() {
    return regionId;
  }

  public void setRegionId(String regionId) {
    this.regionId = regionId;
  }

  public InstanceDetailForDescribeBackupsOutput replicas(Integer replicas) {
    this.replicas = replicas;
    return this;
  }

   /**
   * Get replicas
   * @return replicas
  **/
  @Schema(description = "")
  public Integer getReplicas() {
    return replicas;
  }

  public void setReplicas(Integer replicas) {
    this.replicas = replicas;
  }

  public InstanceDetailForDescribeBackupsOutput shardCapacity(Long shardCapacity) {
    this.shardCapacity = shardCapacity;
    return this;
  }

   /**
   * Get shardCapacity
   * @return shardCapacity
  **/
  @Schema(description = "")
  public Long getShardCapacity() {
    return shardCapacity;
  }

  public void setShardCapacity(Long shardCapacity) {
    this.shardCapacity = shardCapacity;
  }

  public InstanceDetailForDescribeBackupsOutput shardCount(Integer shardCount) {
    this.shardCount = shardCount;
    return this;
  }

   /**
   * Get shardCount
   * @return shardCount
  **/
  @Schema(description = "")
  public Integer getShardCount() {
    return shardCount;
  }

  public void setShardCount(Integer shardCount) {
    this.shardCount = shardCount;
  }

  public InstanceDetailForDescribeBackupsOutput totalCapacity(Long totalCapacity) {
    this.totalCapacity = totalCapacity;
    return this;
  }

   /**
   * Get totalCapacity
   * @return totalCapacity
  **/
  @Schema(description = "")
  public Long getTotalCapacity() {
    return totalCapacity;
  }

  public void setTotalCapacity(Long totalCapacity) {
    this.totalCapacity = totalCapacity;
  }

  public InstanceDetailForDescribeBackupsOutput usedCapacity(Long usedCapacity) {
    this.usedCapacity = usedCapacity;
    return this;
  }

   /**
   * Get usedCapacity
   * @return usedCapacity
  **/
  @Schema(description = "")
  public Long getUsedCapacity() {
    return usedCapacity;
  }

  public void setUsedCapacity(Long usedCapacity) {
    this.usedCapacity = usedCapacity;
  }

  public InstanceDetailForDescribeBackupsOutput vpcInfo(VpcInfoForDescribeBackupsOutput vpcInfo) {
    this.vpcInfo = vpcInfo;
    return this;
  }

   /**
   * Get vpcInfo
   * @return vpcInfo
  **/
  @Valid
  @Schema(description = "")
  public VpcInfoForDescribeBackupsOutput getVpcInfo() {
    return vpcInfo;
  }

  public void setVpcInfo(VpcInfoForDescribeBackupsOutput vpcInfo) {
    this.vpcInfo = vpcInfo;
  }

  public InstanceDetailForDescribeBackupsOutput zoneIds(List<String> zoneIds) {
    this.zoneIds = zoneIds;
    return this;
  }

  public InstanceDetailForDescribeBackupsOutput addZoneIdsItem(String zoneIdsItem) {
    if (this.zoneIds == null) {
      this.zoneIds = new ArrayList<String>();
    }
    this.zoneIds.add(zoneIdsItem);
    return this;
  }

   /**
   * Get zoneIds
   * @return zoneIds
  **/
  @Schema(description = "")
  public List<String> getZoneIds() {
    return zoneIds;
  }

  public void setZoneIds(List<String> zoneIds) {
    this.zoneIds = zoneIds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstanceDetailForDescribeBackupsOutput instanceDetailForDescribeBackupsOutput = (InstanceDetailForDescribeBackupsOutput) o;
    return Objects.equals(this.accountId, instanceDetailForDescribeBackupsOutput.accountId) &&
        Objects.equals(this.archType, instanceDetailForDescribeBackupsOutput.archType) &&
        Objects.equals(this.autoRenew, instanceDetailForDescribeBackupsOutput.autoRenew) &&
        Objects.equals(this.chargeType, instanceDetailForDescribeBackupsOutput.chargeType) &&
        Objects.equals(this.engineVersion, instanceDetailForDescribeBackupsOutput.engineVersion) &&
        Objects.equals(this.expiredTime, instanceDetailForDescribeBackupsOutput.expiredTime) &&
        Objects.equals(this.instanceId, instanceDetailForDescribeBackupsOutput.instanceId) &&
        Objects.equals(this.instanceName, instanceDetailForDescribeBackupsOutput.instanceName) &&
        Objects.equals(this.maintenanceTime, instanceDetailForDescribeBackupsOutput.maintenanceTime) &&
        Objects.equals(this.networkType, instanceDetailForDescribeBackupsOutput.networkType) &&
        Objects.equals(this.regionId, instanceDetailForDescribeBackupsOutput.regionId) &&
        Objects.equals(this.replicas, instanceDetailForDescribeBackupsOutput.replicas) &&
        Objects.equals(this.shardCapacity, instanceDetailForDescribeBackupsOutput.shardCapacity) &&
        Objects.equals(this.shardCount, instanceDetailForDescribeBackupsOutput.shardCount) &&
        Objects.equals(this.totalCapacity, instanceDetailForDescribeBackupsOutput.totalCapacity) &&
        Objects.equals(this.usedCapacity, instanceDetailForDescribeBackupsOutput.usedCapacity) &&
        Objects.equals(this.vpcInfo, instanceDetailForDescribeBackupsOutput.vpcInfo) &&
        Objects.equals(this.zoneIds, instanceDetailForDescribeBackupsOutput.zoneIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, archType, autoRenew, chargeType, engineVersion, expiredTime, instanceId, instanceName, maintenanceTime, networkType, regionId, replicas, shardCapacity, shardCount, totalCapacity, usedCapacity, vpcInfo, zoneIds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstanceDetailForDescribeBackupsOutput {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    archType: ").append(toIndentedString(archType)).append("\n");
    sb.append("    autoRenew: ").append(toIndentedString(autoRenew)).append("\n");
    sb.append("    chargeType: ").append(toIndentedString(chargeType)).append("\n");
    sb.append("    engineVersion: ").append(toIndentedString(engineVersion)).append("\n");
    sb.append("    expiredTime: ").append(toIndentedString(expiredTime)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    instanceName: ").append(toIndentedString(instanceName)).append("\n");
    sb.append("    maintenanceTime: ").append(toIndentedString(maintenanceTime)).append("\n");
    sb.append("    networkType: ").append(toIndentedString(networkType)).append("\n");
    sb.append("    regionId: ").append(toIndentedString(regionId)).append("\n");
    sb.append("    replicas: ").append(toIndentedString(replicas)).append("\n");
    sb.append("    shardCapacity: ").append(toIndentedString(shardCapacity)).append("\n");
    sb.append("    shardCount: ").append(toIndentedString(shardCount)).append("\n");
    sb.append("    totalCapacity: ").append(toIndentedString(totalCapacity)).append("\n");
    sb.append("    usedCapacity: ").append(toIndentedString(usedCapacity)).append("\n");
    sb.append("    vpcInfo: ").append(toIndentedString(vpcInfo)).append("\n");
    sb.append("    zoneIds: ").append(toIndentedString(zoneIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
