/*
 * redis
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.redis.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.redis.model.ServerNodeForDescribeDBInstanceShardsOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * InstanceShardForDescribeDBInstanceShardsOutput
 */



public class InstanceShardForDescribeDBInstanceShardsOutput {
  @SerializedName("NodeNumber")
  private Integer nodeNumber = null;

  @SerializedName("ServerNodes")
  private List<ServerNodeForDescribeDBInstanceShardsOutput> serverNodes = null;

  @SerializedName("ShardId")
  private String shardId = null;

  public InstanceShardForDescribeDBInstanceShardsOutput nodeNumber(Integer nodeNumber) {
    this.nodeNumber = nodeNumber;
    return this;
  }

   /**
   * Get nodeNumber
   * @return nodeNumber
  **/
  @Schema(description = "")
  public Integer getNodeNumber() {
    return nodeNumber;
  }

  public void setNodeNumber(Integer nodeNumber) {
    this.nodeNumber = nodeNumber;
  }

  public InstanceShardForDescribeDBInstanceShardsOutput serverNodes(List<ServerNodeForDescribeDBInstanceShardsOutput> serverNodes) {
    this.serverNodes = serverNodes;
    return this;
  }

  public InstanceShardForDescribeDBInstanceShardsOutput addServerNodesItem(ServerNodeForDescribeDBInstanceShardsOutput serverNodesItem) {
    if (this.serverNodes == null) {
      this.serverNodes = new ArrayList<ServerNodeForDescribeDBInstanceShardsOutput>();
    }
    this.serverNodes.add(serverNodesItem);
    return this;
  }

   /**
   * Get serverNodes
   * @return serverNodes
  **/
  @Valid
  @Schema(description = "")
  public List<ServerNodeForDescribeDBInstanceShardsOutput> getServerNodes() {
    return serverNodes;
  }

  public void setServerNodes(List<ServerNodeForDescribeDBInstanceShardsOutput> serverNodes) {
    this.serverNodes = serverNodes;
  }

  public InstanceShardForDescribeDBInstanceShardsOutput shardId(String shardId) {
    this.shardId = shardId;
    return this;
  }

   /**
   * Get shardId
   * @return shardId
  **/
  @Schema(description = "")
  public String getShardId() {
    return shardId;
  }

  public void setShardId(String shardId) {
    this.shardId = shardId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstanceShardForDescribeDBInstanceShardsOutput instanceShardForDescribeDBInstanceShardsOutput = (InstanceShardForDescribeDBInstanceShardsOutput) o;
    return Objects.equals(this.nodeNumber, instanceShardForDescribeDBInstanceShardsOutput.nodeNumber) &&
        Objects.equals(this.serverNodes, instanceShardForDescribeDBInstanceShardsOutput.serverNodes) &&
        Objects.equals(this.shardId, instanceShardForDescribeDBInstanceShardsOutput.shardId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nodeNumber, serverNodes, shardId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstanceShardForDescribeDBInstanceShardsOutput {\n");
    
    sb.append("    nodeNumber: ").append(toIndentedString(nodeNumber)).append("\n");
    sb.append("    serverNodes: ").append(toIndentedString(serverNodes)).append("\n");
    sb.append("    shardId: ").append(toIndentedString(shardId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
