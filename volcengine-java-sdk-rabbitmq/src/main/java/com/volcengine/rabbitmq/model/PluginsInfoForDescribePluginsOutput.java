/*
 * rabbitmq
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.rabbitmq.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * PluginsInfoForDescribePluginsOutput
 */



public class PluginsInfoForDescribePluginsOutput {
  @SerializedName("Description")
  private String description = null;

  @SerializedName("DisablePrompt")
  private String disablePrompt = null;

  @SerializedName("EnablePrompt")
  private String enablePrompt = null;

  @SerializedName("Enabled")
  private Boolean enabled = null;

  @SerializedName("NeedRebootOnChange")
  private Boolean needRebootOnChange = null;

  @SerializedName("PluginName")
  private String pluginName = null;

  @SerializedName("Port")
  private Integer port = null;

  @SerializedName("Version")
  private String version = null;

  public PluginsInfoForDescribePluginsOutput description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public PluginsInfoForDescribePluginsOutput disablePrompt(String disablePrompt) {
    this.disablePrompt = disablePrompt;
    return this;
  }

   /**
   * Get disablePrompt
   * @return disablePrompt
  **/
  @Schema(description = "")
  public String getDisablePrompt() {
    return disablePrompt;
  }

  public void setDisablePrompt(String disablePrompt) {
    this.disablePrompt = disablePrompt;
  }

  public PluginsInfoForDescribePluginsOutput enablePrompt(String enablePrompt) {
    this.enablePrompt = enablePrompt;
    return this;
  }

   /**
   * Get enablePrompt
   * @return enablePrompt
  **/
  @Schema(description = "")
  public String getEnablePrompt() {
    return enablePrompt;
  }

  public void setEnablePrompt(String enablePrompt) {
    this.enablePrompt = enablePrompt;
  }

  public PluginsInfoForDescribePluginsOutput enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @Schema(description = "")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public PluginsInfoForDescribePluginsOutput needRebootOnChange(Boolean needRebootOnChange) {
    this.needRebootOnChange = needRebootOnChange;
    return this;
  }

   /**
   * Get needRebootOnChange
   * @return needRebootOnChange
  **/
  @Schema(description = "")
  public Boolean isNeedRebootOnChange() {
    return needRebootOnChange;
  }

  public void setNeedRebootOnChange(Boolean needRebootOnChange) {
    this.needRebootOnChange = needRebootOnChange;
  }

  public PluginsInfoForDescribePluginsOutput pluginName(String pluginName) {
    this.pluginName = pluginName;
    return this;
  }

   /**
   * Get pluginName
   * @return pluginName
  **/
  @Schema(description = "")
  public String getPluginName() {
    return pluginName;
  }

  public void setPluginName(String pluginName) {
    this.pluginName = pluginName;
  }

  public PluginsInfoForDescribePluginsOutput port(Integer port) {
    this.port = port;
    return this;
  }

   /**
   * Get port
   * @return port
  **/
  @Schema(description = "")
  public Integer getPort() {
    return port;
  }

  public void setPort(Integer port) {
    this.port = port;
  }

  public PluginsInfoForDescribePluginsOutput version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @Schema(description = "")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PluginsInfoForDescribePluginsOutput pluginsInfoForDescribePluginsOutput = (PluginsInfoForDescribePluginsOutput) o;
    return Objects.equals(this.description, pluginsInfoForDescribePluginsOutput.description) &&
        Objects.equals(this.disablePrompt, pluginsInfoForDescribePluginsOutput.disablePrompt) &&
        Objects.equals(this.enablePrompt, pluginsInfoForDescribePluginsOutput.enablePrompt) &&
        Objects.equals(this.enabled, pluginsInfoForDescribePluginsOutput.enabled) &&
        Objects.equals(this.needRebootOnChange, pluginsInfoForDescribePluginsOutput.needRebootOnChange) &&
        Objects.equals(this.pluginName, pluginsInfoForDescribePluginsOutput.pluginName) &&
        Objects.equals(this.port, pluginsInfoForDescribePluginsOutput.port) &&
        Objects.equals(this.version, pluginsInfoForDescribePluginsOutput.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, disablePrompt, enablePrompt, enabled, needRebootOnChange, pluginName, port, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PluginsInfoForDescribePluginsOutput {\n");
    
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    disablePrompt: ").append(toIndentedString(disablePrompt)).append("\n");
    sb.append("    enablePrompt: ").append(toIndentedString(enablePrompt)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    needRebootOnChange: ").append(toIndentedString(needRebootOnChange)).append("\n");
    sb.append("    pluginName: ").append(toIndentedString(pluginName)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
