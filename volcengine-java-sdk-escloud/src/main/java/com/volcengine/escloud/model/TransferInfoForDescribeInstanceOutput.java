/*
 * escloud
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.escloud.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.escloud.model.ReduceSpecConfigForDescribeInstanceOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * TransferInfoForDescribeInstanceOutput
 */



public class TransferInfoForDescribeInstanceOutput {
  @SerializedName("ForbidStop")
  private Boolean forbidStop = null;

  @SerializedName("ReduceSpecConfig")
  private ReduceSpecConfigForDescribeInstanceOutput reduceSpecConfig = null;

  @SerializedName("TransferProgress")
  private Double transferProgress = null;

  /**
   * Gets or Sets transferStatus
   */
  @JsonAdapter(TransferStatusEnum.Adapter.class)
  public enum TransferStatusEnum {
    @SerializedName("CREATED")
    CREATED("CREATED"),
    @SerializedName("RUNNING")
    RUNNING("RUNNING"),
    @SerializedName("FINISH")
    FINISH("FINISH"),
    @SerializedName("CANCELING")
    CANCELING("CANCELING"),
    @SerializedName("CANCEL")
    CANCEL("CANCEL"),
    @SerializedName("CANCEL_FAILED")
    CANCEL_FAILED("CANCEL_FAILED"),
    @SerializedName("TIMEOUT")
    TIMEOUT("TIMEOUT"),
    @SerializedName("SHRINK_COMPLETE")
    SHRINK_COMPLETE("SHRINK_COMPLETE");

    private String value;

    TransferStatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TransferStatusEnum fromValue(String input) {
      for (TransferStatusEnum b : TransferStatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TransferStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TransferStatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public TransferStatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return TransferStatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("TransferStatus")
  private TransferStatusEnum transferStatus = null;

  @SerializedName("TransferTaskId")
  private String transferTaskId = null;

  public TransferInfoForDescribeInstanceOutput forbidStop(Boolean forbidStop) {
    this.forbidStop = forbidStop;
    return this;
  }

   /**
   * Get forbidStop
   * @return forbidStop
  **/
  @Schema(description = "")
  public Boolean isForbidStop() {
    return forbidStop;
  }

  public void setForbidStop(Boolean forbidStop) {
    this.forbidStop = forbidStop;
  }

  public TransferInfoForDescribeInstanceOutput reduceSpecConfig(ReduceSpecConfigForDescribeInstanceOutput reduceSpecConfig) {
    this.reduceSpecConfig = reduceSpecConfig;
    return this;
  }

   /**
   * Get reduceSpecConfig
   * @return reduceSpecConfig
  **/
  @Valid
  @Schema(description = "")
  public ReduceSpecConfigForDescribeInstanceOutput getReduceSpecConfig() {
    return reduceSpecConfig;
  }

  public void setReduceSpecConfig(ReduceSpecConfigForDescribeInstanceOutput reduceSpecConfig) {
    this.reduceSpecConfig = reduceSpecConfig;
  }

  public TransferInfoForDescribeInstanceOutput transferProgress(Double transferProgress) {
    this.transferProgress = transferProgress;
    return this;
  }

   /**
   * Get transferProgress
   * @return transferProgress
  **/
  @Schema(description = "")
  public Double getTransferProgress() {
    return transferProgress;
  }

  public void setTransferProgress(Double transferProgress) {
    this.transferProgress = transferProgress;
  }

  public TransferInfoForDescribeInstanceOutput transferStatus(TransferStatusEnum transferStatus) {
    this.transferStatus = transferStatus;
    return this;
  }

   /**
   * Get transferStatus
   * @return transferStatus
  **/
  @Schema(description = "")
  public TransferStatusEnum getTransferStatus() {
    return transferStatus;
  }

  public void setTransferStatus(TransferStatusEnum transferStatus) {
    this.transferStatus = transferStatus;
  }

  public TransferInfoForDescribeInstanceOutput transferTaskId(String transferTaskId) {
    this.transferTaskId = transferTaskId;
    return this;
  }

   /**
   * Get transferTaskId
   * @return transferTaskId
  **/
  @Schema(description = "")
  public String getTransferTaskId() {
    return transferTaskId;
  }

  public void setTransferTaskId(String transferTaskId) {
    this.transferTaskId = transferTaskId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransferInfoForDescribeInstanceOutput transferInfoForDescribeInstanceOutput = (TransferInfoForDescribeInstanceOutput) o;
    return Objects.equals(this.forbidStop, transferInfoForDescribeInstanceOutput.forbidStop) &&
        Objects.equals(this.reduceSpecConfig, transferInfoForDescribeInstanceOutput.reduceSpecConfig) &&
        Objects.equals(this.transferProgress, transferInfoForDescribeInstanceOutput.transferProgress) &&
        Objects.equals(this.transferStatus, transferInfoForDescribeInstanceOutput.transferStatus) &&
        Objects.equals(this.transferTaskId, transferInfoForDescribeInstanceOutput.transferTaskId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(forbidStop, reduceSpecConfig, transferProgress, transferStatus, transferTaskId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransferInfoForDescribeInstanceOutput {\n");
    
    sb.append("    forbidStop: ").append(toIndentedString(forbidStop)).append("\n");
    sb.append("    reduceSpecConfig: ").append(toIndentedString(reduceSpecConfig)).append("\n");
    sb.append("    transferProgress: ").append(toIndentedString(transferProgress)).append("\n");
    sb.append("    transferStatus: ").append(toIndentedString(transferStatus)).append("\n");
    sb.append("    transferTaskId: ").append(toIndentedString(transferTaskId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
