/*
 * escloud
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.escloud.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * NodeAvailableSpecForDescribeNodeAvailableSpecsOutput
 */



public class NodeAvailableSpecForDescribeNodeAvailableSpecsOutput {
  @SerializedName("ResourceSpecNames")
  private List<String> resourceSpecNames = null;

  @SerializedName("StorageSpecNames")
  private List<String> storageSpecNames = null;

  @SerializedName("Type")
  private String type = null;

  public NodeAvailableSpecForDescribeNodeAvailableSpecsOutput resourceSpecNames(List<String> resourceSpecNames) {
    this.resourceSpecNames = resourceSpecNames;
    return this;
  }

  public NodeAvailableSpecForDescribeNodeAvailableSpecsOutput addResourceSpecNamesItem(String resourceSpecNamesItem) {
    if (this.resourceSpecNames == null) {
      this.resourceSpecNames = new ArrayList<String>();
    }
    this.resourceSpecNames.add(resourceSpecNamesItem);
    return this;
  }

   /**
   * Get resourceSpecNames
   * @return resourceSpecNames
  **/
  @Schema(description = "")
  public List<String> getResourceSpecNames() {
    return resourceSpecNames;
  }

  public void setResourceSpecNames(List<String> resourceSpecNames) {
    this.resourceSpecNames = resourceSpecNames;
  }

  public NodeAvailableSpecForDescribeNodeAvailableSpecsOutput storageSpecNames(List<String> storageSpecNames) {
    this.storageSpecNames = storageSpecNames;
    return this;
  }

  public NodeAvailableSpecForDescribeNodeAvailableSpecsOutput addStorageSpecNamesItem(String storageSpecNamesItem) {
    if (this.storageSpecNames == null) {
      this.storageSpecNames = new ArrayList<String>();
    }
    this.storageSpecNames.add(storageSpecNamesItem);
    return this;
  }

   /**
   * Get storageSpecNames
   * @return storageSpecNames
  **/
  @Schema(description = "")
  public List<String> getStorageSpecNames() {
    return storageSpecNames;
  }

  public void setStorageSpecNames(List<String> storageSpecNames) {
    this.storageSpecNames = storageSpecNames;
  }

  public NodeAvailableSpecForDescribeNodeAvailableSpecsOutput type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NodeAvailableSpecForDescribeNodeAvailableSpecsOutput nodeAvailableSpecForDescribeNodeAvailableSpecsOutput = (NodeAvailableSpecForDescribeNodeAvailableSpecsOutput) o;
    return Objects.equals(this.resourceSpecNames, nodeAvailableSpecForDescribeNodeAvailableSpecsOutput.resourceSpecNames) &&
        Objects.equals(this.storageSpecNames, nodeAvailableSpecForDescribeNodeAvailableSpecsOutput.storageSpecNames) &&
        Objects.equals(this.type, nodeAvailableSpecForDescribeNodeAvailableSpecsOutput.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(resourceSpecNames, storageSpecNames, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NodeAvailableSpecForDescribeNodeAvailableSpecsOutput {\n");
    
    sb.append("    resourceSpecNames: ").append(toIndentedString(resourceSpecNames)).append("\n");
    sb.append("    storageSpecNames: ").append(toIndentedString(storageSpecNames)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
