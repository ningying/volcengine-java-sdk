/*
 * escloud
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.escloud.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.escloud.model.ResourceSpecForDescribeInstanceNodesOutput;
import com.volcengine.escloud.model.StorageSpecForDescribeInstanceNodesOutput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * NodeForDescribeInstanceNodesOutput
 */



public class NodeForDescribeInstanceNodesOutput {
  @SerializedName("InstanceId")
  private String instanceId = null;

  @SerializedName("IsCold")
  private Boolean isCold = null;

  @SerializedName("IsCoordinator")
  private Boolean isCoordinator = null;

  @SerializedName("IsHot")
  private Boolean isHot = null;

  @SerializedName("IsKibana")
  private Boolean isKibana = null;

  @SerializedName("IsMaster")
  private Boolean isMaster = null;

  @SerializedName("IsWarm")
  private Boolean isWarm = null;

  @SerializedName("NodeDisplayName")
  private String nodeDisplayName = null;

  @SerializedName("NodeName")
  private String nodeName = null;

  @SerializedName("ResourceSpec")
  private ResourceSpecForDescribeInstanceNodesOutput resourceSpec = null;

  @SerializedName("RestartNumber")
  private Integer restartNumber = null;

  @SerializedName("StartTime")
  private String startTime = null;

  @SerializedName("Status")
  private String status = null;

  @SerializedName("StorageSpec")
  private StorageSpecForDescribeInstanceNodesOutput storageSpec = null;

  public NodeForDescribeInstanceNodesOutput instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

   /**
   * Get instanceId
   * @return instanceId
  **/
  @Schema(description = "")
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }

  public NodeForDescribeInstanceNodesOutput isCold(Boolean isCold) {
    this.isCold = isCold;
    return this;
  }

   /**
   * Get isCold
   * @return isCold
  **/
  @Schema(description = "")
  public Boolean isIsCold() {
    return isCold;
  }

  public void setIsCold(Boolean isCold) {
    this.isCold = isCold;
  }

  public NodeForDescribeInstanceNodesOutput isCoordinator(Boolean isCoordinator) {
    this.isCoordinator = isCoordinator;
    return this;
  }

   /**
   * Get isCoordinator
   * @return isCoordinator
  **/
  @Schema(description = "")
  public Boolean isIsCoordinator() {
    return isCoordinator;
  }

  public void setIsCoordinator(Boolean isCoordinator) {
    this.isCoordinator = isCoordinator;
  }

  public NodeForDescribeInstanceNodesOutput isHot(Boolean isHot) {
    this.isHot = isHot;
    return this;
  }

   /**
   * Get isHot
   * @return isHot
  **/
  @Schema(description = "")
  public Boolean isIsHot() {
    return isHot;
  }

  public void setIsHot(Boolean isHot) {
    this.isHot = isHot;
  }

  public NodeForDescribeInstanceNodesOutput isKibana(Boolean isKibana) {
    this.isKibana = isKibana;
    return this;
  }

   /**
   * Get isKibana
   * @return isKibana
  **/
  @Schema(description = "")
  public Boolean isIsKibana() {
    return isKibana;
  }

  public void setIsKibana(Boolean isKibana) {
    this.isKibana = isKibana;
  }

  public NodeForDescribeInstanceNodesOutput isMaster(Boolean isMaster) {
    this.isMaster = isMaster;
    return this;
  }

   /**
   * Get isMaster
   * @return isMaster
  **/
  @Schema(description = "")
  public Boolean isIsMaster() {
    return isMaster;
  }

  public void setIsMaster(Boolean isMaster) {
    this.isMaster = isMaster;
  }

  public NodeForDescribeInstanceNodesOutput isWarm(Boolean isWarm) {
    this.isWarm = isWarm;
    return this;
  }

   /**
   * Get isWarm
   * @return isWarm
  **/
  @Schema(description = "")
  public Boolean isIsWarm() {
    return isWarm;
  }

  public void setIsWarm(Boolean isWarm) {
    this.isWarm = isWarm;
  }

  public NodeForDescribeInstanceNodesOutput nodeDisplayName(String nodeDisplayName) {
    this.nodeDisplayName = nodeDisplayName;
    return this;
  }

   /**
   * Get nodeDisplayName
   * @return nodeDisplayName
  **/
  @Schema(description = "")
  public String getNodeDisplayName() {
    return nodeDisplayName;
  }

  public void setNodeDisplayName(String nodeDisplayName) {
    this.nodeDisplayName = nodeDisplayName;
  }

  public NodeForDescribeInstanceNodesOutput nodeName(String nodeName) {
    this.nodeName = nodeName;
    return this;
  }

   /**
   * Get nodeName
   * @return nodeName
  **/
  @Schema(description = "")
  public String getNodeName() {
    return nodeName;
  }

  public void setNodeName(String nodeName) {
    this.nodeName = nodeName;
  }

  public NodeForDescribeInstanceNodesOutput resourceSpec(ResourceSpecForDescribeInstanceNodesOutput resourceSpec) {
    this.resourceSpec = resourceSpec;
    return this;
  }

   /**
   * Get resourceSpec
   * @return resourceSpec
  **/
  @Valid
  @Schema(description = "")
  public ResourceSpecForDescribeInstanceNodesOutput getResourceSpec() {
    return resourceSpec;
  }

  public void setResourceSpec(ResourceSpecForDescribeInstanceNodesOutput resourceSpec) {
    this.resourceSpec = resourceSpec;
  }

  public NodeForDescribeInstanceNodesOutput restartNumber(Integer restartNumber) {
    this.restartNumber = restartNumber;
    return this;
  }

   /**
   * Get restartNumber
   * @return restartNumber
  **/
  @Schema(description = "")
  public Integer getRestartNumber() {
    return restartNumber;
  }

  public void setRestartNumber(Integer restartNumber) {
    this.restartNumber = restartNumber;
  }

  public NodeForDescribeInstanceNodesOutput startTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @Schema(description = "")
  public String getStartTime() {
    return startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }

  public NodeForDescribeInstanceNodesOutput status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public NodeForDescribeInstanceNodesOutput storageSpec(StorageSpecForDescribeInstanceNodesOutput storageSpec) {
    this.storageSpec = storageSpec;
    return this;
  }

   /**
   * Get storageSpec
   * @return storageSpec
  **/
  @Valid
  @Schema(description = "")
  public StorageSpecForDescribeInstanceNodesOutput getStorageSpec() {
    return storageSpec;
  }

  public void setStorageSpec(StorageSpecForDescribeInstanceNodesOutput storageSpec) {
    this.storageSpec = storageSpec;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NodeForDescribeInstanceNodesOutput nodeForDescribeInstanceNodesOutput = (NodeForDescribeInstanceNodesOutput) o;
    return Objects.equals(this.instanceId, nodeForDescribeInstanceNodesOutput.instanceId) &&
        Objects.equals(this.isCold, nodeForDescribeInstanceNodesOutput.isCold) &&
        Objects.equals(this.isCoordinator, nodeForDescribeInstanceNodesOutput.isCoordinator) &&
        Objects.equals(this.isHot, nodeForDescribeInstanceNodesOutput.isHot) &&
        Objects.equals(this.isKibana, nodeForDescribeInstanceNodesOutput.isKibana) &&
        Objects.equals(this.isMaster, nodeForDescribeInstanceNodesOutput.isMaster) &&
        Objects.equals(this.isWarm, nodeForDescribeInstanceNodesOutput.isWarm) &&
        Objects.equals(this.nodeDisplayName, nodeForDescribeInstanceNodesOutput.nodeDisplayName) &&
        Objects.equals(this.nodeName, nodeForDescribeInstanceNodesOutput.nodeName) &&
        Objects.equals(this.resourceSpec, nodeForDescribeInstanceNodesOutput.resourceSpec) &&
        Objects.equals(this.restartNumber, nodeForDescribeInstanceNodesOutput.restartNumber) &&
        Objects.equals(this.startTime, nodeForDescribeInstanceNodesOutput.startTime) &&
        Objects.equals(this.status, nodeForDescribeInstanceNodesOutput.status) &&
        Objects.equals(this.storageSpec, nodeForDescribeInstanceNodesOutput.storageSpec);
  }

  @Override
  public int hashCode() {
    return Objects.hash(instanceId, isCold, isCoordinator, isHot, isKibana, isMaster, isWarm, nodeDisplayName, nodeName, resourceSpec, restartNumber, startTime, status, storageSpec);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NodeForDescribeInstanceNodesOutput {\n");
    
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    isCold: ").append(toIndentedString(isCold)).append("\n");
    sb.append("    isCoordinator: ").append(toIndentedString(isCoordinator)).append("\n");
    sb.append("    isHot: ").append(toIndentedString(isHot)).append("\n");
    sb.append("    isKibana: ").append(toIndentedString(isKibana)).append("\n");
    sb.append("    isMaster: ").append(toIndentedString(isMaster)).append("\n");
    sb.append("    isWarm: ").append(toIndentedString(isWarm)).append("\n");
    sb.append("    nodeDisplayName: ").append(toIndentedString(nodeDisplayName)).append("\n");
    sb.append("    nodeName: ").append(toIndentedString(nodeName)).append("\n");
    sb.append("    resourceSpec: ").append(toIndentedString(resourceSpec)).append("\n");
    sb.append("    restartNumber: ").append(toIndentedString(restartNumber)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    storageSpec: ").append(toIndentedString(storageSpec)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
