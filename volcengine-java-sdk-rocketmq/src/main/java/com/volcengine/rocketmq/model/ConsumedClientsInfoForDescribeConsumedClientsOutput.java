/*
 * rocketmq
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.rocketmq.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * ConsumedClientsInfoForDescribeConsumedClientsOutput
 */



public class ConsumedClientsInfoForDescribeConsumedClientsOutput {
  @SerializedName("ClientAddress")
  private String clientAddress = null;

  @SerializedName("ClientId")
  private String clientId = null;

  @SerializedName("Diff")
  private Long diff = null;

  @SerializedName("Language")
  private String language = null;

  @SerializedName("Version")
  private String version = null;

  public ConsumedClientsInfoForDescribeConsumedClientsOutput clientAddress(String clientAddress) {
    this.clientAddress = clientAddress;
    return this;
  }

   /**
   * Get clientAddress
   * @return clientAddress
  **/
  @Schema(description = "")
  public String getClientAddress() {
    return clientAddress;
  }

  public void setClientAddress(String clientAddress) {
    this.clientAddress = clientAddress;
  }

  public ConsumedClientsInfoForDescribeConsumedClientsOutput clientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * Get clientId
   * @return clientId
  **/
  @Schema(description = "")
  public String getClientId() {
    return clientId;
  }

  public void setClientId(String clientId) {
    this.clientId = clientId;
  }

  public ConsumedClientsInfoForDescribeConsumedClientsOutput diff(Long diff) {
    this.diff = diff;
    return this;
  }

   /**
   * Get diff
   * @return diff
  **/
  @Schema(description = "")
  public Long getDiff() {
    return diff;
  }

  public void setDiff(Long diff) {
    this.diff = diff;
  }

  public ConsumedClientsInfoForDescribeConsumedClientsOutput language(String language) {
    this.language = language;
    return this;
  }

   /**
   * Get language
   * @return language
  **/
  @Schema(description = "")
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }

  public ConsumedClientsInfoForDescribeConsumedClientsOutput version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @Schema(description = "")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConsumedClientsInfoForDescribeConsumedClientsOutput consumedClientsInfoForDescribeConsumedClientsOutput = (ConsumedClientsInfoForDescribeConsumedClientsOutput) o;
    return Objects.equals(this.clientAddress, consumedClientsInfoForDescribeConsumedClientsOutput.clientAddress) &&
        Objects.equals(this.clientId, consumedClientsInfoForDescribeConsumedClientsOutput.clientId) &&
        Objects.equals(this.diff, consumedClientsInfoForDescribeConsumedClientsOutput.diff) &&
        Objects.equals(this.language, consumedClientsInfoForDescribeConsumedClientsOutput.language) &&
        Objects.equals(this.version, consumedClientsInfoForDescribeConsumedClientsOutput.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientAddress, clientId, diff, language, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConsumedClientsInfoForDescribeConsumedClientsOutput {\n");
    
    sb.append("    clientAddress: ").append(toIndentedString(clientAddress)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    diff: ").append(toIndentedString(diff)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
