/*
 * cv20240606
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.cv20240606.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.volcengine.cv20240606.model.LogoInfoForLensNnsr2PicCommonInput;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * LensNnsr2PicCommonRequest
 */



public class LensNnsr2PicCommonRequest {
  @SerializedName("binary_data_base64")
  private List<String> binaryDataBase64 = null;

  @SerializedName("image_urls")
  private List<String> imageUrls = null;

  @SerializedName("jpg_quality")
  private Integer jpgQuality = null;

  @SerializedName("logo_info")
  private LogoInfoForLensNnsr2PicCommonInput logoInfo = null;

  @SerializedName("model_quality")
  private String modelQuality = null;

  @SerializedName("req_key")
  private String reqKey = null;

  @SerializedName("result_format")
  private Integer resultFormat = null;

  @SerializedName("return_url")
  private Boolean returnUrl = null;

  public LensNnsr2PicCommonRequest binaryDataBase64(List<String> binaryDataBase64) {
    this.binaryDataBase64 = binaryDataBase64;
    return this;
  }

  public LensNnsr2PicCommonRequest addBinaryDataBase64Item(String binaryDataBase64Item) {
    if (this.binaryDataBase64 == null) {
      this.binaryDataBase64 = new ArrayList<String>();
    }
    this.binaryDataBase64.add(binaryDataBase64Item);
    return this;
  }

   /**
   * Get binaryDataBase64
   * @return binaryDataBase64
  **/
  @Schema(description = "")
  public List<String> getBinaryDataBase64() {
    return binaryDataBase64;
  }

  public void setBinaryDataBase64(List<String> binaryDataBase64) {
    this.binaryDataBase64 = binaryDataBase64;
  }

  public LensNnsr2PicCommonRequest imageUrls(List<String> imageUrls) {
    this.imageUrls = imageUrls;
    return this;
  }

  public LensNnsr2PicCommonRequest addImageUrlsItem(String imageUrlsItem) {
    if (this.imageUrls == null) {
      this.imageUrls = new ArrayList<String>();
    }
    this.imageUrls.add(imageUrlsItem);
    return this;
  }

   /**
   * Get imageUrls
   * @return imageUrls
  **/
  @Schema(description = "")
  public List<String> getImageUrls() {
    return imageUrls;
  }

  public void setImageUrls(List<String> imageUrls) {
    this.imageUrls = imageUrls;
  }

  public LensNnsr2PicCommonRequest jpgQuality(Integer jpgQuality) {
    this.jpgQuality = jpgQuality;
    return this;
  }

   /**
   * Get jpgQuality
   * @return jpgQuality
  **/
  @Schema(description = "")
  public Integer getJpgQuality() {
    return jpgQuality;
  }

  public void setJpgQuality(Integer jpgQuality) {
    this.jpgQuality = jpgQuality;
  }

  public LensNnsr2PicCommonRequest logoInfo(LogoInfoForLensNnsr2PicCommonInput logoInfo) {
    this.logoInfo = logoInfo;
    return this;
  }

   /**
   * Get logoInfo
   * @return logoInfo
  **/
  @Valid
  @Schema(description = "")
  public LogoInfoForLensNnsr2PicCommonInput getLogoInfo() {
    return logoInfo;
  }

  public void setLogoInfo(LogoInfoForLensNnsr2PicCommonInput logoInfo) {
    this.logoInfo = logoInfo;
  }

  public LensNnsr2PicCommonRequest modelQuality(String modelQuality) {
    this.modelQuality = modelQuality;
    return this;
  }

   /**
   * Get modelQuality
   * @return modelQuality
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getModelQuality() {
    return modelQuality;
  }

  public void setModelQuality(String modelQuality) {
    this.modelQuality = modelQuality;
  }

  public LensNnsr2PicCommonRequest reqKey(String reqKey) {
    this.reqKey = reqKey;
    return this;
  }

   /**
   * Get reqKey
   * @return reqKey
  **/
  @NotNull
  @Schema(required = true, description = "")
  public String getReqKey() {
    return reqKey;
  }

  public void setReqKey(String reqKey) {
    this.reqKey = reqKey;
  }

  public LensNnsr2PicCommonRequest resultFormat(Integer resultFormat) {
    this.resultFormat = resultFormat;
    return this;
  }

   /**
   * Get resultFormat
   * @return resultFormat
  **/
  @Schema(description = "")
  public Integer getResultFormat() {
    return resultFormat;
  }

  public void setResultFormat(Integer resultFormat) {
    this.resultFormat = resultFormat;
  }

  public LensNnsr2PicCommonRequest returnUrl(Boolean returnUrl) {
    this.returnUrl = returnUrl;
    return this;
  }

   /**
   * Get returnUrl
   * @return returnUrl
  **/
  @Schema(description = "")
  public Boolean isReturnUrl() {
    return returnUrl;
  }

  public void setReturnUrl(Boolean returnUrl) {
    this.returnUrl = returnUrl;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LensNnsr2PicCommonRequest lensNnsr2PicCommonRequest = (LensNnsr2PicCommonRequest) o;
    return Objects.equals(this.binaryDataBase64, lensNnsr2PicCommonRequest.binaryDataBase64) &&
        Objects.equals(this.imageUrls, lensNnsr2PicCommonRequest.imageUrls) &&
        Objects.equals(this.jpgQuality, lensNnsr2PicCommonRequest.jpgQuality) &&
        Objects.equals(this.logoInfo, lensNnsr2PicCommonRequest.logoInfo) &&
        Objects.equals(this.modelQuality, lensNnsr2PicCommonRequest.modelQuality) &&
        Objects.equals(this.reqKey, lensNnsr2PicCommonRequest.reqKey) &&
        Objects.equals(this.resultFormat, lensNnsr2PicCommonRequest.resultFormat) &&
        Objects.equals(this.returnUrl, lensNnsr2PicCommonRequest.returnUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(binaryDataBase64, imageUrls, jpgQuality, logoInfo, modelQuality, reqKey, resultFormat, returnUrl);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LensNnsr2PicCommonRequest {\n");
    
    sb.append("    binaryDataBase64: ").append(toIndentedString(binaryDataBase64)).append("\n");
    sb.append("    imageUrls: ").append(toIndentedString(imageUrls)).append("\n");
    sb.append("    jpgQuality: ").append(toIndentedString(jpgQuality)).append("\n");
    sb.append("    logoInfo: ").append(toIndentedString(logoInfo)).append("\n");
    sb.append("    modelQuality: ").append(toIndentedString(modelQuality)).append("\n");
    sb.append("    reqKey: ").append(toIndentedString(reqKey)).append("\n");
    sb.append("    resultFormat: ").append(toIndentedString(resultFormat)).append("\n");
    sb.append("    returnUrl: ").append(toIndentedString(returnUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
