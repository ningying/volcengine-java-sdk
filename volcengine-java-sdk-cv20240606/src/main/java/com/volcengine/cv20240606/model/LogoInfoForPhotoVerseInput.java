/*
 * cv20240606
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: common-version
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.volcengine.cv20240606.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * LogoInfoForPhotoVerseInput
 */



public class LogoInfoForPhotoVerseInput {
  @SerializedName("add_logo")
  private Boolean addLogo = null;

  @SerializedName("language")
  private Integer language = null;

  @SerializedName("logo_text_content")
  private String logoTextContent = null;

  @SerializedName("position")
  private Integer position = null;

  public LogoInfoForPhotoVerseInput addLogo(Boolean addLogo) {
    this.addLogo = addLogo;
    return this;
  }

   /**
   * Get addLogo
   * @return addLogo
  **/
  @Schema(description = "")
  public Boolean isAddLogo() {
    return addLogo;
  }

  public void setAddLogo(Boolean addLogo) {
    this.addLogo = addLogo;
  }

  public LogoInfoForPhotoVerseInput language(Integer language) {
    this.language = language;
    return this;
  }

   /**
   * Get language
   * @return language
  **/
  @Schema(description = "")
  public Integer getLanguage() {
    return language;
  }

  public void setLanguage(Integer language) {
    this.language = language;
  }

  public LogoInfoForPhotoVerseInput logoTextContent(String logoTextContent) {
    this.logoTextContent = logoTextContent;
    return this;
  }

   /**
   * Get logoTextContent
   * @return logoTextContent
  **/
  @Schema(description = "")
  public String getLogoTextContent() {
    return logoTextContent;
  }

  public void setLogoTextContent(String logoTextContent) {
    this.logoTextContent = logoTextContent;
  }

  public LogoInfoForPhotoVerseInput position(Integer position) {
    this.position = position;
    return this;
  }

   /**
   * Get position
   * @return position
  **/
  @Schema(description = "")
  public Integer getPosition() {
    return position;
  }

  public void setPosition(Integer position) {
    this.position = position;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LogoInfoForPhotoVerseInput logoInfoForPhotoVerseInput = (LogoInfoForPhotoVerseInput) o;
    return Objects.equals(this.addLogo, logoInfoForPhotoVerseInput.addLogo) &&
        Objects.equals(this.language, logoInfoForPhotoVerseInput.language) &&
        Objects.equals(this.logoTextContent, logoInfoForPhotoVerseInput.logoTextContent) &&
        Objects.equals(this.position, logoInfoForPhotoVerseInput.position);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addLogo, language, logoTextContent, position);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LogoInfoForPhotoVerseInput {\n");
    
    sb.append("    addLogo: ").append(toIndentedString(addLogo)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    logoTextContent: ").append(toIndentedString(logoTextContent)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
